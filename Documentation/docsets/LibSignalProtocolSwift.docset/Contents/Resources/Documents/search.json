{"Typealiases.html#/s:22LibSignalProtocolSwift22RatchetIdentityKeyPaira":{"name":"RatchetIdentityKeyPair","abstract":"<p>An elliptic key pair specifically used for identification in a ratchet</p>"},"Structs/SessionBuilder.html#/s:22LibSignalProtocolSwift14SessionBuilderV5storexv":{"name":"store","abstract":"<p>The store to save and retrieve keys from</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:22LibSignalProtocolSwift14SessionBuilderV13remoteAddress0H0Qzv":{"name":"remoteAddress","abstract":"<p>The address of the other party</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:22LibSignalProtocolSwift14SessionBuilderVACyxG7AddressQz06remoteG0_x5storetcfc":{"name":"init(remoteAddress:store:)","abstract":"<p>Constructs a session builder.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:22LibSignalProtocolSwift14SessionBuilderV7processs6UInt32VSgAA06PreKeyB7MessageV03prejbK0_AA0E6RecordC07sessionM0tKF":{"name":"process(preKeySignalMessage:sessionRecord:)","abstract":"<p>Build a new session from a received PreKeySignalMessage.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:22LibSignalProtocolSwift14SessionBuilderV7process33_D02571345287CD336B388FE3A46AC5CELLs6UInt32VSgAA06PreKeyB7MessageV03preqbR2V3_AA0E6RecordC6recordtKF":{"name":"process(preKeySignalMessageV3:record:)","abstract":"<p>Build a new session from a received PreKeySignalMessage.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:22LibSignalProtocolSwift14SessionBuilderV7processyAA0E12PreKeyBundleV03preiJ0_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SessionPreKeyBundle.html\">SessionPreKeyBundle</a></code> retrieved from a server.</p>","parent_name":"SessionBuilder"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV7keyInfo33_FB223F8CA0EAA1B8C3F1E7C4D654A042LL10Foundation4DataVvZ":{"name":"keyInfo","abstract":"<p>Bytes used as input for the KDF</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV10secretSizeSivZ":{"name":"secretSize","abstract":"<p>The number of bytes for the root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV3kdf33_FB223F8CA0EAA1B8C3F1E7C4D654A042LLAA4HKDFVv":{"name":"kdf","abstract":"<p>The key derivation function for the root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV3key10Foundation4DataVv":{"name":"key","abstract":"<p>The current root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyVAcA4HKDFV3kdf_10Foundation4DataV3keytcfc":{"name":"init(kdf:key:)","abstract":"<p>Create a new root key from the components</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV11createChainAC04rootG0_AA0eiG0V05chainG0tAA06PublicG0V05theireG0_AA07PrivateG0V03oureG0tKF":{"name":"createChain(theirRatchetKey:ourRatchetKey:)","abstract":"<p>Create a new root key and chain key.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyVAC10Foundation4DataV4from_AA11HKDFVersionO7versiontcfc":{"name":"init(from:version:)","abstract":"<p>Deserialize a root key.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV4data10Foundation4DataVv":{"name":"data","abstract":"<p>The serialized root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two root keys.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:22LibSignalProtocolSwift14RatchetRootKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two root keys for equality.</p>","parent_name":"RatchetRootKey"},"Structs/SignalSenderKeyName.html#/s:22LibSignalProtocolSwift0B13SenderKeyNameV7groupIdSSv":{"name":"groupId","abstract":"<p>The group identifier (such as the name)</p>","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:22LibSignalProtocolSwift0B13SenderKeyNameV6senderAA0B7AddressVv":{"name":"sender","abstract":"<p>The contact</p>","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:22LibSignalProtocolSwift0B13SenderKeyNameVACSS7groupId_AA0B7AddressV6sendertcfc":{"name":"init(groupId:sender:)","abstract":"<p>Create a new <code>SignalSenderKeyName</code></p>","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:22LibSignalProtocolSwift0B13SenderKeyNameV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two <code>SignalSenderKeyName</code>. Two <code>SignalSenderKeyName</code> objects are","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:22LibSignalProtocolSwift0B13SenderKeyNameV9hashValueSiv":{"name":"hashValue","abstract":"<p>A hash value of the address, constructed by summing the","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:22LibSignalProtocolSwift0B13SenderKeyNameV11descriptionSSv":{"name":"description","abstract":"<p>A String representation of the sender key name.</p>","parent_name":"SignalSenderKeyName"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV15cipherKeyLengthSivZ":{"name":"cipherKeyLength","abstract":"<p>The length of cipher keys in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV12macKeyLengthSivZ":{"name":"macKeyLength","abstract":"<p>The length of the mac key in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV8ivLengthSivZ":{"name":"ivLength","abstract":"<p>The length of the initialization vector in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV07derivedF11SecretsSizeSivZ":{"name":"derivedMessageSecretsSize","abstract":"<p>The length of cipher key, mac key, and iv</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV9cipherKey10Foundation4DataVv":{"name":"cipherKey","abstract":"<p>The cipher key to encrypt/decrypt a message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV6macKey10Foundation4DataVv":{"name":"macKey","abstract":"<p>The mac key of a message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV2iv10Foundation4DataVv":{"name":"iv","abstract":"<p>The initialization vector</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV7counters6UInt32Vv":{"name":"counter","abstract":"<p>The counter of the message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysVAC10Foundation4DataV6cipher_AF3macAF2ivs6UInt32V7countertKcfc":{"name":"init(cipher:mac:iv:counter:)","abstract":"<p>Create the message keys from the components</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysVAC10Foundation4DataV8material_tKcfc":{"name":"init(material:)","abstract":"<p>Create the message keys from generated bytes.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysVAcA0B8_SessionV5ChainV0F3KeyV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create message keys from a ProtoBuf object.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Deserialize the message keys.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the keys.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV6objectAA0B8_SessionV5ChainV0F3KeyVv":{"name":"object","abstract":"<p>The message keys converted to a ProtoBuf object</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:22LibSignalProtocolSwift18RatchetMessageKeysV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two message keys for equality.</p>","parent_name":"RatchetMessageKeys"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyV3key33_FB725A132FF6A6128D7E7C43E47B83A3LL10Foundation4DataVv":{"name":"key","abstract":"<p>The key material of length <code>KeyPair.keyLength</code></p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyVAC10Foundation4DataV5point_tKcfc":{"name":"init(point:)","abstract":"<p>Create a private key from a curve point.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyVAC10Foundation4DataV15unverifiedPoint_tKcfc":{"name":"init(unverifiedPoint:)","abstract":"<p>Create a private key. Only checks the length, nothing else.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyVACyKcfc":{"name":"init()","abstract":"<p>Create a new random private key.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyV4sign10Foundation4DataVAG7message_tKF":{"name":"sign(message:)","abstract":"<p>Calculate the signature for the given message.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyV7signVRF10Foundation4DataVAG7message_tKF":{"name":"signVRF(message:)","abstract":"<p>Calculates a unique Curve25519 signature for the private key</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyV18calculateAgreement10Foundation4DataVAA06PublicF0V06publicF0_tKF":{"name":"calculateAgreement(publicKey:)","abstract":"<p>Calculate the shared agreement between the private key and the given public key.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two private keys for equality.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a private key from a byte record.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:22LibSignalProtocolSwift10PrivateKeyV4data10Foundation4DataVv":{"name":"data","abstract":"<p>Convert the key to serialized data</p>","parent_name":"PrivateKey"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV9macLengthSivZ":{"name":"macLength","abstract":"<p>The length of the MAC for a message in bytes</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV14messageVersions5UInt8Vv":{"name":"messageVersion","abstract":"<p>The message version</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV16senderRatchetKeyAA06PublicH0Vv":{"name":"senderRatchetKey","abstract":"<p>The public key of the sending ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV7counters6UInt32Vv":{"name":"counter","abstract":"<p>The current counter of the ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV15previousCounters6UInt32Vv":{"name":"previousCounter","abstract":"<p>The counter of the previous ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV10cipherText10Foundation4DataVv":{"name":"cipherText","abstract":"<p>The encrypted text</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV3mac10Foundation4DataVv":{"name":"mac","abstract":"<p>The mac of the message</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageVACs5UInt8V14messageVersion_10Foundation4DataV6macKeyAA06PublicL0V013senderRatchetL0s6UInt32V7counterAO15previousCounterAI10cipherTextAL0n8IdentityL0AL08receivervL0tKcfc":{"name":"init(messageVersion:macKey:senderRatchetKey:counter:previousCounter:cipherText:senderIdentityKey:receiverIdentityKey:)","abstract":"<p>Create a SignalMessage from its components.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV6getMac33_F58E11522C306919CBD6603B5113EDF3LL10Foundation4DataVAA9PublicKeyV014senderIdentityQ0_AJ08receiversQ0AH03macQ0AH7messagetKF":{"name":"getMac(senderIdentityKey:receiverIdentityKey:macKey:message:)","abstract":"<p>Calculate the MAC of the message. The length of the MAC is specified by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV9macLengthSivZ\">SignalMessage.macLength</a></code></p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV9verifyMacSbAA9PublicKeyV014senderIdentityI0_AF08receiverkI010Foundation4DataV03macI0tKF":{"name":"verifyMac(senderIdentityKey:receiverIdentityKey:macKey:)","abstract":"<p>Verify the MAC of the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV08isLegacyE0Sb10Foundation4DataV10serialized_tFZ":{"name":"isLegacyMessage(serialized:)","abstract":"<p>Check if a message has an old version.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV04baseE0AA010CipherTextE0VyKF":{"name":"baseMessage()","abstract":"<p>Return the serialized version of the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV6objectAA0b1_bE0Vv":{"name":"object","abstract":"<p>Convert signal message to a ProtoBuf object</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signal message from serialized data.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageVAcA0b1_bE0V4from_s5UInt8V7version10Foundation4DataV3mactKcfc":{"name":"init(from:version:mac:)","abstract":"<p>Create a signal message from a ProtoBuf object.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:22LibSignalProtocolSwift0B7MessageV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalMessages for equality.</p>","parent_name":"SignalMessage"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV6length33_196C3A61052E4C31371833580055A9C9LLSivZ":{"name":"length","abstract":"<p>The length of a fingerprint</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV7version33_196C3A61052E4C31371833580055A9C9LLs6UInt32VvZ":{"name":"version","abstract":"<p>The version of the fingerprint</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV05localF010Foundation4DataVv":{"name":"localFingerprint","abstract":"<p>The fingerprint data of the local party</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV06remoteF010Foundation4DataVv":{"name":"remoteFingerprint","abstract":"<p>The fingerprint data of the remote party</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintVAC10Foundation4DataV05localF0_AF06remoteF0tKcfc":{"name":"init(localFingerprint:remoteFingerprint:)","abstract":"<p>Create a new ScannableFingerprint Version 1.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintVAcA0b1_F0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a fingerprint from a ProtoBuf object.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV6objectAA0b1_F0Vv":{"name":"object","abstract":"<p>The fingerprint converted to a ProtoBuf object</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a scannable fingerprint from data.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize a fingerprint.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV7matchesSbACF":{"name":"matches(_:)","abstract":"<p>Compare if fingerprints match, i.e. the local fingerprint matches the remote fingerprint and vice versa.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:22LibSignalProtocolSwift20ScannableFingerprintV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two Fingerprints for equality.</p>","parent_name":"ScannableFingerprint"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyV03preG2Ids6UInt32VSgv":{"name":"preKeyId","abstract":"<p>The id of the pre key, if one was used</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyV06signedfG2Ids6UInt32Vv":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyV04baseG0AA06PublicG0Vv":{"name":"baseKey","abstract":"<p>The base key used for the outgoing pre key message</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyVAcA0B8_SessionVABV16serializedObject_tKcfc":{"name":"init(serializedObject:)","abstract":"<p>Create a pending pre key from a ProtoBuf object.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pending pre key from serialized data.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize a pending pre key for storage.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyV6objectAA0B8_SessionVABVv":{"name":"object","abstract":"<p>Create a ProtoBuf object for serialization.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:22LibSignalProtocolSwift13PendingPreKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two pending pre keys for equality.</p>","parent_name":"PendingPreKey"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The current chain iteration of the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV05chainF010Foundation4DataVv":{"name":"chainKey","abstract":"<p>The chain key used for the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV09signatureF0AA06PublicF0Vv":{"name":"signatureKey","abstract":"<p>The signature key used for signing the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV04baseH0AA010CipherTextH0VyKF":{"name":"baseMessage()","abstract":"<p>Create a serialized message from the distribution message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageVACs6UInt32V2id_AE9iteration10Foundation4DataV05chainF0AA06PublicF0V09signatureF0tcfc":{"name":"init(id:iteration:chainKey:signatureKey:)","abstract":"<p>Create a distribution message.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two distribution messages.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the distribution message to serialized data.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageV6objectAA0b1_efgH0Vv":{"name":"object","abstract":"<p>Convert the distribution message to a ProtoBuf object</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a distribution message from serialized data.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:22LibSignalProtocolSwift28SenderKeyDistributionMessageVAcA0b1_efgH0V4from_s5UInt8V7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a distribution message from a ProtoBuf object.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV12infoMaterial33_55C88953B6EE592C2B9893A2474BC023LL10Foundation4DataVvZ":{"name":"infoMaterial","abstract":"<p>The info used when creating the keys from the seed</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV8ivLength33_55C88953B6EE592C2B9893A2474BC023LLSivZ":{"name":"ivLength","abstract":"<p>The length of the initialization vector</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV06cipherG6Length33_55C88953B6EE592C2B9893A2474BC023LLSivZ":{"name":"cipherKeyLength","abstract":"<p>The length of the key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV12secretLength33_55C88953B6EE592C2B9893A2474BC023LLSivZ":{"name":"secretLength","abstract":"<p>The combined length of iv and key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The iteration of the message key in the chain</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV2iv10Foundation4DataVv":{"name":"iv","abstract":"<p>The initialization vector</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV06cipherG010Foundation4DataVv":{"name":"cipherKey","abstract":"<p>The encryption/decryption key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV4seed33_55C88953B6EE592C2B9893A2474BC023LL10Foundation4DataVv":{"name":"seed","abstract":"<p>The seed used to derive the key and iv</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyVACs6UInt32V9iteration_10Foundation4DataV4seedtKcfc":{"name":"init(iteration:seed:)","abstract":"<p>Create a message key from the components.</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyVAcA0b1_eG5StateVABV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a message key from a ProtoBuf object.</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV6objectAA0b1_eG5StateVABVv":{"name":"object","abstract":"<p>Convert the sender chain key to a ProtoBuf object</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:22LibSignalProtocolSwift16SenderMessageKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender message keys for equality.</p>","parent_name":"SenderMessageKey"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV7versions5UInt8Vv":{"name":"version","abstract":"<p>The message version</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV03preF2Ids6UInt32VSgv":{"name":"preKeyId","abstract":"<p>The pre key id of the one time key from the other party</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV06signedeF2Ids6UInt32Vv":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key used for the message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV04baseF0AA06PublicF0Vv":{"name":"baseKey","abstract":"<p>The base key used for the message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV08identityF0AA06PublicF0Vv":{"name":"identityKey","abstract":"<p>The identity key of the sender</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV7messageAA0bG0Vv":{"name":"message","abstract":"<p>The message included in the pre key message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageVACs5UInt8V14messageVersion_s6UInt32VSg03preF2IdAH06signedefM0AA06PublicF0V04baseF0AM08identityF0AA0bG0V0I0tcfc":{"name":"init(messageVersion:preKeyId:signedPreKeyId:baseKey:identityKey:message:)","abstract":"<p>Create a new pre key message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV04baseG0AA010CipherTextG0VyKF":{"name":"baseMessage()","abstract":"<p>Get the serialized message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageV6objectAA0b1_efbG0VyKF":{"name":"object()","abstract":"<p>Convert the message to a ProtoBuf object for serialization.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a <code>PreKeySignalMessage</code> from serialized data.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:22LibSignalProtocolSwift06PreKeyB7MessageVAcA0b1_efbG0V4from_s5UInt8V7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a <code>PreKeySignalMessage</code> from a ProtoBuf object.</p>","parent_name":"PreKeySignalMessage"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the pre key</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicV3keyAA0hG0Vv":{"name":"key","abstract":"<p>The key pair of the pre key</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicVACs6UInt32V2id_AA0hG0V3keytcfc":{"name":"init(id:key:)","abstract":"<p>Create a public pre key from the components</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicV6objectAA0b1_fG0V0H4PartVv":{"name":"object","abstract":"<p>Convert the public pre key to a ProtoBuf object</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the public pre key to serialized data.</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicVAcA0b1_fG0V0H4PartV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a public pre key from a ProtoBuf object.</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:22LibSignalProtocolSwift19SessionPreKeyPublicVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from serialized data.</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyV14mediumMaxValues6UInt32VvZ":{"name":"mediumMaxValue","abstract":"<p>The upper bound (inclusive) of the pre key id</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyV06publicG0AA0efG6PublicVv":{"name":"publicKey","abstract":"<p>The public data of the pre key (id and public key)</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyV07privateG0AA07PrivateG0Vv":{"name":"privateKey","abstract":"<p>The private key of the pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyVACs6UInt32V2id_AA0G4PairV03keyJ0tcfc":{"name":"init(id:keyPair:)","abstract":"<p>Create a pre key from the components</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyVACs6UInt32V5index_tKcfc":{"name":"init(index:)","abstract":"<p>Create a new pre key with the index.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyV7keyPairAA0gI0Vv":{"name":"keyPair","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyV6objectAA0b1_fG0Vv":{"name":"object","abstract":"<p>Convert the pre key to a ProtoBuf object</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the pre key to serialized data.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyVAcA0b1_fG0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from a ProtoBuf object.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:22LibSignalProtocolSwift13SessionPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from serialized data.</p>","parent_name":"SessionPreKey"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV6random10Foundation4DataVSi5bytes_tKF":{"name":"random(bytes:)","abstract":"<p>Create a number of random bytes</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV10hmacSHA25610Foundation4DataVAG3for_AG4withtKF":{"name":"hmacSHA256(for:with:)","abstract":"<p>Create a HMAC authentication for a given message</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV6sha51210Foundation4DataVAG3for_tKF":{"name":"sha512(for:)","abstract":"<p>Create a SHA512 digest for a given message</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7encrypt10Foundation4DataVAG7message_AA0B16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with AES</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7decrypt10Foundation4DataVAG7message_AA0B16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with AES</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7process10Foundation4DataVAG3cbc_AG3keyAG2ivSb7encrypttKF":{"name":"process(cbc:key:iv:encrypt:)","abstract":"<p>Process (encrypt/decrypt) a message with AES in CBC mode and pkcs7 padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7encrypt10Foundation4DataVAG3ctr_AG3keyAG2ivtKF":{"name":"encrypt(ctr:key:iv:)","abstract":"<p>Encrypt a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7decrypt10Foundation4DataVAG3ctr_AG3keyAG2ivtKF":{"name":"decrypt(ctr:key:iv:)","abstract":"<p>Decrypt a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7process33_B765935E51715C20FF56C53132502322LL10Foundation4DataVAH3ctr_AH3keyAH2ivSb7encrypttKF":{"name":"process(ctr:key:iv:encrypt:)","abstract":"<p>Process (encrypt/decrypt) a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoV7toArray33_B765935E51715C20FF56C53132502322LL10Foundation4DataVSv4from_Si5counttF":{"name":"toArray(from:count:)","abstract":"<p>Create an array from an unsafe pointer.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:22LibSignalProtocolSwift0B12CommonCryptoVACycfc":{"name":"init()","abstract":"<p>Create an instance.</p>","parent_name":"SignalCommonCrypto"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageV9signatureAA0eF9SignatureVv":{"name":"signature","abstract":"<p>The consistency signature</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageV10generations6UInt32Vv":{"name":"generation","abstract":"<p>The generation of the consistency message</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageVAcA0eF12CommitmentV0V10commitment_AA7KeyPairV011identitykeyL0tKcfc":{"name":"init(commitment:identitykeyPair:)","abstract":"<p>Create a new consistency message.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The message serialized through a protocol buffer.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageV6objectAA0b1_ef4CodeG0Vv":{"name":"object","abstract":"<p>The message converted to a protocol buffer object.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageVAC10Foundation4DataV4from_AA0eF12CommitmentV0V10commitmentAA9PublicKeyV08identityO0tKcfc":{"name":"init(from:commitment:identityKey:)","abstract":"<p>Create a consistency message from a serialized protocol buffer record.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:22LibSignalProtocolSwift24DeviceConsistencyMessageVAcA0b1_ef4CodeG0V4from_AA0eF12CommitmentV0V10commitmentAA9PublicKeyV08identityN0tKcfc":{"name":"init(from:commitment:identityKey:)","abstract":"<p>Create a consistency message from a protocol buffer object.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainV10ratchetKeyAA0H4PairVv":{"name":"ratchetKey","abstract":"<p>The key pair of the ratchet</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainV8chainKeyAA07RatchetfH0Vv":{"name":"chainKey","abstract":"<p>The current chain key of the ratchet</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainVAcA7KeyPairV07ratchetG0_AA07RatchetfG0V05chainG0tcfc":{"name":"init(ratchetKey:chainKey:)","abstract":"<p>Create a sender chain from the components.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainVAcA0B8_SessionV0F0V4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a sender chain from a protobuf object.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainVAC10Foundation4DataV4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a sender chain from serialized data.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the sender chain to data.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainV6objectAA0B8_SessionV0F0Vv":{"name":"object","abstract":"<p>The sender chain converted to a protobuf object</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:22LibSignalProtocolSwift11SenderChainV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender chains for equality.</p>","parent_name":"SenderChain"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV5store33_04E1EBFC5169B4F7F03AFE376E979A13LLxv":{"name":"store","abstract":"<p>The store where the keys are stored</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV7address33_04E1EBFC5169B4F7F03AFE376E979A13LL0E7AddressQzv":{"name":"address","abstract":"<p>The id of the remote client</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherVACyxG0E7AddressQz7address_x5storetcfc":{"name":"init(address:store:)","abstract":"<p>Create a GroupCipher.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV7processyAA0F11TextMessageV7message_tKF":{"name":"process(message:)","abstract":"<p>Create a GroupCipher.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV7processyAA28SenderKeyDistributionMessageV012distributionK0_tKF":{"name":"process(distributionMessage:)","abstract":"<p>Create a new group session from a distribution message.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV13createSessionAA28SenderKeyDistributionMessageVyKF":{"name":"createSession()","abstract":"<p>Create a new session and generate a distribution message.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV7encryptAA0F11TextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message for the recipient.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV7decrypt10Foundation4DataVAA16SenderKeyMessageV10ciphertext_tKF":{"name":"decrypt(ciphertext:)","abstract":"<p>Decrypt a message from the group member.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:22LibSignalProtocolSwift11GroupCipherV10loadRecord33_04E1EBFC5169B4F7F03AFE376E979A13LLAA09SenderKeyH0CyKF":{"name":"loadRecord()","abstract":"<p>Load the record for the remote address.</p>","parent_name":"GroupCipher"},"Structs/DeviceConsistencyCommitmentV0.html#/s:22LibSignalProtocolSwift29DeviceConsistencyCommitmentV0V11codeVersion33_1098E011B4F282ADBEE3A5DF14952536LLs6UInt16VvZ":{"name":"codeVersion","abstract":"<p>The version of the consistency implementation</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:22LibSignalProtocolSwift29DeviceConsistencyCommitmentV0V7version33_1098E011B4F282ADBEE3A5DF14952536LL10Foundation4DataVvZ":{"name":"version","abstract":"<p>An identifier used when hashing the identity keys</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:22LibSignalProtocolSwift29DeviceConsistencyCommitmentV0V10generations6UInt32Vv":{"name":"generation","abstract":"<p>The generation of the message</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:22LibSignalProtocolSwift29DeviceConsistencyCommitmentV0V10serialized10Foundation4DataVv":{"name":"serialized","abstract":"<p>The hash of the public keys</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:22LibSignalProtocolSwift29DeviceConsistencyCommitmentV0VACs6UInt32V10generation_SayAA9PublicKeyVG08identityL4ListtKcfc":{"name":"init(generation:identityKeyList:)","abstract":"<p>Create a new commitment.</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:22LibSignalProtocolSwift29DeviceConsistencyCommitmentV0V12generateCodeSSSayAA0eF9SignatureVG3for_tKF":{"name":"generateCode(for:)","abstract":"<p>Generate a String which can be used to compare the consistency across multiple devices.","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/CipherTextMessage.html#/s:22LibSignalProtocolSwift17CipherTextMessageV14currentVersions5UInt8VvZ":{"name":"currentVersion","abstract":"<p>The current version of the messages</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:22LibSignalProtocolSwift17CipherTextMessageV18unsupportedVersions5UInt8VvZ":{"name":"unsupportedVersion","abstract":"<p>All message versions up to and including this one are unsupported</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:22LibSignalProtocolSwift17CipherTextMessageV4typeAA0eF4TypeOv":{"name":"type","abstract":"<p>The type of the message</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:22LibSignalProtocolSwift17CipherTextMessageV4data10Foundation4DataVv":{"name":"data","abstract":"<p>The encrypted message</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:22LibSignalProtocolSwift17CipherTextMessageVAcA0eF4TypeO4type_10Foundation4DataV4datatcfc":{"name":"init(type:data:)","abstract":"<p>Create a message from the components.</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:22LibSignalProtocolSwift17CipherTextMessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a <code>CipherTextMessage</code> from a serialized record.</p>","parent_name":"CipherTextMessage"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV07messageG4Seed33_B7514D0C3FC6108C19ACB943DED00562LL10Foundation4DataVvZ":{"name":"messageKeySeed","abstract":"<p>The seed used as input material for the KDF to derive the message keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV05chainG4Seed33_B7514D0C3FC6108C19ACB943DED00562LL10Foundation4DataVvZ":{"name":"chainKeySeed","abstract":"<p>The seed used as input material for the KDF to derive the chain keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV15keyMaterialSeed33_B7514D0C3FC6108C19ACB943DED00562LL10Foundation4DataVvZ":{"name":"keyMaterialSeed","abstract":"<p>The seed used as info material for the KDF to derive the message keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV10secretSizeSivZ":{"name":"secretSize","abstract":"<p>The size of the chain key</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV14hashOutputSizeSivZ":{"name":"hashOutputSize","abstract":"<p>The size of the HKDF expand output</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV3kdf33_B7514D0C3FC6108C19ACB943DED00562LLAA4HKDFVv":{"name":"kdf","abstract":"<p>The object for the key derivation function</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV3key10Foundation4DataVv":{"name":"key","abstract":"<p>The current key of the ratchet chain, 32 byte</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyVAcA4HKDFV3kdf_10Foundation4DataV3keys6UInt32V5indextcfc":{"name":"init(kdf:key:index:)","abstract":"<p>Create a ratchet chain key from the components</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV15getBaseMaterial33_B7514D0C3FC6108C19ACB943DED00562LL10Foundation4DataVAH4seed_tKF":{"name":"getBaseMaterial(seed:)","abstract":"<p>Get the SHA256 HMAC of the seed.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV11messageKeysAA0e7MessageI0VyKF":{"name":"messageKeys()","abstract":"<p>Get a set of message keys for the Ratchet</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV4nextACyKF":{"name":"next()","abstract":"<p>Return the next chain key</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyVAcA0B8_SessionV0F0V0fG0V4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a chain key from a ProtoBuf object.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyVAC10Foundation4DataV4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a ratchet chain key from serialized data.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the key.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV6objectAA0B8_SessionV0F0V0fG0Vv":{"name":"object","abstract":"<p>The chain key converted to a ProtoBuf object</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:22LibSignalProtocolSwift15RatchetChainKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalMessages for equality.</p>","parent_name":"RatchetChainKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV9basePoint33_CC3BB64AEC0C31F7EE26EA2BC47149D9LL10Foundation4DataVvZ":{"name":"basePoint","abstract":"<p>The base point for the Curve25519 elliptic curve</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV3key33_CC3BB64AEC0C31F7EE26EA2BC47149D9LL10Foundation4DataVv":{"name":"key","abstract":"<p>The key material of length <code>KeyPair.keyLength</code></p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyVAC10Foundation4DataV5point_tKcfc":{"name":"init(point:)","abstract":"<p>&lsquo;Create a public key from a UInt8 array. Checks","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyVAcA07PrivateF0V07privateF0_tKcfc":{"name":"init(privateKey:)","abstract":"<p>Generate a public key from a given private key.","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV6verifySb10Foundation4DataV9signature_AG3fortF":{"name":"verify(signature:for:)","abstract":"<p>Verify that the signature corresponds to the message.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV6verify10Foundation4DataVAG12vrfSignature_AG3fortKF":{"name":"verify(vrfSignature:for:)","abstract":"<p>Verify that the vrf signature corresponds to the message.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV18calculateAgreement10Foundation4DataVAA07PrivateF0V07privateF0_tKF":{"name":"calculateAgreement(privateKey:)","abstract":"<p>Calculate the shared agreement between the given private key and the public key.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two public keys.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two public keys for equality. The keys are equal if all bytes match.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a public key from a serialized record.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:22LibSignalProtocolSwift9PublicKeyV4data10Foundation4DataVv":{"name":"data","abstract":"<p>Return a byte representation of the public key</p>","parent_name":"PublicKey"},"Structs/SignalAddress.html#/s:22LibSignalProtocolSwift0B7AddressV10identifierSSv":{"name":"identifier","abstract":"<p>The unique identifier of a user (such as a phone number)</p>","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:22LibSignalProtocolSwift0B7AddressV8deviceIds6UInt32Vv":{"name":"deviceId","abstract":"<p>The identifier for the individual device of a user</p>","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:22LibSignalProtocolSwift0B7AddressVACSS10identifier_s6UInt32V8deviceIdtcfc":{"name":"init(identifier:deviceId:)","abstract":"<p>Create a <code>SignalAddress</code>.</p>","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:22LibSignalProtocolSwift0B7AddressV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalAddresses. Two <code>SignalAddress</code> objects are","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:22LibSignalProtocolSwift0B7AddressV9hashValueSiv":{"name":"hashValue","abstract":"<p>A hash value of the address, constructed by summing the","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:22LibSignalProtocolSwift0B7AddressV11descriptionSSv":{"name":"description","abstract":"<p>A description of the SignalAddress.</p>","parent_name":"SignalAddress"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV7DJBTypes5UInt8VvZ":{"name":"DJBType","abstract":"<p>Type declaration (only needed for compatibility)</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV06publicE0AA06PublicE0Vv":{"name":"publicKey","abstract":"<p>The public part of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV07privateE0AA07PrivateE0Vv":{"name":"privateKey","abstract":"<p>The private part of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairVAcA06PublicE0V06publicE0_AA07PrivateE0V07privateE0tcfc":{"name":"init(publicKey:privateKey:)","abstract":"<p>Create a key pair from existing public and private keys</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairVACyKcfc":{"name":"init()","abstract":"<p>Create a new random key pair.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV4sign10Foundation4DataVAG7message_tKF":{"name":"sign(message:)","abstract":"<p>Calculate the signature for the given message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV7signVRF10Foundation4DataVAG7message_tKF":{"name":"signVRF(message:)","abstract":"<p>Calculates a unique Curve25519 signature for the private key</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV18calculateAgreement10Foundation4DataVAA06PublicE0V06publicE0_tKF":{"name":"calculateAgreement(publicKey:)","abstract":"<p>Calculate the shared agreement between the private key and the given public key.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV6verifySb10Foundation4DataV9signature_AG3fortF":{"name":"verify(signature:for:)","abstract":"<p>Verify that the signature corresponds to the message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV6verify10Foundation4DataVAG12vrfSignature_AG3fortKF":{"name":"verify(vrfSignature:for:)","abstract":"<p>Verify that the vrf signature corresponds to the message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV18calculateAgreement10Foundation4DataVAA07PrivateE0V07privateE0_tKF":{"name":"calculateAgreement(privateKey:)","abstract":"<p>Calculate the shared agreement between the given private key and the public key.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a key pair from a serialized record.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairVAcA0b1_eF0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a key pair from a protobuf object.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV6objectAA0b1_eF0Vv":{"name":"object","abstract":"<p>The key pair converted to a ProtoBuf object</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Return a serialized record of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:22LibSignalProtocolSwift7KeyPairV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two key pairs for equality. The keys are equal if public and private keys match.</p>","parent_name":"KeyPair"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV14ourIdentityKeyAA0I4PairVv":{"name":"ourIdentityKey","abstract":"<p>The identity of the local party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV10ourBaseKeyAA0I4PairVv":{"name":"ourBaseKey","abstract":"<p>The base key for the ratchet of the local party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV13ourRatchetKeyAA0I4PairVv":{"name":"ourRatchetKey","abstract":"<p>The initial key used for the ratchet</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV12theirBaseKeyAA06PublicI0Vv":{"name":"theirBaseKey","abstract":"<p>The base key of the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV15theirRatchetKeyAA06PublicI0Vv":{"name":"theirRatchetKey","abstract":"<p>The ratchet key used by the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV16theirIdentityKeyAA06PublicI0Vv":{"name":"theirIdentityKey","abstract":"<p>The identity of the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:22LibSignalProtocolSwift19SymmetricParametersV7isAliceSbv":{"name":"isAlice","abstract":"<p>Indicate if the session was initialized as Alice</p>","parent_name":"SymmetricParameters"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV7versions5UInt8VvZ":{"name":"version","abstract":"<p>The version of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV6lengthSivZ":{"name":"length","abstract":"<p>The length of a fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV10iterationsSivZ":{"name":"iterations","abstract":"<p>The number of iterations for the creation of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV11displayableAA011DisplayableE0Vv":{"name":"displayable","abstract":"<p>The displayable part of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV9scannableAA09ScannableE0Vv":{"name":"scannable","abstract":"<p>The scannable part of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV11displayTextSSv":{"name":"displayText","abstract":"<p>The string to show the user</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintVACSS21localStableIdentifier_10Foundation4DataV0F8IdentitySS06remotegH0AG0lK0Si10iterationstKcfc":{"name":"init(localStableIdentifier:localIdentity:remoteStableIdentifier:remoteIdentity:iterations:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintVACSS21localStableIdentifier_AA9PublicKeyV0F8IdentitySS06remotegH0AF0lK0Si10iterationstKcfc":{"name":"init(localStableIdentifier:localIdentity:remoteStableIdentifier:remoteIdentity:iterations:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintVACSS21localStableIdentifier_SayAA9PublicKeyVG0F12IdentityListSS06remotegH0AG0mkL0Si10iterationstKcfc":{"name":"init(localStableIdentifier:localIdentityList:remoteStableIdentifier:remoteIdentityList:iterations:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:22LibSignalProtocolSwift11FingerprintV7matchesSb10Foundation4DataVKF":{"name":"matches(_:)","abstract":"<p>Compare the fingerprint to scanned fingerprint data.</p>","parent_name":"Fingerprint"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyV06publicH0AA0efgH6PublicVv":{"name":"publicKey","abstract":"<p>The public data of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyV07privateH0AA07PrivateH0Vv":{"name":"privateKey","abstract":"<p>The private key of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyVACs6UInt32V2id_s6UInt64V9timestampAA0H4PairV03keyM010Foundation4DataV9signaturetcfc":{"name":"init(id:timestamp:keyPair:signature:)","abstract":"<p>Create a signed pre key from its components.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyVACs6UInt32V2id_AA07PrivateH0V09signatureH0s6UInt64V9timestamptKcfc":{"name":"init(id:signatureKey:timestamp:)","abstract":"<p>Create a signed pre key.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyV7keyPairAA0hJ0Vv":{"name":"keyPair","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from serialized data.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyVAcA0b1_fgH0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from a ProtoBuf object.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyV6objectAA0b1_fgH0Vv":{"name":"object","abstract":"<p>Convert the signed pre key to a ProtoBuf object</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the signed pre key to serialized data.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:22LibSignalProtocolSwift19SessionSignedPreKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two signed pre keys for equality.</p>","parent_name":"SessionSignedPreKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV07messageG4Seed33_7C79750B6A4D1623B81DB31A0B14BC47LL10Foundation4DataVvZ":{"name":"messageKeySeed","abstract":"<p>The seed value for the message key when deriving the next key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV05chainG4Seed33_7C79750B6A4D1623B81DB31A0B14BC47LL10Foundation4DataVvZ":{"name":"chainKeySeed","abstract":"<p>The seed value for the chain key when deriving the next key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The current iteration of the chain</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV05chainG010Foundation4DataVv":{"name":"chainKey","abstract":"<p>The current chain key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyVACs6UInt32V9iteration_10Foundation4DataV05chainG0tcfc":{"name":"init(iteration:chainKey:)","abstract":"<p>Create a new chain key from the components.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV07messageG0AA0e7MessageG0VyKF":{"name":"messageKey()","abstract":"<p>Advance the chain and return the generated message key.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyVAcA0b1_eG5StateVABV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a chain key from a ProtoBuf object.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV6objectAA0b1_eG5StateVABVv":{"name":"object","abstract":"<p>Convert the sender chain key to a ProtoBuf object</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:22LibSignalProtocolSwift14SenderChainKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender chain keys for equality.</p>","parent_name":"SenderChainKey"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV5store33_DB67E2587798B069702C722813388542LLxv":{"name":"store","abstract":"<p>The local data store to use for state information</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV13remoteAddress33_DB67E2587798B069702C722813388542LL0H0Qzv":{"name":"remoteAddress","abstract":"<p>The address of the remote party</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherVACyxGx5store_7AddressQz06remoteH0tcfc":{"name":"init(store:remoteAddress:)","abstract":"<p>Construct a session cipher for encrypt/decrypt operations on a session.","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7encryptAA0F11TextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7decrypt10Foundation4DataVAA0F11TextMessageVKF":{"name":"decrypt(_:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7decrypt10Foundation4DataVAA06PreKeyB7MessageV03prekbL0_tKF":{"name":"decrypt(preKeySignalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7decrypt10Foundation4DataVAA0B7MessageV06signalJ0_tKF":{"name":"decrypt(signalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7processyAA0E12PreKeyBundleV03preiJ0_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SessionPreKeyBundle.html\">SessionPreKeyBundle</a></code> retrieved from a server.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV03getE7Versions5UInt8VyKF":{"name":"getSessionVersion()","abstract":"<p>Gets the version of the session associated with this session cipher.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV04loadE033_DB67E2587798B069702C722813388542LLAA0E6RecordCyKF":{"name":"loadSession()","abstract":"<p>Load the session record for the remote address</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7decrypt33_DB67E2587798B069702C722813388542LL10Foundation4DataVAA0E6RecordC4from_AA0B7MessageV3andtKF":{"name":"decrypt(from:and:)","abstract":"<p>Try to decrypt a SignalMessage with one of the stored sessions in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SessionRecord.html\">SessionRecord</a></code>. If a session can decrypt the message it will be promoted to the active session.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV7decrypt33_DB67E2587798B069702C722813388542LL10Foundation4DataVAA0E5StateC4from_AA0B7MessageV3andtKF":{"name":"decrypt(from:and:)","abstract":"<p>Try to decrypt a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignalMessage.html\">SignalMessage</a></code> with a specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SessionState.html\">SessionState</a></code>.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV22getOrCreateMessageKeys33_DB67E2587798B069702C722813388542LLAA07RatchetjK0VAA0E5StateC5state_AA9PublicKeyV14theirEphemeralAA0p5ChainT0V05chainT0s6UInt32V7countertKF":{"name":"getOrCreateMessageKeys(state:theirEphemeral:chainKey:counter:)","abstract":"<p>Retrieve previously stored message keys or create them from the chain.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV19getOrCreateChainKey33_DB67E2587798B069702C722813388542LLAA07RatchetjK0VAA0E5StateC5state_AA06PublicK0V14theirEphemeraltKF":{"name":"getOrCreateChainKey(state:theirEphemeral:)","abstract":"<p>Retrieve the chain key for a state and receiver chain key.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV13getCiphertext33_DB67E2587798B069702C722813388542LL10Foundation4DataVs5UInt8V14messageVersion_AA18RatchetMessageKeysV0pT0AH9plaintexttKF":{"name":"getCiphertext(messageVersion:messageKeys:plaintext:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV5getIV33_DB67E2587798B069702C722813388542LL10Foundation4DataVs5UInt8V3for_AA18RatchetMessageKeysV07messageS0tF":{"name":"getIV(for:messageKeys:)","abstract":"<p>Get the initialization vector for the message version.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:22LibSignalProtocolSwift13SessionCipherV12getPlaintext33_DB67E2587798B069702C722813388542LL10Foundation4DataVs5UInt8V14messageVersion_AA18RatchetMessageKeysV0pT0AH10ciphertexttKF":{"name":"getPlaintext(messageVersion:messageKeys:ciphertext:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV3keyAA0iH0Vv":{"name":"key","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV9timestamps6UInt64Vv":{"name":"timestamp","abstract":"<p>The time when the key was created</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature of the public key of the key pair</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicVACs6UInt32V2id_s6UInt64V9timestampAA0iH0V3key10Foundation4DataV9signaturetcfc":{"name":"init(id:timestamp:key:signature:)","abstract":"<p>Create a public signed pre key from its components.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from serialized data.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicVAcA0b1_fgH0V0I4PartV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from a ProtoBuf object.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV6objectAA0b1_fgH0V0I4PartVv":{"name":"object","abstract":"<p>Convert the public signed pre key to a ProtoBuf object</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the signed pre key to serialized data.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:22LibSignalProtocolSwift25SessionSignedPreKeyPublicV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two public signed pre keys for equality.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleV03preG2Ids6UInt32Vv":{"name":"preKeyId","abstract":"<p>The id of the pre key that was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleV03preG6PublicAA0jG0VSgv":{"name":"preKeyPublic","abstract":"<p>The pre key, if a pre key was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleV06signedfG2Ids6UInt32Vv":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleV06signedfG6PublicAA0jG0Vv":{"name":"signedPreKeyPublic","abstract":"<p>The signed pre key that was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleV06signedfG9Signature10Foundation4DataVv":{"name":"signedPreKeySignature","abstract":"<p>The signature of the signed pre key</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleV08identityG0AA06PublicG0Vv":{"name":"identityKey","abstract":"<p>The identity key of the remote party</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleVACs6UInt32V03preG2Id_AA06PublicG0VSg0jgL0AE06signedfgK0AH0mfgL010Foundation4DataV0mfG9SignatureAH08identityG0tcfc":{"name":"init(preKeyId:preKeyPublic:signedPreKeyId:signedPreKeyPublic:signedPreKeySignature:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleVAcA0efG6PublicV03preG0_AA0e6SignedfgI0V06signedfG0AA0iG0V08identityG0tcfc":{"name":"init(preKey:signedPreKey:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:22LibSignalProtocolSwift19SessionPreKeyBundleVAC10Foundation4DataV03preG0_AF06signedfG0AF08identityG0tKcfc":{"name":"init(preKey:signedPreKey:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV14messageVersions5UInt8Vv":{"name":"messageVersion","abstract":"<p>The version of the message</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV5keyIds6UInt32Vv":{"name":"keyId","abstract":"<p>The id of the key that was used</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The iteration of the chain key</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV10cipherText10Foundation4DataVv":{"name":"cipherText","abstract":"<p>The encrypted ciphertext</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature of the message</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV04baseG0AA010CipherTextG0VyKF":{"name":"baseMessage()","abstract":"<p>Return the message serialized</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageVACs6UInt32V5keyId_AE9iteration10Foundation4DataV10cipherTextAA07PrivateF0V09signatureF0tKcfc":{"name":"init(keyId:iteration:cipherText:signatureKey:)","abstract":"<p>Create a <code>SenderKeyMessage</code> from the components.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV6verifySbAA06PublicF0V09signatureF0_tKF":{"name":"verify(signatureKey:)","abstract":"<p>Verify that the signature matches the message.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the message.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageV6objectAA0b1_efG0Vv":{"name":"object","abstract":"<p>Convert the sender key message to a ProtoBuf object</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a sender key message from serialized data.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:22LibSignalProtocolSwift16SenderKeyMessageVAcA0b1_efG0V4from_s5UInt8V7version10Foundation4DataV9signaturetKcfc":{"name":"init(from:version:signature:)","abstract":"<p>Create a sender key message from a ProtoBuf object.</p>","parent_name":"SenderKeyMessage"},"Structs/DeviceConsistencySignature.html#/s:22LibSignalProtocolSwift26DeviceConsistencySignatureV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature data</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:22LibSignalProtocolSwift26DeviceConsistencySignatureV9vrfOutput10Foundation4DataVv":{"name":"vrfOutput","abstract":"<p>The output of the VRF verification</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:22LibSignalProtocolSwift26DeviceConsistencySignatureVAC10Foundation4DataV9signature_AF9vrfOutputtcfc":{"name":"init(signature:vrfOutput:)","abstract":"<p>Create a new signature</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:22LibSignalProtocolSwift26DeviceConsistencySignatureV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two consistency signatures.</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:22LibSignalProtocolSwift26DeviceConsistencySignatureV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two consistency signatures for equality.</p>","parent_name":"DeviceConsistencySignature"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV22derivedRootSecretsSize33_FE204DE9D26566F84AECE3ECED48459ELLSivZ":{"name":"derivedRootSecretsSize","abstract":"<p>The total number of bytes to derive when creating a new root and chain key</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV20iterationStartOffset33_FE204DE9D26566F84AECE3ECED48459ELLs5UInt8Vv":{"name":"iterationStartOffset","abstract":"<p>The offset for the expand iterations, depending on the version</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFVAcA11HKDFVersionO14messageVersion_tcfc":{"name":"init(messageVersion:)","abstract":"<p>Initialize a new KDF with the message version</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV13deriveSecrets10Foundation4DataVAG8material_AG4saltAG4infoSi12outputLengthtKF":{"name":"deriveSecrets(material:salt:info:outputLength:)","abstract":"<p>Derive new secrets from the KDF.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV6expand33_FE204DE9D26566F84AECE3ECED48459ELL10Foundation4DataVAH3prk_AH4infoSi12outputLengthtKF":{"name":"expand(prk:info:outputLength:)","abstract":"<p>Expand the bytes to create enough output bytes.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV15chainAndRootKeyAA07RatchethI0V04rootI0_AA0j5ChainI0V0fI0t10Foundation4DataV8material_AM4saltAM4infotKF":{"name":"chainAndRootKey(material:salt:info:)","abstract":"<p>Create a new chain key and root key.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two HKDFs.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:22LibSignalProtocolSwift4HKDFV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two HKDFs for equality.</p>","parent_name":"HKDF"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintV5localSSv":{"name":"local","abstract":"<p>Fingerprint String of the local device</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintV6remoteSSv":{"name":"remote","abstract":"<p>Fingerprint String of the remote device</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintV11displayTextSSv":{"name":"displayText","abstract":"<p>Displaytext</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintVACSS5local_SS6remotetcfc":{"name":"init(local:remote:)","abstract":"<p>Create a displayable fingerprint from local and remote fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintVAC10Foundation4DataV05localF0_AF06remoteF0tKcfc":{"name":"init(localFingerprint:remoteFingerprint:)","abstract":"<p>Create a displayable fingerprint from local and remote fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintV19createDisplayString33_BD5377DABC763E8E9D4E404CE0671433LLSS10Foundation4DataV11fingerprint_tFZ":{"name":"createDisplayString(fingerprint:)","abstract":"<p>Create a display string from fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:22LibSignalProtocolSwift22DisplayableFingerprintV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two displayable fingerprints for equality.</p>","parent_name":"DisplayableFingerprint"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV8providerAA0bE8Provider_pvZ":{"name":"provider","abstract":"<p>This variable can be set to provide a custom crypto provider.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV6random10Foundation4DataVSi5bytes_tKFZ":{"name":"random(bytes:)","abstract":"<p>Create a number of secure random bytes.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV10hmacSHA25610Foundation4DataVAG3for_AG4withtKFZ":{"name":"hmacSHA256(for:with:)","abstract":"<p>Authenticate a message with the HMAC based on SHA256.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV6sha51210Foundation4DataVAG3for_tKFZ":{"name":"sha512(for:)","abstract":"<p>Return the SHA512 message digest.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV7encrypt10Foundation4DataVAG7message_AA0B16EncryptionSchemeO4withAG3keyAG2ivtKFZ":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with the given scheme.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV7decrypt10Foundation4DataVAG7message_AA0B16EncryptionSchemeO4withAG3keyAG2ivtKFZ":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with the given scheme.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV23generateIdentityKeyPair10Foundation4DataVyKFZ":{"name":"generateIdentityKeyPair()","abstract":"<p>Generate an identity key pair.  Clients should only do this once, at install time.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV15generatePreKeysSayAA07SessionG3KeyVGs6UInt32V5start_Si5counttKFZ":{"name":"generatePreKeys(start:count:)","abstract":"<p>Generate a list of PreKeys.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV20generateSignedPreKeyAA07SessionghI0VAA07PrivateI0V08identityI0_s6UInt32V2ids6UInt64V9timestamptKFZ":{"name":"generateSignedPreKey(identityKey:id:timestamp:)","abstract":"<p>Generate a signed pre key.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV19generateSenderKeyIds6UInt32VyKFZ":{"name":"generateSenderKeyId()","abstract":"<p>Generate a sender key ID.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV17generateSenderKey10Foundation4DataVyKFZ":{"name":"generateSenderKey()","abstract":"<p>Generate a sender key.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoV24generateSenderSigningKeyAA0I4PairVyKFZ":{"name":"generateSenderSigningKey()","abstract":"<p>Generate a sender signing key pair</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:22LibSignalProtocolSwift0B6CryptoVACyc33_432C5B83821CC2D293B5A2439627BC70Llfc":{"name":"init()","abstract":"<p>SignalCrypto only has static functions and there is no need to create any instances</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html":{"name":"SignalCrypto","abstract":"<p>The <code>SignalCrypto</code> struct exposes all necessary cryptocraphic functions to the protocol."},"Structs/DisplayableFingerprint.html":{"name":"DisplayableFingerprint","abstract":"<p>A Fingerprint to verify the keys specifically for displaying to the user</p>"},"Structs/HKDF.html":{"name":"HKDF","abstract":"<p>The Key derivation function used for the Ratchet.</p>"},"Structs/DeviceConsistencySignature.html":{"name":"DeviceConsistencySignature","abstract":"<p>A signature used for device consistency checks</p>"},"Structs/SenderKeyMessage.html":{"name":"SenderKeyMessage","abstract":"<p>A sender key message is used to send an encrypted message in an existing group session.</p>"},"Structs/SessionPreKeyBundle.html":{"name":"SessionPreKeyBundle","abstract":"<p>Pre key bundles are used to establish new sessions.</p>"},"Structs/SessionSignedPreKeyPublic.html":{"name":"SessionSignedPreKeyPublic","abstract":"<p>A public signed pre key is used as part of a session bundle to establish a new session."},"Structs/SessionCipher.html":{"name":"SessionCipher","abstract":"<p>The main entry point for Signal Protocol encrypt/decrypt operations.</p>"},"Structs/SenderChainKey.html":{"name":"SenderChainKey","abstract":"<p>A key in the sender chain.</p>"},"Structs/SessionSignedPreKey.html":{"name":"SessionSignedPreKey","abstract":"<p>A signed pre key is used as part of a session bundle to establish a new session."},"Structs/Fingerprint.html":{"name":"Fingerprint","abstract":"<p>A fingerprint can be used to ensure that the identities of a communication channel"},"Structs/SymmetricParameters.html":{"name":"SymmetricParameters","abstract":"<p>All parameters needed to establish a session</p>"},"Structs/KeyPair.html":{"name":"KeyPair","abstract":"<p>A pair of public and private key for elliptic curve cryptopgraphy</p>"},"Structs/SignalAddress.html":{"name":"SignalAddress","abstract":"<p>A <code>SignalAddress</code> identifies a single device of a Signal user, with a user"},"Structs/PublicKey.html":{"name":"PublicKey","abstract":"<p>The public part of an elliptic curve key pair."},"Structs/RatchetChainKey.html":{"name":"RatchetChainKey","abstract":"<p>A chain key for the ratchet.</p>"},"Structs/CipherTextMessage.html":{"name":"CipherTextMessage","abstract":"<p>A <code>CipherTextMessage</code> encapsulates an encrypted message and the type-</p>"},"Structs/DeviceConsistencyCommitmentV0.html":{"name":"DeviceConsistencyCommitmentV0","abstract":"<p>Create commitments that are hashes of the identity keys of different devices."},"Structs/GroupCipher.html":{"name":"GroupCipher","abstract":"<p>Use a <code>GroupCipher</code> to encrypt and decrypt group messages for already"},"Structs/SenderChain.html":{"name":"SenderChain","abstract":"<p>The sender chain of a ratchet used to encrypt messages for sending.</p>"},"Structs/DeviceConsistencyMessage.html":{"name":"DeviceConsistencyMessage","abstract":"<p>Device consistency messages can be sent between multiple devices to verify that the"},"Structs/SignalCommonCrypto.html":{"name":"SignalCommonCrypto","abstract":"<p>Implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SignalCryptoProvider.html\">SignalCryptoProvider</a></code> protocol using"},"Structs/SessionPreKey.html":{"name":"SessionPreKey","abstract":"<p>A pre key used to esatblish a session. A unique pre key is used for"},"Structs/SessionPreKeyPublic.html":{"name":"SessionPreKeyPublic","abstract":"<p>A pre key used to esatblish a session. A unique pre key is used for"},"Structs/PreKeySignalMessage.html":{"name":"PreKeySignalMessage","abstract":"<p>A <code>PreKeySignalMessage</code> can be used to establish a new session.</p>"},"Structs/SenderMessageKey.html":{"name":"SenderMessageKey","abstract":"<p>A message key in a chain to encrypt/decrypt messages</p>"},"Structs/SenderKeyDistributionMessage.html":{"name":"SenderKeyDistributionMessage","abstract":"<p><code>SenderKeyDistributionMessage</code>s are used to establish group sessions.</p>"},"Structs/PendingPreKey.html":{"name":"PendingPreKey","abstract":"<p>A pre key sent out as a pre key message, until a message is received from the other party</p>"},"Structs/ScannableFingerprint.html":{"name":"ScannableFingerprint","abstract":"<p>A fingerprint optimised to be scanned through e.g. a QR Code</p>"},"Structs/SignalMessage.html":{"name":"SignalMessage","abstract":"<p>A <code>SignalMessage</code> is used to send an encrypted message in an established session.</p>"},"Structs/PrivateKey.html":{"name":"PrivateKey","abstract":"<p>The private part of an elliptic curve key pair."},"Structs/RatchetMessageKeys.html":{"name":"RatchetMessageKeys","abstract":"<p>The keys needed to encrypt/decrypt a message</p>"},"Structs/SignalSenderKeyName.html":{"name":"SignalSenderKeyName","abstract":"<p>A representation of a (group + sender + device) tuple</p>"},"Structs/RatchetRootKey.html":{"name":"RatchetRootKey","abstract":"<p>A root key is within a ratchet to derive new sender and receiver chain keys.</p>"},"Structs/SessionBuilder.html":{"name":"SessionBuilder","abstract":"<p>Session builder is responsible for setting up encrypted sessions."},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStoreP06signedfG010Foundation4DataVs6UInt32V3for_tKF":{"name":"signedPreKey(for:)","abstract":"<p>Provide a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStoreP5storey10Foundation4DataV06signedfG0_s6UInt32V3fortKF":{"name":"store(signedPreKey:for:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStoreP08containsefG0Sbs6UInt32V3for_tKF":{"name":"containsSignedPreKey(for:)","abstract":"<p>Indicate if a Signed Pre Key exists for an id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStoreP06removeefG0ys6UInt32V3for_tKF":{"name":"removeSignedPreKey(for:)","abstract":"<p>Remove a Signed Pre Key.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStoreP6allIdsSays6UInt32VGyKF":{"name":"allIds()","abstract":"<p>Get all Ids for the SignedPreKeys in the store.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStoreP6lastIds6UInt32Vv":{"name":"lastId","abstract":"<p>The id of the last SignedPreKey that was stored.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:22LibSignalProtocolSwift17SignedPreKeyStorePAAE5storeyAA07SessionefG0V06signedfG0_tKF":{"name":"store(signedPreKey:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignalCryptoProvider.html#/s:22LibSignalProtocolSwift0B14CryptoProviderP6random10Foundation4DataVSi5bytes_tKF":{"name":"random(bytes:)","abstract":"<p>Create a number of secure random bytes.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:22LibSignalProtocolSwift0B14CryptoProviderP10hmacSHA25610Foundation4DataVAG3for_AG4withtKF":{"name":"hmacSHA256(for:with:)","abstract":"<p>Authenticate a message with the HMAC based on SHA256.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:22LibSignalProtocolSwift0B14CryptoProviderP6sha51210Foundation4DataVAG3for_tKF":{"name":"sha512(for:)","abstract":"<p>Return the SHA512 message digest.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:22LibSignalProtocolSwift0B14CryptoProviderP7encrypt10Foundation4DataVAG7message_AA0B16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with the given scheme.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:22LibSignalProtocolSwift0B14CryptoProviderP7decrypt10Foundation4DataVAG7message_AA0B16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with the given scheme.</p>","parent_name":"SignalCryptoProvider"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStoreP7Address":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStoreP03geteF4Data10Foundation0I0VyKF":{"name":"getIdentityKeyData()","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStoreP5storey10Foundation4DataV08identityfJ0_tKF":{"name":"store(identityKeyData:)","abstract":"<p>Save the identity key pair.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStoreP8identity10Foundation4DataVSg7AddressQz3for_tKF":{"name":"identity(for:)","abstract":"<p>Return the identity for the given address, if there is any.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStoreP5storey10Foundation4DataVSg8identity_7AddressQz3fortKF":{"name":"store(identity:for:)","abstract":"<p>Store a remote client&rsquo;s identity key as trusted.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStorePAAE03geteF0AA0F4PairVyKF":{"name":"getIdentityKey()","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStorePAAE5storeyAA0F4PairV08identityF0_tKF":{"name":"store(identityKey:)","abstract":"<p>Save the identity key pair.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStorePAAE03geteF10PublicData10Foundation0J0VyKF":{"name":"getIdentityKeyPublicData()","abstract":"<p>Return the public identity key data.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStorePAAE9isTrustedSb10Foundation4DataV8identity_7AddressQz3fortKF":{"name":"isTrusted(identity:for:)","abstract":"<p>Determine whether a remote client&rsquo;s identity is trusted. The convention is","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:22LibSignalProtocolSwift16IdentityKeyStorePAAE9isTrustedSbAA06PublicF0V8identity_7AddressQz3fortKF":{"name":"isTrusted(identity:for:)","abstract":"<p>Determine whether a remote client&rsquo;s identity is trusted. The convention is","parent_name":"IdentityKeyStore"},"Protocols/PreKeyStore.html#/s:22LibSignalProtocolSwift11PreKeyStoreP03preF010Foundation4DataVs6UInt32V3for_tKF":{"name":"preKey(for:)","abstract":"<p>Provide a Pre Key for a given id.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:22LibSignalProtocolSwift11PreKeyStoreP5storey10Foundation4DataV03preF0_s6UInt32V3fortKF":{"name":"store(preKey:for:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:22LibSignalProtocolSwift11PreKeyStoreP08containseF0Sbs6UInt32V3for_tF":{"name":"containsPreKey(for:)","abstract":"<p>Indicate if a pre key exists for an id.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:22LibSignalProtocolSwift11PreKeyStoreP06removeeF0ys6UInt32V3for_tKF":{"name":"removePreKey(for:)","abstract":"<p>Remove a pre key.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:22LibSignalProtocolSwift11PreKeyStoreP6lastIds6UInt32Vv":{"name":"lastId","abstract":"<p>Return the id of the last stored pre key.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:22LibSignalProtocolSwift11PreKeyStorePAAE5storeyAA07SessioneF0V03preF0_tKF":{"name":"store(preKey:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStore"},"Protocols/SenderKeyStore.html#/s:22LibSignalProtocolSwift14SenderKeyStoreP7Address":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"SenderKeyStore"},"Protocols/SenderKeyStore.html#/s:22LibSignalProtocolSwift14SenderKeyStoreP06senderF010Foundation4DataVSg7AddressQz3for_tF":{"name":"senderKey(for:)","abstract":"<p>Returns a copy of the sender key record corresponding to the address tuple.</p>","parent_name":"SenderKeyStore"},"Protocols/SenderKeyStore.html#/s:22LibSignalProtocolSwift14SenderKeyStoreP5storey10Foundation4DataV06senderF0_7AddressQz3fortKF":{"name":"store(senderKey:for:)","abstract":"<p>Stores the sender key record.</p>","parent_name":"SenderKeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP7Address":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP12GroupAddress":{"name":"GroupAddress","abstract":"<p>The type that distinguishes different groups and devices/users</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP08IdentityeF4Type":{"name":"IdentityKeyStoreType","abstract":"<p>The type of the identity key store</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP06SendereF4Type":{"name":"SenderKeyStoreType","abstract":"<p>The type of the sender key store</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP07SessionF4Type":{"name":"SessionStoreType","abstract":"<p>The type of the session key store</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP08identityeF008IdentityeF4TypeQzv":{"name":"identityKeyStore","abstract":"<p>The Identity Key store that stores the records for the identity key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP03preeF0AA03PreeF0_pv":{"name":"preKeyStore","abstract":"<p>The Pre Key store that stores the records for the pre key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP06sendereF006SendereF4TypeQzv":{"name":"senderKeyStore","abstract":"<p>The Sender Key store that stores the records for the sender key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP07sessionF007SessionF4TypeQzv":{"name":"sessionStore","abstract":"<p>The Session store that stores the records for the session module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStoreP09signedPreeF0AA06SignedheF0_pv":{"name":"signedPreKeyStore","abstract":"<p>The Signed Pre Key store that stores the records for the signed pre key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStorePAAE014createIdentityE010Foundation4DataVyKF":{"name":"createIdentityKey()","abstract":"<p>Create a new identity key pair and store it.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStorePAAE18createSignedPrekey10Foundation4DataVs6UInt32V2id_s6UInt64V9timestamptKF":{"name":"createSignedPrekey(id:timestamp:)","abstract":"<p>Create a signed pre key with the given id and store it.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStorePAAE13createPreKeysSay10Foundation4DataVGs6UInt32V5start_Si5counttKF":{"name":"createPreKeys(start:count:)","abstract":"<p>Create a number of pre keys and store them.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:22LibSignalProtocolSwift8KeyStorePAAE11fingerprintAA11FingerprintV7AddressQz3for_AH05localI0tKF":{"name":"fingerprint(for:localAddress:)","abstract":"<p>Create a fingerprint to compare keys with someone.</p>","parent_name":"KeyStore"},"Protocols/SessionStore.html#/s:22LibSignalProtocolSwift12SessionStoreP7Address":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:22LibSignalProtocolSwift12SessionStoreP04loadE010Foundation4DataVSg7AddressQz3for_tKF":{"name":"loadSession(for:)","abstract":"<p>Load a session for a given address.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:22LibSignalProtocolSwift12SessionStoreP5storey10Foundation4DataV7session_7AddressQz3fortKF":{"name":"store(session:for:)","abstract":"<p>Store a session record for a remote client.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:22LibSignalProtocolSwift12SessionStoreP08containsE0Sb7AddressQz3for_tF":{"name":"containsSession(for:)","abstract":"<p>Indicate if a record exists for the client address</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:22LibSignalProtocolSwift12SessionStoreP06deleteE0y7AddressQz3for_tKF":{"name":"deleteSession(for:)","abstract":"<p>Delete a session for a remote client.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html":{"name":"SessionStore","abstract":"<p>Implement the <code>SessionStore</code> protocol to handle the session records of the"},"Protocols/KeyStore.html":{"name":"KeyStore","abstract":"<p>Provide all local storage delegates.</p>"},"Protocols/SenderKeyStore.html":{"name":"SenderKeyStore","abstract":"<p>Implement the <code>SenderKeyStore</code> protocol to handle the sender key storage of the"},"Protocols/PreKeyStore.html":{"name":"PreKeyStore","abstract":"<p>Implement the <code>PreKeyStore</code> protocol to handle the pre key storage of the"},"Protocols/IdentityKeyStore.html":{"name":"IdentityKeyStore","abstract":"<p>Implement the <code>IdentityKeyStore</code> protocol to handle the identity keys of the"},"Protocols/SignalCryptoProvider.html":{"name":"SignalCryptoProvider","abstract":"<p>The <code>SignalCryptoProvider</code> protocol can be implemented to provide a custom"},"Protocols/SignedPreKeyStore.html":{"name":"SignedPreKeyStore","abstract":"<p>Implement the <code>SignedPreKeyStore</code> protocol to handle the signed pre key storage of the"},"Functions.html#/s:22LibSignalProtocolSwift13getLogicalKey33_6A8261713B71FB60AB9C03E79A4B86FFLL10Foundation4DataVSayAA06PublicG0VG3for_tF":{"name":"getLogicalKey(for:)","abstract":"<p>Serialize the list of public keys by first sorting the keys and then"},"Functions.html#/s:22LibSignalProtocolSwift14getFingerprint33_6A8261713B71FB60AB9C03E79A4B86FFLL10Foundation4DataVAF8identity_SS16stableIdentifierSi10iterationstKF":{"name":"getFingerprint(identity:stableIdentifier:iterations:)","abstract":"<p>Calculate the fingerprint for identity data and identifier.</p>"},"Enums/SignalEncryptionScheme.html#/s:22LibSignalProtocolSwift0B16EncryptionSchemeO16AES_CBCwithPKCS5A2CmF":{"name":"AES_CBCwithPKCS5","abstract":"<p>Encrypt/decrypt with AES in CBC mode with PKCS5 padding</p>","parent_name":"SignalEncryptionScheme"},"Enums/SignalEncryptionScheme.html#/s:22LibSignalProtocolSwift0B16EncryptionSchemeO16AES_CTRnoPaddingA2CmF":{"name":"AES_CTRnoPadding","abstract":"<p>Encrypt/decrypt with AES in CTR mode with no padding</p>","parent_name":"SignalEncryptionScheme"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeO6signalA2CmF":{"name":"signal","abstract":"<p>A &lsquo;normal&rsquo; message in an established session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeO6preKeyA2CmF":{"name":"preKey","abstract":"<p>A pre key message to establish a new session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeO9senderKeyA2CmF":{"name":"senderKey","abstract":"<p>A normal message in an established group session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeO21senderKeyDistributionA2CmF":{"name":"senderKeyDistribution","abstract":"<p>A distribution message to establish a new group session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeO11descriptionSSv":{"name":"description","abstract":"<p>A String representation of the type</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeO4data10Foundation4DataVv":{"name":"data","abstract":"<p>Encode the type into a string</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:22LibSignalProtocolSwift14CipherTextTypeOACSg10Foundation4DataV4from_tcfc":{"name":"init(from:)","abstract":"<p>Extract the <code>CipherTextType</code> from data.</p>","parent_name":"CipherTextType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO7unknownA2CmF":{"name":"unknown","abstract":"<p>Unknown errors should only be thrown of no other, more descriptive error type exists</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO05curveE0A2CmF":{"name":"curveError","abstract":"<p>Curve25519 functions returned an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO07storageE0A2CmF":{"name":"storageError","abstract":"<p>The local storage implementation produced an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO16duplicateMessageA2CmF":{"name":"duplicateMessage","abstract":"<p>A message was received that was previously decrypted, or is too old</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO07invalidF0A2CmF":{"name":"invalidType","abstract":"<p>The message type does not match</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO10invalidKeyA2CmF":{"name":"invalidKey","abstract":"<p>An invalid key produced an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO9invalidIdA2CmF":{"name":"invalidId","abstract":"<p>The (key) id is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO10invalidMacA2CmF":{"name":"invalidMac","abstract":"<p>The authentication failed</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO14invalidMessageA2CmF":{"name":"invalidMessage","abstract":"<p>The message structure is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO14invalidVersionA2CmF":{"name":"invalidVersion","abstract":"<p>The version of the message or object is unsupported</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO13invalidLengthA2CmF":{"name":"invalidLength","abstract":"<p>The length of a message or stored object is incorrect</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO13legacyMessageA2CmF":{"name":"legacyMessage","abstract":"<p>A message from an older implementation of the protocol is received</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO9noSessionA2CmF":{"name":"noSession","abstract":"<p>No valid session exists for the address</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO17untrustedIdentityA2CmF":{"name":"untrustedIdentity","abstract":"<p>The identity of the recipient is untrusted</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO16invalidSignatureA2CmF":{"name":"invalidSignature","abstract":"<p>The signature of the message is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO15invalidProtoBufA2CmF":{"name":"invalidProtoBuf","abstract":"<p>A serialized record or message is not in valid protocol buffer format</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO17fPVersionMismatchA2CmF":{"name":"fPVersionMismatch","abstract":"<p>The version of two fingerprints is not equal</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO18fPIdentityMismatchA2CmF":{"name":"fPIdentityMismatch","abstract":"<p>The identity of two fingerprints is not equal</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO16noCryptoProviderA2CmF":{"name":"noCryptoProvider","abstract":"<p>There is no crypto provider set</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO13noRandomBytesA2CmF":{"name":"noRandomBytes","abstract":"<p>Random bytes could not be created</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO04hmacE0A2CmF":{"name":"hmacError","abstract":"<p>There was an error calculating the HMAC of a message</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO06digestE0A2CmF":{"name":"digestError","abstract":"<p>There was an error calculating a digest</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO010encryptionE0A2CmF":{"name":"encryptionError","abstract":"<p>An error occured during encryption</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:22LibSignalProtocolSwift0B9ErrorTypeO010decryptionE0A2CmF":{"name":"decryptionError","abstract":"<p>An error occured during decryption</p>","parent_name":"SignalErrorType"},"Enums/HKDFVersion.html#/s:22LibSignalProtocolSwift11HKDFVersionO8version2A2CmF":{"name":"version2","abstract":"<p>Older messages have an iteration offset of 0</p>","parent_name":"HKDFVersion"},"Enums/HKDFVersion.html#/s:22LibSignalProtocolSwift11HKDFVersionO8version3A2CmF":{"name":"version3","abstract":"<p>Newer messages have an iteration offset of 1</p>","parent_name":"HKDFVersion"},"Enums/HKDFVersion.html":{"name":"HKDFVersion","abstract":"<p>The different versions of the HKDF</p>"},"Enums/SignalErrorType.html":{"name":"SignalErrorType","abstract":"<p>The different types of errors that can occur using the SignalProtocolSwift library.</p>"},"Enums/CipherTextType.html":{"name":"CipherTextType","abstract":"<p>The <code>CipherTextType</code> enum describes the different types of messages.</p>"},"Enums/SignalEncryptionScheme.html":{"name":"SignalEncryptionScheme","abstract":"<p>Specifies the type of algorithm to use for encryption and decryption.</p>"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC9maxStates33_BCD2F510178A9CB6B4B3904EA1B506D5LLSivZ":{"name":"maxStates","abstract":"<p>The maximum number of different states that are saved</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC6states33_BCD2F510178A9CB6B4B3904EA1B506D5LLSayAA0eF5StateCGv":{"name":"states","abstract":"<p>The states that are saved by the record, sorted by most recent</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC5stateAA0eF5StateCSgv":{"name":"state","abstract":"<p>The active state is the most recent, if any states exist</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC7isEmptySbv":{"name":"isEmpty","abstract":"<p>Indicate if there are any states in this record</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordCACycfc":{"name":"init()","abstract":"<p>Create a fresh session record without any states.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC5stateAA0eF5StateCSgs6UInt32V3for_tF":{"name":"state(for:)","abstract":"<p>Get the state for an id.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC03seteF0ys6UInt32V2id_AF9iteration10Foundation4DataV05chainF0AA0F4PairV09signaturefO0tF":{"name":"setSenderKey(id:iteration:chainKey:signatureKeyPair:)","abstract":"<p>Set a new sender key state and delete all previous states.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC8addStateys6UInt32V2id_AF9iteration10Foundation4DataV05chainF0AA06PublicF0V09signaturepF0AA07PrivateF0VSg0qrF0tF":{"name":"addState(id:iteration:chainKey:signaturePublicKey:signaturePrivateKey:)","abstract":"<p>Add a new sender key state.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC8addStateys6UInt32V2id_AF9iteration10Foundation4DataV05chainF0AA0F4PairV09signaturefP0tF":{"name":"addState(id:iteration:chainKey:signatureKeyPair:)","abstract":"<p>Add a new sender key state.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC6objectAA0b1_efG0Vv":{"name":"object","abstract":"<p>The record converted to a ProtoBuf object for storage</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The record converted to data for storage</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordCAcA0b1_efG0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from a ProtoBuf object.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from serialized data.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:22LibSignalProtocolSwift15SenderKeyRecordC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two records.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC07messageF7MaximumSivZ":{"name":"messageKeyMaximum","abstract":"<p>The maximum number of message keys stored</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC5keyIds6UInt32Vv":{"name":"keyId","abstract":"<p>The current key id</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC05chainF0AA0e5ChainF0Vv":{"name":"chainKey","abstract":"<p>The chain key of the state used for key generation</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC015signaturePublicF0AA0iF0Vv":{"name":"signaturePublicKey","abstract":"<p>The signature key</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC016signaturePrivateF0AA0iF0VSgv":{"name":"signaturePrivateKey","abstract":"<p>The private part of the signature key, optional</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC11messageKeys33_3304E0E11836067310A128E3CB4105C3LLSayAA0e7MessageF0VGv":{"name":"messageKeys","abstract":"<p>Dictionary of message keys indexed by iteration</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateCACs6UInt32V5keyId_AA0e5ChainF0V05chainF0AA06PublicF0V09signaturemF0AA07PrivateF0VSg0noF0tcfc":{"name":"init(keyId:chainKey:signaturePublicKey:signaturePrivateKey:)","abstract":"<p>Create a new session state.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC3addyAA0e7MessageF0V07messageF0_Sb15removingOldKeystF":{"name":"add(messageKey:removingOldKeys:)","abstract":"<p>Add a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SenderMessageKey.html\">SenderMessageKey</a></code> to the keys which are stored to decrypt old (out of order) messages.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC07messageF0AA0e7MessageF0VSgs6UInt32V3for_tF":{"name":"messageKey(for:)","abstract":"<p>Get the message key for the iteration, if it exists.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC20removeOldMessageKeys33_3304E0E11836067310A128E3CB4105C3LLyyF":{"name":"removeOldMessageKeys()","abstract":"<p>Remove old message keys if the number is higher then the maximum.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC06senderF0AA0e7MessageF0Vs6UInt32V3for_tKF":{"name":"senderKey(for:)","abstract":"<p>Get the sender key for the iteration of the chain.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a SenderKeyState from serialized data.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateCAcA0b1_efG0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a SenderKeyState from a ProtoBuf object.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC6objectAA0b1_efG0Vv":{"name":"object","abstract":"<p>The state converted to a ProtoBuf object</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The state converted to serialized data for storage.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:22LibSignalProtocolSwift14SenderKeyStateC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare tow states for equality</p>","parent_name":"SenderKeyState"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC10ratchetKeyAA06PublicH0Vv":{"name":"ratchetKey","abstract":"<p>The current ratchet key</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC8chainKeyAA07RatchetfH0Vv":{"name":"chainKey","abstract":"<p>The current chain key</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC11messageKeys33_177B6DEA0DC893856DA6353E94DF7AB9LLSayAA014RatchetMessageH0VGv":{"name":"messageKeys","abstract":"<p>The stored message keys for out-of-order messages</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainCAcA9PublicKeyV07ratchetH0_AA07RatchetfH0V05chainH0tcfc":{"name":"init(ratchetKey:chainKey:)","abstract":"<p>Create a receiver chain from the components.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC3addyAA18RatchetMessageKeysV10messageKey_tF":{"name":"add(messageKey:)","abstract":"<p>Add a message key to the stored message keys.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC3hasSbAA18RatchetMessageKeysV10messageKey_tF":{"name":"has(messageKey:)","abstract":"<p>Check if a message key already exists.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC10messageKeyAA18RatchetMessageKeysVSgs6UInt32V3for_tF":{"name":"messageKey(for:)","abstract":"<p>Get a message key if it exists.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC16removeMessageKeyAA07RatchetH4KeysVSgs6UInt32V3for_tF":{"name":"removeMessageKey(for:)","abstract":"<p>Remove a message key and return it.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainCAcA0B8_SessionV0F0V4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a receiver chain from a protobuf object.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainCAC10Foundation4DataV4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Deserialize a receiver chain.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the receiver chain.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC6objectAA0B8_SessionV0F0Vv":{"name":"object","abstract":"<p>The receiver chain converted to a protobuf object</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:22LibSignalProtocolSwift13ReceiverChainC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two receiver chains for equality.</p>","parent_name":"ReceiverChain"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC24cipherTextCurrentVersion33_8A8EB4149401B3CC951FC55865B59146LLs5UInt8VvZ":{"name":"cipherTextCurrentVersion","abstract":"<p>The current version of the message encryption</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC17maxReceiverChains33_8A8EB4149401B3CC951FC55865B59146LLSivZ":{"name":"maxReceiverChains","abstract":"<p>The maximum number of receiver chains for the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC7keyInfo33_8A8EB4149401B3CC951FC55865B59146LL10Foundation4DataVvZ":{"name":"keyInfo","abstract":"<p>The info material used for the derivation of chain and root keys</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC7versions5UInt8Vv":{"name":"version","abstract":"<p>The version of the session</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC15previousCounters6UInt32Vv":{"name":"previousCounter","abstract":"<p>The last counter in the previous sender chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC13localIdentityAA9PublicKeyVSgv":{"name":"localIdentity","abstract":"<p>The identity key of the local party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC14remoteIdentityAA9PublicKeyVSgv":{"name":"remoteIdentity","abstract":"<p>The identity key of the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC7rootKeyAA011RatchetRootH0VSgv":{"name":"rootKey","abstract":"<p>The root key of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC11senderChainAA06SenderH0VSgv":{"name":"senderChain","abstract":"<p>The sender chain of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC14receiverChainsSayAA13ReceiverChainCGv":{"name":"receiverChains","abstract":"<p>The receiver chains of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC13pendingPreKeyAA07PendinghI0VSgv":{"name":"pendingPreKey","abstract":"<p>An optional pending pre key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC12aliceBaseKeyAA06PublicI0VSgv":{"name":"aliceBaseKey","abstract":"<p>The base key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateCACycfc":{"name":"init()","abstract":"<p>Create a new sender state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC13receiverChainAA08ReceiverH0CSgAA9PublicKeyV3for_tF":{"name":"receiverChain(for:)","abstract":"<p>Find a receiver chain for a sender key.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC3addyAA13ReceiverChainC08receiverI0_tF":{"name":"add(receiverChain:)","abstract":"<p>Add a receiver chain to the state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC3setyAA15RatchetChainKeyV05chainJ0_AA06PublicJ0V3fortKF":{"name":"set(chainKey:for:)","abstract":"<p>Set the chain key for a given sender key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC3setyAA18RatchetMessageKeysV07messageJ0_AA9PublicKeyV3fortF":{"name":"set(messageKeys:for:)","abstract":"<p>Set the message keys for a given sender key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC17removeMessageKeysAA07RatchethI0VSgAA9PublicKeyV3for_s6UInt32V3andtF":{"name":"removeMessageKeys(for:and:)","abstract":"<p>Remove message keys</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC16receiverChainKeyAA07RatchethI0VSgAA06PublicI0V3for_tF":{"name":"receiverChainKey(for:)","abstract":"<p>Find the chain key of a receiver chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC3setyAA15RatchetChainKeyV08receiveriJ0_AA06PublicJ0V3fortKF":{"name":"set(receiverChainKey:for:)","abstract":"<p>Set the chain key of a receiver chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC15aliceInitializeyAA7KeyPairV011ourIdentityI0_AF0k4BaseI0AA06PublicI0V05theirlI0AJ0o9SignedPreI0AJSg0o7OneTimeqI0AJ0o7RatchetI0tKF":{"name":"aliceInitialize(ourIdentityKey:ourBaseKey:theirIdentityKey:theirSignedPreKey:theirOneTimePreKey:theirRatchetKey:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC13bobInitializeyAA7KeyPairV011ourIdentityI0_AF0k9SignedPreI0AFSg0k7OneTimenI0AF0k7RatchetI0AA06PublicI0V05theirlI0AM0s4BaseI0tKF":{"name":"bobInitialize(ourIdentityKey:ourSignedPreKey:ourOneTimePreKey:ourRatchetKey:theirIdentityKey:theirBaseKey:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC19symmetricInitializeyAA19SymmetricParametersV10parameters_tKF":{"name":"symmetricInitialize(parameters:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC20calculateDerivedKeys33_8A8EB4149401B3CC951FC55865B59146LLAA14RatchetRootKeyV04rootR0_AA0p5ChainR0V05chainR0t10Foundation4DataV6secret_tKF":{"name":"calculateDerivedKeys(secret:)","abstract":"<p>Create the root and chain key from the secret.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateCAcA0b1_E0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a state from a protobuf object.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a state from serialized data.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC6objectAA0b1_E0Vv":{"name":"object","abstract":"<p>The state converted to a protobuf object</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:22LibSignalProtocolSwift12SessionStateC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare tow session states.</p>","parent_name":"SessionState"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC4typeAA0bE4TypeOv":{"name":"type","abstract":"<p>The error type</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC7messageSSSgv":{"name":"message","abstract":"<p>A decribing message accompaning the error</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC5causeACSgv":{"name":"cause","abstract":"<p>If the error occured in a subfunction, then this variable can be used to construct an error trace.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC8functionSSv":{"name":"function","abstract":"<p>The function were the error occured</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC4fileSSv":{"name":"file","abstract":"<p>The file that the error occured in</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorCAcA0bE4TypeO_SSSgACSg5causeSS4fileSS8functiontcfc":{"name":"init(_:_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code>.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorCACSS_AC5causeSS4fileSS8functiontcfc":{"name":"init(_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code> using an already exisiting <code>SignalError</code> from a subroutine.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorCACSS_s0E0_p5causeSS4fileSS8functiontcfc":{"name":"init(_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code> using an already exisiting <code>Error</code> from a subroutine.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC11descriptionSSv":{"name":"description","abstract":"<p>A decription of the error, including all contained errors, without function and file names</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC16shortDescriptionSSv":{"name":"shortDescription","abstract":"<p>A short decription of the error without the contained errors</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC15longDescriptionSSv":{"name":"longDescription","abstract":"<p>A decription of the error, including all contained errors, as well as function and file names</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC5trace33_27C6E7DDCFAFD2FBFED32F461AF02ED2LLSSv":{"name":"trace","abstract":"<p>The trace of the error which is used to build the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC15longDescriptionSSv\">longDescription</a></code></p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:22LibSignalProtocolSwift0B5ErrorC20localizedDescriptionSSv":{"name":"localizedDescription","abstract":"<p>The description of the error</p>","parent_name":"SignalError"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC17archivedStatesMax33_0ACA616C526151F4CF2694AEDDF3C1EBLLSivZ":{"name":"archivedStatesMax","abstract":"<p>The maximum number of archived states</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC5stateAA0E5StateCv":{"name":"state","abstract":"<p>The current session</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC14previousStatesSayAA0E5StateCGv":{"name":"previousStates","abstract":"<p>A list of previous sessions, sorted by most recent</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC7isFreshSbv":{"name":"isFresh","abstract":"<p>Indicates if the session was just created</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordCAcA0E5StateCSg5state_tcfc":{"name":"init(state:)","abstract":"<p>Create a new session record for a session.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC03hasE5StateSbs5UInt8V7version_AA9PublicKeyV04baseL0tF":{"name":"hasSessionState(version:baseKey:)","abstract":"<p>Check if the session record contains a specific state.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC19archiveCurrentStateyyF":{"name":"archiveCurrentState()","abstract":"<p>Create a new state and archive the old one.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC12promoteStateyAA0eH0C5state_tF":{"name":"promoteState(state:)","abstract":"<p>Make a state the currently active state.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC11removeState33_0ACA616C526151F4CF2694AEDDF3C1EBLLys5UInt8V3for_AA9PublicKeyV3andtF":{"name":"removeState(for:and:)","abstract":"<p>Remove a state from the previous states.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the record for storage.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC6objectAA0b1_F0Vv":{"name":"object","abstract":"<p>Convert the record to a ProtoBuf object for storage</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from serialized data.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordCAcA0b1_F0V4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a session record from a ProtoBuf object.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:22LibSignalProtocolSwift13SessionRecordC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two session records for equality.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html":{"name":"SessionRecord","abstract":"<p>The record of a session (and previous sessions) with another party.</p>"},"Classes/SignalError.html":{"name":"SignalError","abstract":"<p>All errors thrown by <code>SignalProtocolSwift</code> are <code>SignalError</code> objects.</p>"},"Classes/SessionState.html":{"name":"SessionState","abstract":"<p>A session state contains all data needed for communicating with a remote party.</p>"},"Classes/ReceiverChain.html":{"name":"ReceiverChain","abstract":"<p>A receiver chain is the part of the ratchet that creates the message keys for the received messages.</p>"},"Classes/SenderKeyState.html":{"name":"SenderKeyState","abstract":"<p>A state of a group message session with a recipient,"},"Classes/SenderKeyRecord.html":{"name":"SenderKeyRecord","abstract":"<p>Stores the states for a session.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}
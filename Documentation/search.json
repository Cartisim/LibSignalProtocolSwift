{"Typealiases.html#/s:19SignalProtocolSwift22RatchetIdentityKeyPaira":{"name":"RatchetIdentityKeyPair","abstract":"<p>An elliptic key pair specifically used for identification in a ratchet</p>"},"Structs/SessionBuilder.html#/s:19SignalProtocolSwift14SessionBuilderV5storexv":{"name":"store","abstract":"<p>The store to save and retrieve keys from</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:19SignalProtocolSwift14SessionBuilderV13remoteAddress0G0Qzv":{"name":"remoteAddress","abstract":"<p>The address of the other party</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:19SignalProtocolSwift14SessionBuilderVACyxG7AddressQz06remoteF0_x5storetcfc":{"name":"init(remoteAddress:store:)","abstract":"<p>Constructs a session builder.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:19SignalProtocolSwift14SessionBuilderV7processs6UInt32VSgAA06PreKeyA7MessageV03preiaJ0_AA0D6RecordC07sessionL0tKF":{"name":"process(preKeySignalMessage:sessionRecord:)","abstract":"<p>Build a new session from a received PreKeySignalMessage.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:19SignalProtocolSwift14SessionBuilderV7process33_F2552E37B839B25531B888E868244E79LLs6UInt32VSgAA06PreKeyA7MessageV03prepaQ2V3_AA0D6RecordC6recordtKF":{"name":"process(preKeySignalMessageV3:record:)","abstract":"<p>Build a new session from a received PreKeySignalMessage.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:19SignalProtocolSwift14SessionBuilderV7processyAA0D12PreKeyBundleV03prehI0_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SessionPreKeyBundle.html\">SessionPreKeyBundle</a></code> retrieved from a server.</p>","parent_name":"SessionBuilder"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV7keyInfo33_F92C53B669259A5A6D3959FEA94001F0LL10Foundation4DataVvZ":{"name":"keyInfo","abstract":"<p>Bytes used as input for the KDF</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV10secretSizeSivZ":{"name":"secretSize","abstract":"<p>The number of bytes for the root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV3kdf33_F92C53B669259A5A6D3959FEA94001F0LLAA4HKDFVv":{"name":"kdf","abstract":"<p>The key derivation function for the root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV3key10Foundation4DataVv":{"name":"key","abstract":"<p>The current root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyVAcA4HKDFV3kdf_10Foundation4DataV3keytcfc":{"name":"init(kdf:key:)","abstract":"<p>Create a new root key from the components</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV11createChainAC04rootF0_AA0dhF0V05chainF0tAA06PublicF0V05theirdF0_AA07PrivateF0V03ourdF0tKF":{"name":"createChain(theirRatchetKey:ourRatchetKey:)","abstract":"<p>Create a new root key and chain key.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyVAC10Foundation4DataV4from_AA11HKDFVersionO7versiontcfc":{"name":"init(from:version:)","abstract":"<p>Deserialize a root key.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV4data10Foundation4DataVv":{"name":"data","abstract":"<p>The serialized root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two root keys.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:19SignalProtocolSwift14RatchetRootKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two root keys for equality.</p>","parent_name":"RatchetRootKey"},"Structs/SignalSenderKeyName.html#/s:19SignalProtocolSwift0A13SenderKeyNameV7groupIdSSv":{"name":"groupId","abstract":"<p>The group identifier (such as the name)</p>","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:19SignalProtocolSwift0A13SenderKeyNameV6senderAA0A7AddressVv":{"name":"sender","abstract":"<p>The contact</p>","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:19SignalProtocolSwift0A13SenderKeyNameVACSS7groupId_AA0A7AddressV6sendertcfc":{"name":"init(groupId:sender:)","abstract":"<p>Create a new <code>SignalSenderKeyName</code></p>","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:19SignalProtocolSwift0A13SenderKeyNameV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two <code>SignalSenderKeyName</code>. Two <code>SignalSenderKeyName</code> objects are","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:19SignalProtocolSwift0A13SenderKeyNameV9hashValueSiv":{"name":"hashValue","abstract":"<p>A hash value of the address, constructed by summing the","parent_name":"SignalSenderKeyName"},"Structs/SignalSenderKeyName.html#/s:19SignalProtocolSwift0A13SenderKeyNameV11descriptionSSv":{"name":"description","abstract":"<p>A String representation of the sender key name.</p>","parent_name":"SignalSenderKeyName"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV15cipherKeyLengthSivZ":{"name":"cipherKeyLength","abstract":"<p>The length of cipher keys in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV12macKeyLengthSivZ":{"name":"macKeyLength","abstract":"<p>The length of the mac key in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV8ivLengthSivZ":{"name":"ivLength","abstract":"<p>The length of the initialization vector in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV07derivedE11SecretsSizeSivZ":{"name":"derivedMessageSecretsSize","abstract":"<p>The length of cipher key, mac key, and iv</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV9cipherKey10Foundation4DataVv":{"name":"cipherKey","abstract":"<p>The cipher key to encrypt/decrypt a message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV6macKey10Foundation4DataVv":{"name":"macKey","abstract":"<p>The mac key of a message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV2iv10Foundation4DataVv":{"name":"iv","abstract":"<p>The initialization vector</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV7counters6UInt32Vv":{"name":"counter","abstract":"<p>The counter of the message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysVAC10Foundation4DataV6cipher_AF3macAF2ivs6UInt32V7countertKcfc":{"name":"init(cipher:mac:iv:counter:)","abstract":"<p>Create the message keys from the components</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysVAC10Foundation4DataV8material_tKcfc":{"name":"init(material:)","abstract":"<p>Create the message keys from generated bytes.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysVAcA27Textsecure_SessionStructureV5ChainV0E3KeyV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create message keys from a ProtoBuf object.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Deserialize the message keys.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the keys.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV6objectAA27Textsecure_SessionStructureV5ChainV0E3KeyVv":{"name":"object","abstract":"<p>The message keys converted to a ProtoBuf object</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:19SignalProtocolSwift18RatchetMessageKeysV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two message keys for equality.</p>","parent_name":"RatchetMessageKeys"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyV3key33_546CE9E6F235834417617B48E1E07040LL10Foundation4DataVv":{"name":"key","abstract":"<p>The key material of length <code>KeyPair.keyLength</code></p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyVAC10Foundation4DataV5point_tKcfc":{"name":"init(point:)","abstract":"<p>Create a private key from a curve point.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyVAC10Foundation4DataV15unverifiedPoint_tKcfc":{"name":"init(unverifiedPoint:)","abstract":"<p>Create a private key. Only checks the length, nothing else.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyVACyKcfc":{"name":"init()","abstract":"<p>Create a new random private key.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyV4sign10Foundation4DataVAG7message_tKF":{"name":"sign(message:)","abstract":"<p>Calculate the signature for the given message.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyV7signVRF10Foundation4DataVAG7message_tKF":{"name":"signVRF(message:)","abstract":"<p>Calculates a unique Curve25519 signature for the private key</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyV18calculateAgreement10Foundation4DataVAA06PublicE0V06publicE0_tKF":{"name":"calculateAgreement(publicKey:)","abstract":"<p>Calculate the shared agreement between the private key and the given public key.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two private keys for equality.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a private key from a byte record.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:19SignalProtocolSwift10PrivateKeyV4data10Foundation4DataVv":{"name":"data","abstract":"<p>Convert the key to serialized data</p>","parent_name":"PrivateKey"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV9macLengthSivZ":{"name":"macLength","abstract":"<p>The length of the MAC for a message in bytes</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV14messageVersions5UInt8Vv":{"name":"messageVersion","abstract":"<p>The message version</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV16senderRatchetKeyAA06PublicG0Vv":{"name":"senderRatchetKey","abstract":"<p>The public key of the sending ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV7counters6UInt32Vv":{"name":"counter","abstract":"<p>The current counter of the ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV15previousCounters6UInt32Vv":{"name":"previousCounter","abstract":"<p>The counter of the previous ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV10cipherText10Foundation4DataVv":{"name":"cipherText","abstract":"<p>The encrypted text</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV3mac10Foundation4DataVv":{"name":"mac","abstract":"<p>The mac of the message</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageVACs5UInt8V14messageVersion_10Foundation4DataV6macKeyAA06PublicK0V013senderRatchetK0s6UInt32V7counterAO15previousCounterAI10cipherTextAL0m8IdentityK0AL08receiveruK0tKcfc":{"name":"init(messageVersion:macKey:senderRatchetKey:counter:previousCounter:cipherText:senderIdentityKey:receiverIdentityKey:)","abstract":"<p>Create a SignalMessage from its components.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV6getMac05_A6E7H26EEE6E54F11C14CE24EDD639297LL10Foundation4DataVAA9PublicKeyV014senderIdentityR0_AJ08receivertR0AH03macR0AH7messagetKF":{"name":"getMac(senderIdentityKey:receiverIdentityKey:macKey:message:)","abstract":"<p>Calculate the MAC of the message. The length of the MAC is specified by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV9macLengthSivZ\">SignalMessage.macLength</a></code></p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV9verifyMacSbAA9PublicKeyV014senderIdentityH0_AF08receiverjH010Foundation4DataV03macH0tKF":{"name":"verifyMac(senderIdentityKey:receiverIdentityKey:macKey:)","abstract":"<p>Verify the MAC of the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV08isLegacyD0Sb10Foundation4DataV10serialized_tFZ":{"name":"isLegacyMessage(serialized:)","abstract":"<p>Check if a message has an old version.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV04baseD0AA010CipherTextD0VyKF":{"name":"baseMessage()","abstract":"<p>Return the serialized version of the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV6objectAA011Textsecure_aD0Vv":{"name":"object","abstract":"<p>Convert signal message to a ProtoBuf object</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signal message from serialized data.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageVAcA011Textsecure_aD0V4from_s5UInt8V7version10Foundation4DataV3mactKcfc":{"name":"init(from:version:mac:)","abstract":"<p>Create a signal message from a ProtoBuf object.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:19SignalProtocolSwift0A7MessageV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalMessages for equality.</p>","parent_name":"SignalMessage"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyV03preF2Ids6UInt32VSgv":{"name":"preKeyId","abstract":"<p>The id of the pre key, if one was used</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyV06signedeF2Ids6UInt32Vv":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyV04baseF0AA06PublicF0Vv":{"name":"baseKey","abstract":"<p>The base key used for the outgoing pre key message</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyVAcA27Textsecure_SessionStructureVABV16serializedObject_tKcfc":{"name":"init(serializedObject:)","abstract":"<p>Create a pending pre key from a ProtoBuf object.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pending pre key from serialized data.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize a pending pre key for storage.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyV6objectAA27Textsecure_SessionStructureVABVv":{"name":"object","abstract":"<p>Create a ProtoBuf object for serialization.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:19SignalProtocolSwift13PendingPreKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two pending pre keys for equality.</p>","parent_name":"PendingPreKey"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The current chain iteration of the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV05chainE010Foundation4DataVv":{"name":"chainKey","abstract":"<p>The chain key used for the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV09signatureE0AA06PublicE0Vv":{"name":"signatureKey","abstract":"<p>The signature key used for signing the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV04baseG0AA010CipherTextG0VyKF":{"name":"baseMessage()","abstract":"<p>Create a serialized message from the distribution message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageVACs6UInt32V2id_AE9iteration10Foundation4DataV05chainE0AA06PublicE0V09signatureE0tcfc":{"name":"init(id:iteration:chainKey:signatureKey:)","abstract":"<p>Create a distribution message.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two distribution messages.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the distribution message to serialized data.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageV6objectAA011Textsecure_defG0Vv":{"name":"object","abstract":"<p>Convert the distribution message to a ProtoBuf object</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a distribution message from serialized data.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:19SignalProtocolSwift28SenderKeyDistributionMessageVAcA011Textsecure_defG0V4from_s5UInt8V7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a distribution message from a ProtoBuf object.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV12infoMaterial33_843BEF4599443AF953768EF01B50332DLL10Foundation4DataVvZ":{"name":"infoMaterial","abstract":"<p>The info used when creating the keys from the seed</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV8ivLength33_843BEF4599443AF953768EF01B50332DLLSivZ":{"name":"ivLength","abstract":"<p>The length of the initialization vector</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV06cipherF6Length33_843BEF4599443AF953768EF01B50332DLLSivZ":{"name":"cipherKeyLength","abstract":"<p>The length of the key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV12secretLength33_843BEF4599443AF953768EF01B50332DLLSivZ":{"name":"secretLength","abstract":"<p>The combined length of iv and key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The iteration of the message key in the chain</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV2iv10Foundation4DataVv":{"name":"iv","abstract":"<p>The initialization vector</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV06cipherF010Foundation4DataVv":{"name":"cipherKey","abstract":"<p>The encryption/decryption key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV4seed33_843BEF4599443AF953768EF01B50332DLL10Foundation4DataVv":{"name":"seed","abstract":"<p>The seed used to derive the key and iv</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyVACs6UInt32V9iteration_10Foundation4DataV4seedtKcfc":{"name":"init(iteration:seed:)","abstract":"<p>Create a message key from the components.</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyVAcA011Textsecure_dF14StateStructureVABV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a message key from a ProtoBuf object.</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV6objectAA011Textsecure_dF14StateStructureVABVv":{"name":"object","abstract":"<p>Convert the sender chain key to a ProtoBuf object</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:19SignalProtocolSwift16SenderMessageKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender message keys for equality.</p>","parent_name":"SenderMessageKey"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV7versions5UInt8Vv":{"name":"version","abstract":"<p>The message version</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV14registrationIds6UInt32Vv":{"name":"registrationId","abstract":"<p>The registration id of the sender</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV03preE2Ids6UInt32VSgv":{"name":"preKeyId","abstract":"<p>The pre key id of the one time key from the other party</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV06signeddE2Ids6UInt32Vv":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key used for the message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV04baseE0AA06PublicE0Vv":{"name":"baseKey","abstract":"<p>The base key used for the message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV08identityE0AA06PublicE0Vv":{"name":"identityKey","abstract":"<p>The identity key of the sender</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV7messageAA0aF0Vv":{"name":"message","abstract":"<p>The message included in the pre key message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageVACs5UInt8V14messageVersion_s6UInt32V14registrationIdAHSg03preeL0AH06signeddeL0AA06PublicE0V04baseE0AN08identityE0AA0aF0V0H0tcfc":{"name":"init(messageVersion:registrationId:preKeyId:signedPreKeyId:baseKey:identityKey:message:)","abstract":"<p>Create a new pre key message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV04baseF0AA010CipherTextF0VyKF":{"name":"baseMessage()","abstract":"<p>Get the serialized message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageV6objectAA011Textsecure_deaF0VyKF":{"name":"object()","abstract":"<p>Convert the message to a ProtoBuf object for serialization.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a <code>PreKeySignalMessage</code> from serialized data.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:19SignalProtocolSwift06PreKeyA7MessageVAcA011Textsecure_deaF0V4from_s5UInt8V7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a <code>PreKeySignalMessage</code> from a ProtoBuf object.</p>","parent_name":"PreKeySignalMessage"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the pre key</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyV3keyAA0eG0Vv":{"name":"key","abstract":"<p>The key pair of the pre key</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyVACs6UInt32V2id_AA0eG0V3keytcfc":{"name":"init(id:key:)","abstract":"<p>Create a public pre key from the components</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyVAcA0dfG0V03preG0_tcfc":{"name":"init(preKey:)","abstract":"<p>Create a public pre key from a complete pre key</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyV6objectAA011Textsecure_fG15RecordStructureVv":{"name":"object","abstract":"<p>Convert the public pre key to a ProtoBuf object</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the public pre key to serialized data.</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyVAcA011Textsecure_fG15RecordStructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a public pre key from a ProtoBuf object.</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPublicPreKey.html#/s:19SignalProtocolSwift19SessionPublicPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from serialized data.</p>","parent_name":"SessionPublicPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV14mediumMaxValues6UInt32VvZ":{"name":"mediumMaxValue","abstract":"<p>The upper bound (inclusive) of the pre key id</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV7keyPairAA0fH0Vv":{"name":"keyPair","abstract":"<p>The key pair of the pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyVACs6UInt32V2id_AA0F4PairV03keyI0tcfc":{"name":"init(id:keyPair:)","abstract":"<p>Create a pre key from the components</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyVACs6UInt32V5index_tKcfc":{"name":"init(index:)","abstract":"<p>Create a new pre key with the index.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV6objectAA011Textsecure_eF15RecordStructureVv":{"name":"object","abstract":"<p>Convert the pre key to a ProtoBuf object</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the pre key to serialized data.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyVAcA011Textsecure_eF15RecordStructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from a ProtoBuf object.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from serialized data.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV10publicData10Foundation0H0VyKF":{"name":"publicData()","abstract":"<p>The public data serialized.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:19SignalProtocolSwift13SessionPreKeyV12publicObjectAA0d6PubliceF0Vv":{"name":"publicObject","abstract":"<p>The public components of the pre key.</p>","parent_name":"SessionPreKey"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV6random10Foundation4DataVSi5bytes_tKF":{"name":"random(bytes:)","abstract":"<p>Create a number of random bytes</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV10hmacSHA25610Foundation4DataVAG3for_AG4withtKF":{"name":"hmacSHA256(for:with:)","abstract":"<p>Create a HMAC authentication for a given message</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV6sha51210Foundation4DataVAG3for_tKF":{"name":"sha512(for:)","abstract":"<p>Create a SHA512 digest for a given message</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7encrypt10Foundation4DataVAG7message_AA0A16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with AES</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7decrypt10Foundation4DataVAG7message_AA0A16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with AES</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7process10Foundation4DataVAG3cbc_AG3keyAG2ivSb7encrypttKF":{"name":"process(cbc:key:iv:encrypt:)","abstract":"<p>Process (encrypt/decrypt) a message with AES in CBC mode and pkcs7 padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7encrypt10Foundation4DataVAG3ctr_AG3keyAG2ivtKF":{"name":"encrypt(ctr:key:iv:)","abstract":"<p>Encrypt a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7decrypt10Foundation4DataVAG3ctr_AG3keyAG2ivtKF":{"name":"decrypt(ctr:key:iv:)","abstract":"<p>Decrypt a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7process33_49FC44A737CF1BA66FF5D21A4D41D65CLL10Foundation4DataVAH3ctr_AH3keyAH2ivSb7encrypttKF":{"name":"process(ctr:key:iv:encrypt:)","abstract":"<p>Process (encrypt/decrypt) a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoV7toArray33_49FC44A737CF1BA66FF5D21A4D41D65CLL10Foundation4DataVSv4from_Si5counttF":{"name":"toArray(from:count:)","abstract":"<p>Create an array from an unsafe pointer.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:19SignalProtocolSwift0A12CommonCryptoVACycfc":{"name":"init()","abstract":"<p>Create an instance.</p>","parent_name":"SignalCommonCrypto"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageV9signatureAA0dE9SignatureVv":{"name":"signature","abstract":"<p>The consistency signature</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageV10generations6UInt32Vv":{"name":"generation","abstract":"<p>The generation of the consistency message</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageVAcA0dE12CommitmentV0V10commitment_AA7KeyPairV011identitykeyK0tKcfc":{"name":"init(commitment:identitykeyPair:)","abstract":"<p>Create a new consistency message.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The message serialized through a protocol buffer.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageV6objectAA011Textsecure_de4CodeF0Vv":{"name":"object","abstract":"<p>The message converted to a protocol buffer object.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageVAC10Foundation4DataV4from_AA0dE12CommitmentV0V10commitmentAA9PublicKeyV08identityN0tKcfc":{"name":"init(from:commitment:identityKey:)","abstract":"<p>Create a consistency message from a serialized protocol buffer record.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:19SignalProtocolSwift24DeviceConsistencyMessageVAcA011Textsecure_de4CodeF0V4from_AA0dE12CommitmentV0V10commitmentAA9PublicKeyV08identityN0tKcfc":{"name":"init(from:commitment:identityKey:)","abstract":"<p>Create a consistency message from a protocol buffer object.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainV10ratchetKeyAA0G4PairVv":{"name":"ratchetKey","abstract":"<p>The key pair of the ratchet</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainV8chainKeyAA07RatcheteG0Vv":{"name":"chainKey","abstract":"<p>The current chain key of the ratchet</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainVAcA7KeyPairV07ratchetF0_AA07RatcheteF0V05chainF0tcfc":{"name":"init(ratchetKey:chainKey:)","abstract":"<p>Create a sender chain from the components.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainVAcA27Textsecure_SessionStructureV0E0V4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a sender chain from a protobuf object.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainVAC10Foundation4DataV4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a sender chain from serialized data.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the sender chain to data.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainV6objectAA27Textsecure_SessionStructureV0E0Vv":{"name":"object","abstract":"<p>The sender chain converted to a protobuf object</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:19SignalProtocolSwift11SenderChainV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender chains for equality.</p>","parent_name":"SenderChain"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V7versionAA0E0V7VersionOvZ":{"name":"version","abstract":"<p>The fingerprint version (1)</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V6length33_32BC4ABA9B1ACCD2605083AFDBAA7C5FLLSivZ":{"name":"length","abstract":"<p>The length of a fingerprint</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V05localE010Foundation4DataVv":{"name":"localFingerprint","abstract":"<p>The fingerprint data of the local party</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V06remoteE010Foundation4DataVv":{"name":"remoteFingerprint","abstract":"<p>The fingerprint data of the remote party</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1VAC10Foundation4DataV05localE0_AF06remoteE0tKcfc":{"name":"init(localFingerprint:remoteFingerprint:)","abstract":"<p>Create a new ScannableFingerprint Version 1.</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V7matchesSbAA0dE0_pKF":{"name":"matches(_:)","abstract":"<p>Compare two fingerprints for equality</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V7matchesSbACKF":{"name":"matches(_:)","abstract":"<p>Compare two fingerprints for equality</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1VAcA31Textsecure_CombinedFingerprintsV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a fingerprint from a ProtoBuf object.</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V6objectAA31Textsecure_CombinedFingerprintsVv":{"name":"object","abstract":"<p>The fingerprint converted to a ProtoBuf object</p>","parent_name":"ScannableFingerprintV1"},"Structs/ScannableFingerprintV1.html#/s:19SignalProtocolSwift22ScannableFingerprintV1V2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two Fingerprints for equality.</p>","parent_name":"ScannableFingerprintV1"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV5store33_DE2D33E3DDFF369A694356C8C9928F50LLxv":{"name":"store","abstract":"<p>The store where the keys are stored</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV7address33_DE2D33E3DDFF369A694356C8C9928F50LL0D7AddressQzv":{"name":"address","abstract":"<p>The id of the remote client</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherVACyxG0D7AddressQz7address_x5storetcfc":{"name":"init(address:store:)","abstract":"<p>Create a GroupCipher.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV7processyAA0E11TextMessageV7message_tKF":{"name":"process(message:)","abstract":"<p>Create a GroupCipher.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV7processyAA28SenderKeyDistributionMessageV012distributionJ0_tKF":{"name":"process(distributionMessage:)","abstract":"<p>Create a new group session from a distribution message.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV13createSessionAA28SenderKeyDistributionMessageVyKF":{"name":"createSession()","abstract":"<p>Create a new session and generate a distribution message.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV7encryptAA0E11TextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message for the recipient.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV7decrypt10Foundation4DataVAA16SenderKeyMessageV10ciphertext_tKF":{"name":"decrypt(ciphertext:)","abstract":"<p>Decrypt a message from the group member.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:19SignalProtocolSwift11GroupCipherV10loadRecord33_DE2D33E3DDFF369A694356C8C9928F50LLAA09SenderKeyG0CyKF":{"name":"loadRecord()","abstract":"<p>Load the record for the remote address.</p>","parent_name":"GroupCipher"},"Structs/DeviceConsistencyCommitmentV0.html#/s:19SignalProtocolSwift29DeviceConsistencyCommitmentV0V11codeVersion33_AEFC500C092CD63D4B40247F2C000C33LLs6UInt16VvZ":{"name":"codeVersion","abstract":"<p>The version of the consistency implementation</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:19SignalProtocolSwift29DeviceConsistencyCommitmentV0V7version33_AEFC500C092CD63D4B40247F2C000C33LL10Foundation4DataVvZ":{"name":"version","abstract":"<p>An identifier used when hashing the identity keys</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:19SignalProtocolSwift29DeviceConsistencyCommitmentV0V10generations6UInt32Vv":{"name":"generation","abstract":"<p>The generation of the message</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:19SignalProtocolSwift29DeviceConsistencyCommitmentV0V10serialized10Foundation4DataVv":{"name":"serialized","abstract":"<p>The hash of the public keys</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:19SignalProtocolSwift29DeviceConsistencyCommitmentV0VACs6UInt32V10generation_SayAA9PublicKeyVG08identityK4ListtKcfc":{"name":"init(generation:identityKeyList:)","abstract":"<p>Create a new commitment.</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:19SignalProtocolSwift29DeviceConsistencyCommitmentV0V12generateCodeSSSayAA0dE9SignatureVG3for_tKF":{"name":"generateCode(for:)","abstract":"<p>Generate a String which can be used to compare the consistency across multiple devices.","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V7versionAA0E0V7VersionOvZ":{"name":"version","abstract":"<p>The fingerprint version (0)</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V05localE010Foundation4DataVv":{"name":"localFingerprint","abstract":"<p>The fingerprint data of the local party</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V06remoteE010Foundation4DataVv":{"name":"remoteFingerprint","abstract":"<p>The fingerprint data of the remote party</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V21localStableIdentifierSSv":{"name":"localStableIdentifier","abstract":"<p>The identifier of the local party</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V22remoteStableIdentifierSSv":{"name":"remoteStableIdentifier","abstract":"<p>The identifier of the remote party</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0VACSS21localStableIdentifier_10Foundation4DataV0gE0SS06remotehI0AG0lE0tcfc":{"name":"init(localStableIdentifier:localFingerprint:remoteStableIdentifier:remoteFingerprint:)","abstract":"<p>Create a new ScannableFingerprint Version 0.</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V7matchesSbAA0dE0_pKF":{"name":"matches(_:)","abstract":"<p>Compare two fingerprints for equality</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0VAcA31Textsecure_CombinedFingerprintsV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a fingerprint from a ProtoBuf object.</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V6objectAA31Textsecure_CombinedFingerprintsVv":{"name":"object","abstract":"<p>The fingerprint converted to a ProtoBuf object</p>","parent_name":"ScannableFingerprintV0"},"Structs/ScannableFingerprintV0.html#/s:19SignalProtocolSwift22ScannableFingerprintV0V2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two Fingerprints for equality.</p>","parent_name":"ScannableFingerprintV0"},"Structs/CipherTextMessage.html#/s:19SignalProtocolSwift17CipherTextMessageV14currentVersions5UInt8VvZ":{"name":"currentVersion","abstract":"<p>The current version of the messages</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:19SignalProtocolSwift17CipherTextMessageV18unsupportedVersions5UInt8VvZ":{"name":"unsupportedVersion","abstract":"<p>All message versions up to and including this one are unsupported</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:19SignalProtocolSwift17CipherTextMessageV4typeAA0dE4TypeOv":{"name":"type","abstract":"<p>The type of the message</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:19SignalProtocolSwift17CipherTextMessageV4data10Foundation4DataVv":{"name":"data","abstract":"<p>The encrypted message</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:19SignalProtocolSwift17CipherTextMessageVAcA0dE4TypeO4type_10Foundation4DataV4datatcfc":{"name":"init(type:data:)","abstract":"<p>Create a message from the components.</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:19SignalProtocolSwift17CipherTextMessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a <code>CipherTextMessage</code> from a serialized record.</p>","parent_name":"CipherTextMessage"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV07messageF4Seed33_DF9A6BC8AA754524E44B951DFDB0A492LL10Foundation4DataVvZ":{"name":"messageKeySeed","abstract":"<p>The seed used as input material for the KDF to derive the message keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV05chainF4Seed33_DF9A6BC8AA754524E44B951DFDB0A492LL10Foundation4DataVvZ":{"name":"chainKeySeed","abstract":"<p>The seed used as input material for the KDF to derive the chain keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV15keyMaterialSeed33_DF9A6BC8AA754524E44B951DFDB0A492LL10Foundation4DataVvZ":{"name":"keyMaterialSeed","abstract":"<p>The seed used as info material for the KDF to derive the message keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV10secretSizeSivZ":{"name":"secretSize","abstract":"<p>The size of the chain key</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV14hashOutputSizeSivZ":{"name":"hashOutputSize","abstract":"<p>The size of the HKDF expand output</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV3kdf33_DF9A6BC8AA754524E44B951DFDB0A492LLAA4HKDFVv":{"name":"kdf","abstract":"<p>The object for the key derivation function</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV3key10Foundation4DataVv":{"name":"key","abstract":"<p>The current key of the ratchet chain, 32 byte</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyVAcA4HKDFV3kdf_10Foundation4DataV3keys6UInt32V5indextcfc":{"name":"init(kdf:key:index:)","abstract":"<p>Create a ratchet chain key from the components</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV15getBaseMaterial33_DF9A6BC8AA754524E44B951DFDB0A492LL10Foundation4DataVAH4seed_tKF":{"name":"getBaseMaterial(seed:)","abstract":"<p>Get the SHA256 HMAC of the seed.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV11messageKeysAA0d7MessageH0VyKF":{"name":"messageKeys()","abstract":"<p>Get a set of message keys for the Ratchet</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV4nextACyKF":{"name":"next()","abstract":"<p>Return the next chain key</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyVAcA27Textsecure_SessionStructureV0E0V0eF0V4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a chain key from a ProtoBuf object.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyVAC10Foundation4DataV4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a ratchet chain key from serialized data.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the key.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV6objectAA27Textsecure_SessionStructureV0E0V0eF0Vv":{"name":"object","abstract":"<p>The chain key converted to a ProtoBuf object</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:19SignalProtocolSwift15RatchetChainKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalMessages for equality.</p>","parent_name":"RatchetChainKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV9basePoint33_C141A904704E7F20E5032632019AD8E0LL10Foundation4DataVvZ":{"name":"basePoint","abstract":"<p>The base point for the Curve25519 elliptic curve</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV3key33_C141A904704E7F20E5032632019AD8E0LL10Foundation4DataVv":{"name":"key","abstract":"<p>The key material of length <code>KeyPair.keyLength</code></p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyVAC10Foundation4DataV5point_tKcfc":{"name":"init(point:)","abstract":"<p>&lsquo;Create a public key from a UInt8 array. Checks","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyVAcA07PrivateE0V07privateE0_tKcfc":{"name":"init(privateKey:)","abstract":"<p>Generate a public key from a given private key.","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV6verifySb10Foundation4DataV9signature_AG3fortF":{"name":"verify(signature:for:)","abstract":"<p>Verify that the signature corresponds to the message.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV6verify10Foundation4DataVAG12vrfSignature_AG3fortKF":{"name":"verify(vrfSignature:for:)","abstract":"<p>Verify that the vrf signature corresponds to the message.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV18calculateAgreement10Foundation4DataVAA07PrivateE0V07privateE0_tKF":{"name":"calculateAgreement(privateKey:)","abstract":"<p>Calculate the shared agreement between the given private key and the public key.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two public keys.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two public keys for equality. The keys are equal if all bytes match.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a public key from a serialized record.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:19SignalProtocolSwift9PublicKeyV4data10Foundation4DataVv":{"name":"data","abstract":"<p>Return a byte representation of the public key</p>","parent_name":"PublicKey"},"Structs/SignalAddress.html#/s:19SignalProtocolSwift0A7AddressV10identifierSSv":{"name":"identifier","abstract":"<p>The unique identifier of a user (such as a phone number)</p>","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:19SignalProtocolSwift0A7AddressV8deviceIds6UInt32Vv":{"name":"deviceId","abstract":"<p>The identifier for the individual device of a user</p>","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:19SignalProtocolSwift0A7AddressVACSS10identifier_s6UInt32V8deviceIdtcfc":{"name":"init(identifier:deviceId:)","abstract":"<p>Create a <code>SignalAddress</code>.</p>","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:19SignalProtocolSwift0A7AddressV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalAddresses. Two <code>SignalAddress</code> objects are","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:19SignalProtocolSwift0A7AddressV9hashValueSiv":{"name":"hashValue","abstract":"<p>A hash value of the address, constructed by summing the","parent_name":"SignalAddress"},"Structs/SignalAddress.html#/s:19SignalProtocolSwift0A7AddressV11descriptionSSv":{"name":"description","abstract":"<p>A description of the SignalAddress.</p>","parent_name":"SignalAddress"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV7DJBTypes5UInt8VvZ":{"name":"DJBType","abstract":"<p>Type declaration (only needed for compatibility)</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV06publicD0AA06PublicD0Vv":{"name":"publicKey","abstract":"<p>The public part of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV07privateD0AA07PrivateD0Vv":{"name":"privateKey","abstract":"<p>The private part of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairVAcA06PublicD0V06publicD0_AA07PrivateD0V07privateD0tcfc":{"name":"init(publicKey:privateKey:)","abstract":"<p>Create a key pair from existing public and private keys</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairVACyKcfc":{"name":"init()","abstract":"<p>Create a new random key pair.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV4sign10Foundation4DataVAG7message_tKF":{"name":"sign(message:)","abstract":"<p>Calculate the signature for the given message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV7signVRF10Foundation4DataVAG7message_tKF":{"name":"signVRF(message:)","abstract":"<p>Calculates a unique Curve25519 signature for the private key</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV18calculateAgreement10Foundation4DataVAA06PublicD0V06publicD0_tKF":{"name":"calculateAgreement(publicKey:)","abstract":"<p>Calculate the shared agreement between the private key and the given public key.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV6verifySb10Foundation4DataV9signature_AG3fortF":{"name":"verify(signature:for:)","abstract":"<p>Verify that the signature corresponds to the message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV6verify10Foundation4DataVAG12vrfSignature_AG3fortKF":{"name":"verify(vrfSignature:for:)","abstract":"<p>Verify that the vrf signature corresponds to the message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV18calculateAgreement10Foundation4DataVAA07PrivateD0V07privateD0_tKF":{"name":"calculateAgreement(privateKey:)","abstract":"<p>Calculate the shared agreement between the given private key and the public key.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a key pair from a serialized record.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairVAcA019Textsecure_IdentitydE9StructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a key pair from a protobuf object.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV6objectAA019Textsecure_IdentitydE9StructureVv":{"name":"object","abstract":"<p>The key pair converted to a ProtoBuf object</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Return a serialized record of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:19SignalProtocolSwift7KeyPairV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two key pairs for equality. The keys are equal if public and private keys match.</p>","parent_name":"KeyPair"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV14ourIdentityKeyAA0H4PairVv":{"name":"ourIdentityKey","abstract":"<p>The identity of the local party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV10ourBaseKeyAA0H4PairVv":{"name":"ourBaseKey","abstract":"<p>The base key for the ratchet of the local party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV13ourRatchetKeyAA0H4PairVv":{"name":"ourRatchetKey","abstract":"<p>The initial key used for the ratchet</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV12theirBaseKeyAA06PublicH0Vv":{"name":"theirBaseKey","abstract":"<p>The base key of the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV15theirRatchetKeyAA06PublicH0Vv":{"name":"theirRatchetKey","abstract":"<p>The ratchet key used by the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV16theirIdentityKeyAA06PublicH0Vv":{"name":"theirIdentityKey","abstract":"<p>The identity of the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:19SignalProtocolSwift19SymmetricParametersV7isAliceSbv":{"name":"isAlice","abstract":"<p>Indicate if the session was initialized as Alice</p>","parent_name":"SymmetricParameters"},"Structs/Fingerprint/Version.html#/s:19SignalProtocolSwift11FingerprintV7VersionO8version0A2EmF":{"name":"version0","abstract":"<p>Older version, including local identifiers</p>","parent_name":"Version"},"Structs/Fingerprint/Version.html#/s:19SignalProtocolSwift11FingerprintV7VersionO8version1A2EmF":{"name":"version1","abstract":"<p>New version, only fingerprint data</p>","parent_name":"Version"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintV7versions5UInt8VvZ":{"name":"version","abstract":"<p>The version of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintV6lengthSivZ":{"name":"length","abstract":"<p>The length of a fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint/Version.html":{"name":"Version","abstract":"<p>The version of the scannable fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintV11displayableAA011DisplayableD0Vv":{"name":"displayable","abstract":"<p>The displayable part of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintV9scannableAA09ScannableD0_pv":{"name":"scannable","abstract":"<p>The scannable part of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintVACSi10iterations_AC7VersionO09scannableF0SS21localStableIdentifier10Foundation4DataV0H8IdentitySS06remoteiJ0AK0nM0tKcfc":{"name":"init(iterations:scannableVersion:localStableIdentifier:localIdentity:remoteStableIdentifier:remoteIdentity:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintVACSi10iterations_AC7VersionO09scannableF0SS21localStableIdentifierAA9PublicKeyV0H8IdentitySS06remoteiJ0AJ0nM0tKcfc":{"name":"init(iterations:scannableVersion:localStableIdentifier:localIdentity:remoteStableIdentifier:remoteIdentity:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:19SignalProtocolSwift11FingerprintVACSi10iterations_AC7VersionO09scannableF0SS21localStableIdentifierSayAA9PublicKeyVG0H12IdentityListSS06remoteiJ0AK0omN0tKcfc":{"name":"init(iterations:scannableVersion:localStableIdentifier:localIdentityList:remoteStableIdentifier:remoteIdentityList:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV7keyPairAA0gI0Vv":{"name":"keyPair","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV9timestamps6UInt64Vv":{"name":"timestamp","abstract":"<p>The time when the key was created</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature of the public key of the key pair</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyVACs6UInt32V2id_s6UInt64V9timestampAA0G4PairV03keyL010Foundation4DataV9signaturetcfc":{"name":"init(id:timestamp:keyPair:signature:)","abstract":"<p>Create a signed pre key from its components.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyVACs6UInt32V2id_AA07PrivateG0V09signatureG0s6UInt64V9timestamptKcfc":{"name":"init(id:signatureKey:timestamp:)","abstract":"<p>Create a signed pre key.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from serialized data.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyVAcA011Textsecure_efG15RecordStructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from a ProtoBuf object.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV6objectAA011Textsecure_efG15RecordStructureVv":{"name":"object","abstract":"<p>Convert the signed pre key to a ProtoBuf object</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the signed pre key to serialized data.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two signed pre keys for equality.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV10publicData10Foundation0I0VyKF":{"name":"publicData()","abstract":"<p>The public data serialized.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:19SignalProtocolSwift19SessionSignedPreKeyV12publicObjectAA0d6PublicefG0Vv":{"name":"publicObject","abstract":"<p>The public components of the pre key.</p>","parent_name":"SessionSignedPreKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV07messageF4Seed33_8CB74A9E4A8FF21FA8100C536DD9789FLL10Foundation4DataVvZ":{"name":"messageKeySeed","abstract":"<p>The seed value for the message key when deriving the next key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV05chainF4Seed33_8CB74A9E4A8FF21FA8100C536DD9789FLL10Foundation4DataVvZ":{"name":"chainKeySeed","abstract":"<p>The seed value for the chain key when deriving the next key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The current iteration of the chain</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV05chainF010Foundation4DataVv":{"name":"chainKey","abstract":"<p>The current chain key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyVACs6UInt32V9iteration_10Foundation4DataV05chainF0tcfc":{"name":"init(iteration:chainKey:)","abstract":"<p>Create a new chain key from the components.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV07messageF0AA0d7MessageF0VyKF":{"name":"messageKey()","abstract":"<p>Advance the chain and return the generated message key.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyVAcA011Textsecure_dF14StateStructureVABV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a chain key from a ProtoBuf object.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV6objectAA011Textsecure_dF14StateStructureVABVv":{"name":"object","abstract":"<p>Convert the sender chain key to a ProtoBuf object</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:19SignalProtocolSwift14SenderChainKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender chain keys for equality.</p>","parent_name":"SenderChainKey"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV5store33_154CC8F2D46675FF17402C266833E5F9LLxv":{"name":"store","abstract":"<p>The local data store to use for state information</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV13remoteAddress33_154CC8F2D46675FF17402C266833E5F9LL0G0Qzv":{"name":"remoteAddress","abstract":"<p>The address of the remote party</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherVACyxGx5store_7AddressQz06remoteG0tcfc":{"name":"init(store:remoteAddress:)","abstract":"<p>Construct a session cipher for encrypt/decrypt operations on a session.","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7encryptAA0E11TextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7decrypt10Foundation4DataVAA0E11TextMessageVKF":{"name":"decrypt(_:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7decrypt10Foundation4DataVAA06PreKeyA7MessageV03prejaK0_tKF":{"name":"decrypt(preKeySignalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7decrypt10Foundation4DataVAA0A7MessageV06signalI0_tKF":{"name":"decrypt(signalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7processyAA0D12PreKeyBundleV03prehI0_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SessionPreKeyBundle.html\">SessionPreKeyBundle</a></code> retrieved from a server.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV23getRemoteRegistrationIds6UInt32VyKF":{"name":"getRemoteRegistrationId()","abstract":"<p>Gets the remote registration ID for this session cipher.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV03getD7Versions5UInt8VyKF":{"name":"getSessionVersion()","abstract":"<p>Gets the version of the session associated with this session cipher.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV04loadD033_154CC8F2D46675FF17402C266833E5F9LLAA0D6RecordCyKF":{"name":"loadSession()","abstract":"<p>Load the session record for the remote address</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7decrypt33_154CC8F2D46675FF17402C266833E5F9LL10Foundation4DataVAA0D6RecordC4from_AA0A7MessageV3andtKF":{"name":"decrypt(from:and:)","abstract":"<p>Try to decrypt a SignalMessage with one of the stored sessions in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SessionRecord.html\">SessionRecord</a></code>. If a session can decrypt the message it will be promoted to the active session.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV7decrypt33_154CC8F2D46675FF17402C266833E5F9LL10Foundation4DataVAA0D5StateC4from_AA0A7MessageV3andtKF":{"name":"decrypt(from:and:)","abstract":"<p>Try to decrypt a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignalMessage.html\">SignalMessage</a></code> with a specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SessionState.html\">SessionState</a></code>.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV22getOrCreateMessageKeys33_154CC8F2D46675FF17402C266833E5F9LLAA07RatchetiJ0VAA0D5StateC5state_AA9PublicKeyV14theirEphemeralAA0r5ChainV0V05chainV0s6UInt32V7countertKF":{"name":"getOrCreateMessageKeys(state:theirEphemeral:chainKey:counter:)","abstract":"<p>Retrieve previously stored message keys or create them from the chain.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV19getOrCreateChainKey33_154CC8F2D46675FF17402C266833E5F9LLAA07RatchetiJ0VAA0D5StateC5state_AA06PublicJ0V14theirEphemeraltKF":{"name":"getOrCreateChainKey(state:theirEphemeral:)","abstract":"<p>Retrieve the chain key for a state and receiver chain key.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV13getCiphertext33_154CC8F2D46675FF17402C266833E5F9LL10Foundation4DataVs5UInt8V14messageVersion_AA18RatchetMessageKeysV0rV0AH9plaintexttKF":{"name":"getCiphertext(messageVersion:messageKeys:plaintext:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV5getIV33_154CC8F2D46675FF17402C266833E5F9LL10Foundation4DataVs5UInt8V3for_AA18RatchetMessageKeysV07messageU0tF":{"name":"getIV(for:messageKeys:)","abstract":"<p>Get the initialization vector for the message version.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:19SignalProtocolSwift13SessionCipherV12getPlaintext33_154CC8F2D46675FF17402C266833E5F9LL10Foundation4DataVs5UInt8V14messageVersion_AA18RatchetMessageKeysV0rV0AH10ciphertexttKF":{"name":"getPlaintext(messageVersion:messageKeys:ciphertext:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV2ids6UInt32Vv":{"name":"id","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV3keyAA0eH0Vv":{"name":"key","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV9timestamps6UInt64Vv":{"name":"timestamp","abstract":"<p>The time when the key was created</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature of the public key of the key pair</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyVACs6UInt32V2id_s6UInt64V9timestampAA0eH0V3key10Foundation4DataV9signaturetcfc":{"name":"init(id:timestamp:key:signature:)","abstract":"<p>Create a public signed pre key from its components.</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyVAcA0dfgH0V06signedgH0_tcfc":{"name":"init(signedPreKey:)","abstract":"<p>Create a public signed pre key from the complete signed pre key.</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from serialized data.</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyVAcA011Textsecure_fgH15RecordStructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from a ProtoBuf object.</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV6objectAA011Textsecure_fgH15RecordStructureVv":{"name":"object","abstract":"<p>Convert the public signed pre key to a ProtoBuf object</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Convert the signed pre key to serialized data.</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPublicSignedPreKey.html#/s:19SignalProtocolSwift25SessionPublicSignedPreKeyV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two public signed pre keys for equality.</p>","parent_name":"SessionPublicSignedPreKey"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV14registrationIds6UInt32Vv":{"name":"registrationId","abstract":"<p>The registration id of the remote party</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV8deviceIds6UInt32Vv":{"name":"deviceId","abstract":"<p>The device id of the remote party</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV03preF2Ids6UInt32Vv":{"name":"preKeyId","abstract":"<p>The id of the pre key that was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV03preF6PublicAA0iF0VSgv":{"name":"preKeyPublic","abstract":"<p>The pre key, if a pre key was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV06signedeF2Ids6UInt32Vv":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV06signedeF6PublicAA0iF0Vv":{"name":"signedPreKeyPublic","abstract":"<p>The signed pre key that was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV06signedeF9Signature10Foundation4DataVv":{"name":"signedPreKeySignature","abstract":"<p>The signature of the signed pre key</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleV08identityF0AA06PublicF0Vv":{"name":"identityKey","abstract":"<p>The identity key of the remote party</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleVACs6UInt32V14registrationId_AE06deviceJ0AE03prefJ0AA06PublicF0VSg0lfM0AE06signedefJ0AJ0nefM010Foundation4DataV0neF9SignatureAJ08identityF0tcfc":{"name":"init(registrationId:deviceId:preKeyId:preKeyPublic:signedPreKeyId:signedPreKeyPublic:signedPreKeySignature:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleVACs6UInt32V14registrationId_AE06deviceJ0AA0d6PubliceF0V03preF0AA0dl6SignedeF0V06signedeF0AA0lF0V08identityF0tcfc":{"name":"init(registrationId:deviceId:preKey:signedPreKey:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:19SignalProtocolSwift19SessionPreKeyBundleVACs6UInt32V14registrationId_AE06deviceJ010Foundation4DataV03preF0AJ06signedeF0AJ08identityF0tKcfc":{"name":"init(registrationId:deviceId:preKey:signedPreKey:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV14messageVersions5UInt8Vv":{"name":"messageVersion","abstract":"<p>The version of the message</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV5keyIds6UInt32Vv":{"name":"keyId","abstract":"<p>The id of the key that was used</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV9iterations6UInt32Vv":{"name":"iteration","abstract":"<p>The iteration of the chain key</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV10cipherText10Foundation4DataVv":{"name":"cipherText","abstract":"<p>The encrypted ciphertext</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature of the message</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV04baseF0AA010CipherTextF0VyKF":{"name":"baseMessage()","abstract":"<p>Return the message serialized</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageVACs6UInt32V5keyId_AE9iteration10Foundation4DataV10cipherTextAA07PrivateE0V09signatureE0tKcfc":{"name":"init(keyId:iteration:cipherText:signatureKey:)","abstract":"<p>Create a <code>SenderKeyMessage</code> from the components.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV6verifySbAA06PublicE0V09signatureE0_tKF":{"name":"verify(signatureKey:)","abstract":"<p>Verify that the signature matches the message.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the message.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageV6objectAA011Textsecure_deF0Vv":{"name":"object","abstract":"<p>Convert the sender key message to a ProtoBuf object</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageVAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a sender key message from serialized data.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:19SignalProtocolSwift16SenderKeyMessageVAcA011Textsecure_deF0V4from_s5UInt8V7version10Foundation4DataV9signaturetKcfc":{"name":"init(from:version:signature:)","abstract":"<p>Create a sender key message from a ProtoBuf object.</p>","parent_name":"SenderKeyMessage"},"Structs/DeviceConsistencySignature.html#/s:19SignalProtocolSwift26DeviceConsistencySignatureV9signature10Foundation4DataVv":{"name":"signature","abstract":"<p>The signature data</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:19SignalProtocolSwift26DeviceConsistencySignatureV9vrfOutput10Foundation4DataVv":{"name":"vrfOutput","abstract":"<p>The output of the VRF verification</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:19SignalProtocolSwift26DeviceConsistencySignatureVAC10Foundation4DataV9signature_AF9vrfOutputtcfc":{"name":"init(signature:vrfOutput:)","abstract":"<p>Create a new signature</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:19SignalProtocolSwift26DeviceConsistencySignatureV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two consistency signatures.</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:19SignalProtocolSwift26DeviceConsistencySignatureV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two consistency signatures for equality.</p>","parent_name":"DeviceConsistencySignature"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV22derivedRootSecretsSize33_F9969CEECA71A01849A9777B16960E44LLSivZ":{"name":"derivedRootSecretsSize","abstract":"<p>The total number of bytes to derive when creating a new root and chain key</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV20iterationStartOffset33_F9969CEECA71A01849A9777B16960E44LLs5UInt8Vv":{"name":"iterationStartOffset","abstract":"<p>The offset for the expand iterations, depending on the version</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFVAcA11HKDFVersionO14messageVersion_tcfc":{"name":"init(messageVersion:)","abstract":"<p>Initialize a new KDF with the message version</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV13deriveSecrets10Foundation4DataVAG8material_AG4saltAG4infoSi12outputLengthtKF":{"name":"deriveSecrets(material:salt:info:outputLength:)","abstract":"<p>Derive new secrets from the KDF.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV6expand33_F9969CEECA71A01849A9777B16960E44LL10Foundation4DataVAH3prk_AH4infoSi12outputLengthtKF":{"name":"expand(prk:info:outputLength:)","abstract":"<p>Expand the bytes to create enough output bytes.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV15chainAndRootKeyAA07RatchetgH0V04rootH0_AA0i5ChainH0V0eH0t10Foundation4DataV8material_AM4saltAM4infotKF":{"name":"chainAndRootKey(material:salt:info:)","abstract":"<p>Create a new chain key and root key.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV1loiSbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two HKDFs.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:19SignalProtocolSwift4HKDFV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two HKDFs for equality.</p>","parent_name":"HKDF"},"Structs/DisplayableFingerprint.html#/s:19SignalProtocolSwift22DisplayableFingerprintV5localSSv":{"name":"local","abstract":"<p>Fingerprint String of the local device</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:19SignalProtocolSwift22DisplayableFingerprintV6remoteSSv":{"name":"remote","abstract":"<p>Fingerprint String of the remote device</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:19SignalProtocolSwift22DisplayableFingerprintV11displayTextSSv":{"name":"displayText","abstract":"<p>Displaytext</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:19SignalProtocolSwift22DisplayableFingerprintVACSS5local_SS6remotetcfc":{"name":"init(local:remote:)","abstract":"<p>Create a displayable fingerprint from local and remote fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:19SignalProtocolSwift22DisplayableFingerprintVAC10Foundation4DataV05localE0_AF06remoteE0tKcfc":{"name":"init(localFingerprint:remoteFingerprint:)","abstract":"<p>Create a displayable fingerprint from local and remote fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:19SignalProtocolSwift22DisplayableFingerprintV19createDisplayString33_552B780226B79034935DE9C54141D7C0LLSS10Foundation4DataV11fingerprint_tFZ":{"name":"createDisplayString(fingerprint:)","abstract":"<p>Create a display string from fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV8providerAA0aD8Provider_pvZ":{"name":"provider","abstract":"<p>This variable can be set to provide a custom crypto provider.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV6random10Foundation4DataVSi5bytes_tKFZ":{"name":"random(bytes:)","abstract":"<p>Create a number of secure random bytes.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV10hmacSHA25610Foundation4DataVAG3for_AG4withtKFZ":{"name":"hmacSHA256(for:with:)","abstract":"<p>Authenticate a message with the HMAC based on SHA256.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV6sha51210Foundation4DataVAG3for_tKFZ":{"name":"sha512(for:)","abstract":"<p>Return the SHA512 message digest.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV7encrypt10Foundation4DataVAG7message_AA0A16EncryptionSchemeO4withAG3keyAG2ivtKFZ":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with the given scheme.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV7decrypt10Foundation4DataVAG7message_AA0A16EncryptionSchemeO4withAG3keyAG2ivtKFZ":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with the given scheme.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV23generateIdentityKeyPair10Foundation4DataVyKFZ":{"name":"generateIdentityKeyPair()","abstract":"<p>Generate an identity key pair.  Clients should only do this once, at install time.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV22generateRegistrationIds6UInt32VSb13extendedRange_tKFZ":{"name":"generateRegistrationId(extendedRange:)","abstract":"<p>Generate a registration ID.  Clients should only do this once, at install time.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV15generatePreKeysSayAA07SessionF3KeyVGs6UInt32V5start_Si5counttKFZ":{"name":"generatePreKeys(start:count:)","abstract":"<p>Generate a list of PreKeys.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV20generateSignedPreKeyAA07SessionfgH0VAA07PrivateH0V08identityH0_s6UInt32V2ids6UInt64V9timestamptKFZ":{"name":"generateSignedPreKey(identityKey:id:timestamp:)","abstract":"<p>Generate a signed pre key.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV19generateSenderKeyIds6UInt32VyKFZ":{"name":"generateSenderKeyId()","abstract":"<p>Generate a sender key ID.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV17generateSenderKey10Foundation4DataVyKFZ":{"name":"generateSenderKey()","abstract":"<p>Generate a sender key.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoV24generateSenderSigningKeyAA0H4PairVyKFZ":{"name":"generateSenderSigningKey()","abstract":"<p>Generate a sender signing key pair</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:19SignalProtocolSwift0A6CryptoVACyc33_DC8CA77763494C485EB371C3F21A0DC1Llfc":{"name":"init()","abstract":"<p>SignalCrypto only has static functions and there is no need to create any instances</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html":{"name":"SignalCrypto","abstract":"<p>The <code>SignalCrypto</code> struct exposes all necessary cryptocraphic functions to the protocol."},"Structs/DisplayableFingerprint.html":{"name":"DisplayableFingerprint","abstract":"<p>A Fingerprint to verify the keys specifically for displaying to the user</p>"},"Structs/HKDF.html":{"name":"HKDF","abstract":"<p>The Key derivation function used for the Ratchet.</p>"},"Structs/DeviceConsistencySignature.html":{"name":"DeviceConsistencySignature","abstract":"<p>A signature used for device consistency checks</p>"},"Structs/SenderKeyMessage.html":{"name":"SenderKeyMessage","abstract":"<p>A sender key message is used to send an encrypted message in an existing group session.</p>"},"Structs/SessionPreKeyBundle.html":{"name":"SessionPreKeyBundle","abstract":"<p>Pre key bundles are used to establish new sessions.</p>"},"Structs/SessionPublicSignedPreKey.html":{"name":"SessionPublicSignedPreKey","abstract":"<p>A public signed pre key is used as part of a session bundle to establish a new session."},"Structs/SessionCipher.html":{"name":"SessionCipher","abstract":"<p>The main entry point for Signal Protocol encrypt/decrypt operations.</p>"},"Structs/SenderChainKey.html":{"name":"SenderChainKey","abstract":"<p>A key in the sender chain.</p>"},"Structs/SessionSignedPreKey.html":{"name":"SessionSignedPreKey","abstract":"<p>A signed pre key is used as part of a session bundle to establish a new session."},"Structs/Fingerprint.html":{"name":"Fingerprint","abstract":"<p>A fingerprint can be used to ensure that the identities of a communication channel"},"Structs/SymmetricParameters.html":{"name":"SymmetricParameters","abstract":"<p>All parameters needed to establish a session</p>"},"Structs/KeyPair.html":{"name":"KeyPair","abstract":"<p>A pair of public and private key for elliptic curve cryptopgraphy</p>"},"Structs/SignalAddress.html":{"name":"SignalAddress","abstract":"<p>A <code>SignalAddress</code> identifies a single device of a Signal user, with a user"},"Structs/PublicKey.html":{"name":"PublicKey","abstract":"<p>The public part of an elliptic curve key pair."},"Structs/RatchetChainKey.html":{"name":"RatchetChainKey","abstract":"<p>A chain key for the ratchet.</p>"},"Structs/CipherTextMessage.html":{"name":"CipherTextMessage","abstract":"<p>A <code>CipherTextMessage</code> encapsulates an encrypted message and the type-</p>"},"Structs/ScannableFingerprintV0.html":{"name":"ScannableFingerprintV0","abstract":"<p>Version 0 of a scannable fingerprint.</p>"},"Structs/DeviceConsistencyCommitmentV0.html":{"name":"DeviceConsistencyCommitmentV0","abstract":"<p>Create commitments that are hashes of the identity keys of different devices."},"Structs/GroupCipher.html":{"name":"GroupCipher","abstract":"<p>Use a <code>GroupCipher</code> to encrypt and decrypt group messages for already"},"Structs/ScannableFingerprintV1.html":{"name":"ScannableFingerprintV1","abstract":"<p>A fingerprint optimised to be scanned through e.g. a QR Code</p>"},"Structs/SenderChain.html":{"name":"SenderChain","abstract":"<p>The sender chain of a ratchet used to encrypt messages for sending.</p>"},"Structs/DeviceConsistencyMessage.html":{"name":"DeviceConsistencyMessage","abstract":"<p>Device consistency messages can be sent between multiple devices to verify that the"},"Structs/SignalCommonCrypto.html":{"name":"SignalCommonCrypto","abstract":"<p>Implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SignalCryptoProvider.html\">SignalCryptoProvider</a></code> protocol using"},"Structs/SessionPreKey.html":{"name":"SessionPreKey","abstract":"<p>A pre key used to esatblish a session. A unique pre key is used for"},"Structs/SessionPublicPreKey.html":{"name":"SessionPublicPreKey","abstract":"<p>A pre key used to esatblish a session. A unique pre key is used for"},"Structs/PreKeySignalMessage.html":{"name":"PreKeySignalMessage","abstract":"<p>A <code>PreKeySignalMessage</code> can be used to establish a new session.</p>"},"Structs/SenderMessageKey.html":{"name":"SenderMessageKey","abstract":"<p>A message key in a chain to encrypt/decrypt messages</p>"},"Structs/SenderKeyDistributionMessage.html":{"name":"SenderKeyDistributionMessage","abstract":"<p><code>SenderKeyDistributionMessage</code>s are used to establish group sessions.</p>"},"Structs/PendingPreKey.html":{"name":"PendingPreKey","abstract":"<p>A pre key sent out as a pre key message</p>"},"Structs/SignalMessage.html":{"name":"SignalMessage","abstract":"<p>A <code>SignalMessage</code> is used to send an encrypted message in an established session.</p>"},"Structs/PrivateKey.html":{"name":"PrivateKey","abstract":"<p>The private part of an elliptic curve key pair."},"Structs/RatchetMessageKeys.html":{"name":"RatchetMessageKeys","abstract":"<p>The keys needed to encrypt/decrypt a message</p>"},"Structs/SignalSenderKeyName.html":{"name":"SignalSenderKeyName","abstract":"<p>A representation of a (group + sender + device) tuple</p>"},"Structs/RatchetRootKey.html":{"name":"RatchetRootKey","abstract":"<p>A root key is within a ratchet to derive new sender and receiver chain keys.</p>"},"Structs/SessionBuilder.html":{"name":"SessionBuilder","abstract":"<p>Session builder is responsible for setting up encrypted sessions."},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegateP06signedeF010Foundation4DataVs6UInt32V3for_tKF":{"name":"signedPreKey(for:)","abstract":"<p>Provide a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegateP5storey10Foundation4DataV06signedeF0_s6UInt32V3fortKF":{"name":"store(signedPreKey:for:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegateP08containsdeF0Sbs6UInt32V3for_tF":{"name":"containsSignedPreKey(for:)","abstract":"<p>Indicate if a Signed Pre Key exists for an id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegateP06removedeF0ys6UInt32V3for_tKF":{"name":"removeSignedPreKey(for:)","abstract":"<p>Remove a Signed Pre Key.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegateP6allIdsSays6UInt32VGyF":{"name":"allIds()","abstract":"<p>Get all Ids for the SignedPreKeys in the store.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegateP6lastIds6UInt32Vv":{"name":"lastId","abstract":"<p>The id of the last SignedPreKey that was stored.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:19SignalProtocolSwift25SignedPreKeyStoreDelegatePAAE5storeyAA07SessiondeF0V06signedeF0_tKF":{"name":"store(signedPreKey:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintP7versionAA0E0V7VersionOvZ":{"name":"version","abstract":"<p>The fingerprint version</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintP05localE010Foundation4DataVv":{"name":"localFingerprint","abstract":"<p>The fingerprint data of the local party</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintP06remoteE010Foundation4DataVv":{"name":"remoteFingerprint","abstract":"<p>The fingerprint data of the remote party</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintP7matchesSbAaB_pKF":{"name":"matches(_:)","abstract":"<p>Compare two fingerprints for equality</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintP6objectAA31Textsecure_CombinedFingerprintsVv":{"name":"object","abstract":"<p>The Protobuf object of the fingerprint</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintPAAE17fingerprintObjectAA31Textsecure_CombinedFingerprintsVv":{"name":"fingerprintObject","abstract":"<p>Create a ProtoBuf object populated with the fingerprint data</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintPAAE4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize a fingerprint.</p>","parent_name":"ScannableFingerprint"},"Protocols/ScannableFingerprint.html#/s:19SignalProtocolSwift20ScannableFingerprintPAAE17fingerprintsMatchSbAaB_p_AaB_ptKF":{"name":"fingerprintsMatch(_:_:)","abstract":"<p>Compare two fingerprints for equality.</p>","parent_name":"ScannableFingerprint"},"Protocols/SignalCryptoProvider.html#/s:19SignalProtocolSwift0A14CryptoProviderP6random10Foundation4DataVSi5bytes_tKF":{"name":"random(bytes:)","abstract":"<p>Create a number of secure random bytes.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:19SignalProtocolSwift0A14CryptoProviderP10hmacSHA25610Foundation4DataVAG3for_AG4withtKF":{"name":"hmacSHA256(for:with:)","abstract":"<p>Authenticate a message with the HMAC based on SHA256.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:19SignalProtocolSwift0A14CryptoProviderP6sha51210Foundation4DataVAG3for_tKF":{"name":"sha512(for:)","abstract":"<p>Return the SHA512 message digest.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:19SignalProtocolSwift0A14CryptoProviderP7encrypt10Foundation4DataVAG7message_AA0A16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with the given scheme.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:19SignalProtocolSwift0A14CryptoProviderP7decrypt10Foundation4DataVAG7message_AA0A16EncryptionSchemeO4withAG3keyAG2ivtKF":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with the given scheme.</p>","parent_name":"SignalCryptoProvider"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegateP03getdE4Data10Foundation0I0VyKF":{"name":"getIdentityKeyData()","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegateP5storey10Foundation4DataV08identityeJ0_tKF":{"name":"store(identityKeyData:)","abstract":"<p>Save the identity key pair.</p>","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegateP22getLocalRegistrationIDs6UInt32VyKF":{"name":"getLocalRegistrationID()","abstract":"<p>Return the local registration id. This id should be generated once at","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegateP9isTrustedSb10Foundation4DataV8identity_7AddressQz3fortF":{"name":"isTrusted(identity:for:)","abstract":"<p>Determine whether a remote client&rsquo;s identity is trusted. The convention is","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegateP5storey10Foundation4DataVSg8identity_7AddressQz3fortKF":{"name":"store(identity:for:)","abstract":"<p>Store a remote client&rsquo;s identity key as trusted. The value of key_data may be null.","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegatePAAE03getdE0AA0E4PairVyKF":{"name":"getIdentityKey()","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:19SignalProtocolSwift24IdentityKeyStoreDelegatePAAE5storeyAA0E4PairV08identityE0_tKF":{"name":"store(identityKey:)","abstract":"<p>Save the identity key pair.</p>","parent_name":"IdentityKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:19SignalProtocolSwift19PreKeyStoreDelegateP03preE010Foundation4DataVs6UInt32V3for_tKF":{"name":"preKey(for:)","abstract":"<p>Provide a Pre Key for a given id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:19SignalProtocolSwift19PreKeyStoreDelegateP5storey10Foundation4DataV03preE0_s6UInt32V3fortKF":{"name":"store(preKey:for:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:19SignalProtocolSwift19PreKeyStoreDelegateP08containsdE0Sbs6UInt32V3for_tF":{"name":"containsPreKey(for:)","abstract":"<p>Indicate if a pre key exists for an id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:19SignalProtocolSwift19PreKeyStoreDelegateP06removedE0ys6UInt32V3for_tKF":{"name":"removePreKey(for:)","abstract":"<p>Remove a pre key.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:19SignalProtocolSwift19PreKeyStoreDelegateP6lastIds6UInt32Vv":{"name":"lastId","abstract":"<p>Return the id of the last stored pre key.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:19SignalProtocolSwift19PreKeyStoreDelegatePAAE5storeyAA07SessiondE0V03preE0_tKF":{"name":"store(preKey:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/SenderKeyStoreDelegate.html#/s:19SignalProtocolSwift22SenderKeyStoreDelegateP06senderE010Foundation4DataVSg7AddressQz3for_tF":{"name":"senderKey(for:)","abstract":"<p>Returns a copy of the sender key record corresponding to the address tuple.</p>","parent_name":"SenderKeyStoreDelegate"},"Protocols/SenderKeyStoreDelegate.html#/s:19SignalProtocolSwift22SenderKeyStoreDelegateP5storey10Foundation4DataV06senderE0_7AddressQz3fortKF":{"name":"store(senderKey:for:)","abstract":"<p>Stores a copy of the sender key record corresponding to the (groupId + senderId + deviceId) tuple.</p>","parent_name":"SenderKeyStoreDelegate"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextP011identityKeyD008IdentitygD0Qzv":{"name":"identityKeyStore","abstract":"<p>The Identity Key store that stores the records for the identity key module</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextP06preKeyD0AA03PregD8Delegate_pv":{"name":"preKeyStore","abstract":"<p>The Pre Key store that stores the records for the pre key module</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextP09senderKeyD006SendergD0Qzv":{"name":"senderKeyStore","abstract":"<p>The Sender Key store that stores the records for the sender key module</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextP07sessionD007SessionD0Qzv":{"name":"sessionStore","abstract":"<p>The Session store that stores the records for the session module</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextP012signedPreKeyD0AA06SignedghD8Delegate_pv":{"name":"signedPreKeyStore","abstract":"<p>The Signed Pre Key store that stores the records for the signed pre key module</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextPAAE17createIdentityKey10Foundation4DataVyKF":{"name":"createIdentityKey()","abstract":"<p>Create a new identity key pair and store it.</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextPAAE18createSignedPrekey10Foundation4DataVs6UInt32V2id_s6UInt64V9timestamptKF":{"name":"createSignedPrekey(id:timestamp:)","abstract":"<p>Create a signed pre key with the given id and store it.</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SignalProtocolStoreContext.html#/s:19SignalProtocolSwift0aB12StoreContextPAAE13createPreKeysSay10Foundation4DataVGs6UInt32V5start_Si5counttKF":{"name":"createPreKeys(start:count:)","abstract":"<p>Create a number of pre keys and store them.</p>","parent_name":"SignalProtocolStoreContext"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP7Address":{"name":"Address","abstract":"<p>The address of a user or device</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP04loadD010Foundation4DataVSg7AddressQz3for_tF":{"name":"loadSession(for:)","abstract":"<p>Load a session for a given address.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP17subDeviceSessionsSays6UInt32VGSS3for_tF":{"name":"subDeviceSessions(for:)","abstract":"<p>Retreive the recipient IDs of all active sessions for a remote client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP5storey10Foundation4DataV7session_7AddressQz3fortKF":{"name":"store(session:for:)","abstract":"<p>Store a session record for a remote client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP08containsD0Sb7AddressQz3for_tF":{"name":"containsSession(for:)","abstract":"<p>Indicate if a record exists for the client address</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP06deleteD0y7AddressQz3for_tKF":{"name":"deleteSession(for:)","abstract":"<p>Delete a session for a remote client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:19SignalProtocolSwift20SessionStoreDelegateP17deleteAllSessionsSiSS3for_tF":{"name":"deleteAllSessions(for:)","abstract":"<p>Delete all session records for a given client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html":{"name":"SessionStoreDelegate","abstract":"<p>Implement the <code>SessionStoreDelegate</code> protocol to handle the Session records of the"},"Protocols/SignalProtocolStoreContext.html":{"name":"SignalProtocolStoreContext","abstract":"<p>Provide all local storage delegates.</p>"},"Protocols/SenderKeyStoreDelegate.html":{"name":"SenderKeyStoreDelegate","abstract":"<p>Implement the <code>SenderKeyStoreDelegate</code> protocol to handle the Sender Key storage of the"},"Protocols/PreKeyStoreDelegate.html":{"name":"PreKeyStoreDelegate","abstract":"<p>Implement the <code>PreKeyStoreDelegate</code> protocol to handle the Pre Key storage of the"},"Protocols/IdentityKeyStoreDelegate.html":{"name":"IdentityKeyStoreDelegate","abstract":"<p>Implement the <code>IdentityKeyStoreDelegate</code> protocol to handle the Identity Keys of the"},"Protocols/SignalCryptoProvider.html":{"name":"SignalCryptoProvider","abstract":"<p>The <code>SignalCryptoProvider</code> protocol can be implemented to provide a custom"},"Protocols/ScannableFingerprint.html":{"name":"ScannableFingerprint","abstract":"<p>This protocol defines the main building blocks of a scannable fingerprint.</p>"},"Protocols/SignedPreKeyStoreDelegate.html":{"name":"SignedPreKeyStoreDelegate","abstract":"<p>Implement the <code>SignedPreKeyStoreDelegate</code> protocol to handle the Signed Pre Key storage of the"},"Functions.html#/s:19SignalProtocolSwift13getLogicalKey33_D0BC3BD30CB8A0CCC1BF762982B2C150LL10Foundation4DataVSayAA06PublicF0VG3for_tF":{"name":"getLogicalKey(for:)","abstract":"<p>Serialize the list of public keys by first sorting the keys and then"},"Functions.html#/s:19SignalProtocolSwift14getFingerprint33_D0BC3BD30CB8A0CCC1BF762982B2C150LL10Foundation4DataVAF8identity_SS16stableIdentifierSi10iterationstKF":{"name":"getFingerprint(identity:stableIdentifier:iterations:)","abstract":"<p>Calculate the fingerprint for identity data and identifier.</p>"},"Functions.html#/s:19SignalProtocolSwift26createScannableFingerprintAA0eF0_p10Foundation4DataV4from_tKF":{"name":"createScannableFingerprint(from:)","abstract":"<p>Create a scannable fingerprint from data.</p>"},"Enums/SignalEncryptionScheme.html#/s:19SignalProtocolSwift0A16EncryptionSchemeO16AES_CBCwithPKCS5A2CmF":{"name":"AES_CBCwithPKCS5","abstract":"<p>Encrypt/decrypt with AES in CBC mode with PKCS5 padding</p>","parent_name":"SignalEncryptionScheme"},"Enums/SignalEncryptionScheme.html#/s:19SignalProtocolSwift0A16EncryptionSchemeO16AES_CTRnoPaddingA2CmF":{"name":"AES_CTRnoPadding","abstract":"<p>Encrypt/decrypt with AES in CTR mode with no padding</p>","parent_name":"SignalEncryptionScheme"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeO6signalA2CmF":{"name":"signal","abstract":"<p>A &lsquo;normal&rsquo; message in an established session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeO6preKeyA2CmF":{"name":"preKey","abstract":"<p>A pre key message to establish a new session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeO9senderKeyA2CmF":{"name":"senderKey","abstract":"<p>A normal message in an established group session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeO21senderKeyDistributionA2CmF":{"name":"senderKeyDistribution","abstract":"<p>A distribution message to establish a new group session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeO11descriptionSSv":{"name":"description","abstract":"<p>A String representation of the type</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeO4data10Foundation4DataVv":{"name":"data","abstract":"<p>Encode the type into a string</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:19SignalProtocolSwift14CipherTextTypeOACSg10Foundation4DataV4from_tcfc":{"name":"init(from:)","abstract":"<p>Extract the <code>CipherTextType</code> from data.</p>","parent_name":"CipherTextType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO7unknownA2CmF":{"name":"unknown","abstract":"<p>Unknown errors should only be thrown of no other, more descriptive error type exists</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO05curveD0A2CmF":{"name":"curveError","abstract":"<p>Curve25519 functions returned an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO07storageD0A2CmF":{"name":"storageError","abstract":"<p>The local storage implementation produced an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO16duplicateMessageA2CmF":{"name":"duplicateMessage","abstract":"<p>A message was received that was previously decrypted, or is too old</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO07invalidE0A2CmF":{"name":"invalidType","abstract":"<p>The message type does not match</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO10invalidKeyA2CmF":{"name":"invalidKey","abstract":"<p>An invalid key produced an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO9invalidIdA2CmF":{"name":"invalidId","abstract":"<p>The (key) id is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO10invalidMacA2CmF":{"name":"invalidMac","abstract":"<p>The authentication failed</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO14invalidMessageA2CmF":{"name":"invalidMessage","abstract":"<p>The message structure is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO14invalidVersionA2CmF":{"name":"invalidVersion","abstract":"<p>The version of the message or object is unsupported</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO13invalidLengthA2CmF":{"name":"invalidLength","abstract":"<p>The length of a message or stored object is incorrect</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO13legacyMessageA2CmF":{"name":"legacyMessage","abstract":"<p>A message from an older implementation of the protocol is received</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO9noSessionA2CmF":{"name":"noSession","abstract":"<p>No valid session exists for the address</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO17untrustedIdentityA2CmF":{"name":"untrustedIdentity","abstract":"<p>The identity of the recipient is untrusted</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO16invalidSignatureA2CmF":{"name":"invalidSignature","abstract":"<p>The signature of the message is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO15invalidProtoBufA2CmF":{"name":"invalidProtoBuf","abstract":"<p>A serialized record or message is not in valid protocol buffer format</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO17fPVersionMismatchA2CmF":{"name":"fPVersionMismatch","abstract":"<p>The version of two fingerprints is not equal</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO18fPIdentityMismatchA2CmF":{"name":"fPIdentityMismatch","abstract":"<p>The identity of two fingerprints is not equal</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO16noCryptoProviderA2CmF":{"name":"noCryptoProvider","abstract":"<p>There is no crypto provider set</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO13noRandomBytesA2CmF":{"name":"noRandomBytes","abstract":"<p>Random bytes could not be created</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO04hmacD0A2CmF":{"name":"hmacError","abstract":"<p>There was an error calculating the HMAC of a message</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO06digestD0A2CmF":{"name":"digestError","abstract":"<p>There was an error calculating a digest</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO010encryptionD0A2CmF":{"name":"encryptionError","abstract":"<p>An error occured during encryption</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:19SignalProtocolSwift0A9ErrorTypeO010decryptionD0A2CmF":{"name":"decryptionError","abstract":"<p>An error occured during decryption</p>","parent_name":"SignalErrorType"},"Enums/HKDFVersion.html#/s:19SignalProtocolSwift11HKDFVersionO8version2A2CmF":{"name":"version2","abstract":"<p>Older messages have an iteration offset of 0</p>","parent_name":"HKDFVersion"},"Enums/HKDFVersion.html#/s:19SignalProtocolSwift11HKDFVersionO8version3A2CmF":{"name":"version3","abstract":"<p>Newer messages have an iteration offset of 1</p>","parent_name":"HKDFVersion"},"Enums/HKDFVersion.html":{"name":"HKDFVersion","abstract":"<p>The different versions of the HKDF</p>"},"Enums/SignalErrorType.html":{"name":"SignalErrorType","abstract":"<p>The different types of errors that can occur using the SignalProtocolSwift library.</p>"},"Enums/CipherTextType.html":{"name":"CipherTextType","abstract":"<p>The <code>CipherTextType</code> enum describes the different types of messages.</p>"},"Enums/SignalEncryptionScheme.html":{"name":"SignalEncryptionScheme","abstract":"<p>Specifies the type of algorithm to use for encryption and decryption.</p>"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC9maxStates33_6E22DCD33A8D66B81C3E04DCDA6824D4LLSivZ":{"name":"maxStates","abstract":"<p>The maximum number of different states that are saved</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC6states33_6E22DCD33A8D66B81C3E04DCDA6824D4LLSayAA0dE5StateCGv":{"name":"states","abstract":"<p>The states that are saved by the record, sorted by most recent</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC5stateAA0dE5StateCSgv":{"name":"state","abstract":"<p>The active state is the most recent, if any states exist</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC7isEmptySbv":{"name":"isEmpty","abstract":"<p>Indicate if there are any states in this record</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordCACycfc":{"name":"init()","abstract":"<p>Create a fresh session record without any states.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC5stateAA0dE5StateCSgs6UInt32V3for_tF":{"name":"state(for:)","abstract":"<p>Get the state for an id.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC03setdE0ys6UInt32V2id_AF9iteration10Foundation4DataV05chainE0AA0E4PairV09signatureeN0tF":{"name":"setSenderKey(id:iteration:chainKey:signatureKeyPair:)","abstract":"<p>Set a new sender key state and delete all previous states.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC8addStateys6UInt32V2id_AF9iteration10Foundation4DataV05chainE0AA06PublicE0V09signatureoE0AA07PrivateE0VSg0pqE0tF":{"name":"addState(id:iteration:chainKey:signaturePublicKey:signaturePrivateKey:)","abstract":"<p>Add a new sender key state.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC8addStateys6UInt32V2id_AF9iteration10Foundation4DataV05chainE0AA0E4PairV09signatureeO0tF":{"name":"addState(id:iteration:chainKey:signatureKeyPair:)","abstract":"<p>Add a new sender key state.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC6objectAA011Textsecure_deF9StructureVv":{"name":"object","abstract":"<p>The record converted to a ProtoBuf object for storage</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The record converted to data for storage</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordCAcA011Textsecure_deF9StructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from a ProtoBuf object.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from serialized data.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:19SignalProtocolSwift15SenderKeyRecordC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two records.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC07messageE7MaximumSivZ":{"name":"messageKeyMaximum","abstract":"<p>The maximum number of message keys stored</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC5keyIds6UInt32Vv":{"name":"keyId","abstract":"<p>The current key id</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC05chainE0AA0d5ChainE0Vv":{"name":"chainKey","abstract":"<p>The chain key of the state used for key generation</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC015signaturePublicE0AA0hE0Vv":{"name":"signaturePublicKey","abstract":"<p>The signature key</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC016signaturePrivateE0AA0hE0VSgv":{"name":"signaturePrivateKey","abstract":"<p>The private part of the signature key, optional</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC11messageKeys33_58E29FC8B5B6C5005ABA7D82CD04373FLLSayAA0d7MessageE0VGv":{"name":"messageKeys","abstract":"<p>Dictionary of message keys indexed by iteration</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateCACs6UInt32V5keyId_AA0d5ChainE0V05chainE0AA06PublicE0V09signaturelE0AA07PrivateE0VSg0mnE0tcfc":{"name":"init(keyId:chainKey:signaturePublicKey:signaturePrivateKey:)","abstract":"<p>Create a new session state.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC3addyAA0d7MessageE0V07messageE0_Sb15removingOldKeystF":{"name":"add(messageKey:removingOldKeys:)","abstract":"<p>Add a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SenderMessageKey.html\">SenderMessageKey</a></code> to the keys which are stored to decrypt old (out of order) messages.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC07messageE0AA0d7MessageE0VSgs6UInt32V3for_tF":{"name":"messageKey(for:)","abstract":"<p>Get the message key for the iteration, if it exists.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC20removeOldMessageKeys33_58E29FC8B5B6C5005ABA7D82CD04373FLLyyF":{"name":"removeOldMessageKeys()","abstract":"<p>Remove old message keys if the number is higher then the maximum.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC06senderE0AA0d7MessageE0Vs6UInt32V3for_tKF":{"name":"senderKey(for:)","abstract":"<p>Get the sender key for the iteration of the chain.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a SenderKeyState from serialized data.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateCAcA011Textsecure_deF9StructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a SenderKeyState from a ProtoBuf object.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC6objectAA011Textsecure_deF9StructureVv":{"name":"object","abstract":"<p>The state converted to a ProtoBuf object</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The state converted to serialized data for storage.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:19SignalProtocolSwift14SenderKeyStateC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare tow states for equality</p>","parent_name":"SenderKeyState"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC10ratchetKeyAA06PublicG0Vv":{"name":"ratchetKey","abstract":"<p>The current ratchet key</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC8chainKeyAA07RatcheteG0Vv":{"name":"chainKey","abstract":"<p>The current chain key</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC11messageKeys33_8B155DBC8B1F13FC926145004138F4EALLSayAA014RatchetMessageG0VGv":{"name":"messageKeys","abstract":"<p>The stored message keys for out-of-order messages</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainCAcA9PublicKeyV07ratchetG0_AA07RatcheteG0V05chainG0tcfc":{"name":"init(ratchetKey:chainKey:)","abstract":"<p>Create a receiver chain from the components.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC3addyAA18RatchetMessageKeysV10messageKey_tF":{"name":"add(messageKey:)","abstract":"<p>Add a message key to the stored message keys.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC3hasSbAA18RatchetMessageKeysV10messageKey_tF":{"name":"has(messageKey:)","abstract":"<p>Check if a message key already exists.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC10messageKeyAA18RatchetMessageKeysVSgs6UInt32V3for_tF":{"name":"messageKey(for:)","abstract":"<p>Get a message key if it exists.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC16removeMessageKeyAA07RatchetG4KeysVSgs6UInt32V3for_tF":{"name":"removeMessageKey(for:)","abstract":"<p>Remove a message key and return it.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainCAcA27Textsecure_SessionStructureV0E0V4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Create a receiver chain from a protobuf object.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainCAC10Foundation4DataV4from_AA11HKDFVersionO7versiontKcfc":{"name":"init(from:version:)","abstract":"<p>Deserialize a receiver chain.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the receiver chain.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC6objectAA27Textsecure_SessionStructureV0E0Vv":{"name":"object","abstract":"<p>The receiver chain converted to a protobuf object</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:19SignalProtocolSwift13ReceiverChainC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two receiver chains for equality.</p>","parent_name":"ReceiverChain"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC24cipherTextCurrentVersion33_639F4D9E35BCA0DD2378B78191F499AALLs5UInt8VvZ":{"name":"cipherTextCurrentVersion","abstract":"<p>The current version of the message encryption</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC17maxReceiverChains33_639F4D9E35BCA0DD2378B78191F499AALLSivZ":{"name":"maxReceiverChains","abstract":"<p>The maximum number of receiver chains for the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC7keyInfo33_639F4D9E35BCA0DD2378B78191F499AALL10Foundation4DataVvZ":{"name":"keyInfo","abstract":"<p>The info material used for the derivation of chain and root keys</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC7versions5UInt8Vv":{"name":"version","abstract":"<p>The version of the session</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC15previousCounters6UInt32Vv":{"name":"previousCounter","abstract":"<p>The last counter in the previous sender chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC20remoteRegistrationIDs6UInt32Vv":{"name":"remoteRegistrationID","abstract":"<p>the id of the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC19localRegistrationIDs6UInt32Vv":{"name":"localRegistrationID","abstract":"<p>The id of the local party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC13localIdentityAA9PublicKeyVSgv":{"name":"localIdentity","abstract":"<p>The identity key of the local party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC14remoteIdentityAA9PublicKeyVSgv":{"name":"remoteIdentity","abstract":"<p>The identity key of the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC7rootKeyAA011RatchetRootG0VSgv":{"name":"rootKey","abstract":"<p>The root key of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC11senderChainAA06SenderG0VSgv":{"name":"senderChain","abstract":"<p>The sender chain of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC14receiverChainsSayAA13ReceiverChainCGv":{"name":"receiverChains","abstract":"<p>The receiver chains of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC13pendingPreKeyAA07PendinggH0VSgv":{"name":"pendingPreKey","abstract":"<p>An optional pending pre key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC12aliceBaseKeyAA06PublicH0VSgv":{"name":"aliceBaseKey","abstract":"<p>The base key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateCACycfc":{"name":"init()","abstract":"<p>Create a new sender state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC13receiverChainAA08ReceiverG0CSgAA9PublicKeyV3for_tF":{"name":"receiverChain(for:)","abstract":"<p>Find a receiver chain for a sender key.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC3addyAA13ReceiverChainC08receiverH0_tF":{"name":"add(receiverChain:)","abstract":"<p>Add a receiver chain to the state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC3setyAA15RatchetChainKeyV05chainI0_AA06PublicI0V3fortKF":{"name":"set(chainKey:for:)","abstract":"<p>Set the chain key for a given sender key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC3setyAA18RatchetMessageKeysV07messageI0_AA9PublicKeyV3fortF":{"name":"set(messageKeys:for:)","abstract":"<p>Set the message keys for a given sender key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC17removeMessageKeysAA07RatchetgH0VSgAA9PublicKeyV3for_s6UInt32V3andtF":{"name":"removeMessageKeys(for:and:)","abstract":"<p>Remove message keys</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC16receiverChainKeyAA07RatchetgH0VSgAA06PublicH0V3for_tF":{"name":"receiverChainKey(for:)","abstract":"<p>Find the chain key of a receiver chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC3setyAA15RatchetChainKeyV08receiverhI0_AA06PublicI0V3fortKF":{"name":"set(receiverChainKey:for:)","abstract":"<p>Set the chain key of a receiver chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC15aliceInitializeyAA7KeyPairV011ourIdentityH0_AF0j4BaseH0AA06PublicH0V05theirkH0AJ0n9SignedPreH0AJSg0n7OneTimepH0AJ0n7RatchetH0tKF":{"name":"aliceInitialize(ourIdentityKey:ourBaseKey:theirIdentityKey:theirSignedPreKey:theirOneTimePreKey:theirRatchetKey:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC13bobInitializeyAA7KeyPairV011ourIdentityH0_AF0j9SignedPreH0AFSg0j7OneTimemH0AF0j7RatchetH0AA06PublicH0V05theirkH0AM0r4BaseH0tKF":{"name":"bobInitialize(ourIdentityKey:ourSignedPreKey:ourOneTimePreKey:ourRatchetKey:theirIdentityKey:theirBaseKey:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC19symmetricInitializeyAA19SymmetricParametersV10parameters_tKF":{"name":"symmetricInitialize(parameters:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC20calculateDerivedKeys33_639F4D9E35BCA0DD2378B78191F499AALLAA14RatchetRootKeyV04rootS0_AA0q5ChainS0V05chainS0t10Foundation4DataV6secret_tKF":{"name":"calculateDerivedKeys(secret:)","abstract":"<p>Create the root and chain key from the secret.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateCAcA011Textsecure_D9StructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a state from a protobuf object.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a state from serialized data.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC6objectAA011Textsecure_D9StructureVv":{"name":"object","abstract":"<p>The state converted to a protobuf object</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:19SignalProtocolSwift12SessionStateC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare tow session states.</p>","parent_name":"SessionState"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC4typeAA0aD4TypeOv":{"name":"type","abstract":"<p>The error type</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC7messageSSSgv":{"name":"message","abstract":"<p>A decribing message accompaning the error</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC5causeACSgv":{"name":"cause","abstract":"<p>If the error occured in a subfunction, then this variable can be used to construct an error trace.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC8functionSSv":{"name":"function","abstract":"<p>The function were the error occured</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC4fileSSv":{"name":"file","abstract":"<p>The file that the error occured in</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorCAcA0aD4TypeO_SSSgACSg5causeSS4fileSS8functiontcfc":{"name":"init(_:_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code>.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorCACSS_AC5causeSS4fileSS8functiontcfc":{"name":"init(_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code> using an already exisiting <code>SignalError</code> from a subroutine.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorCACSS_s0D0_p5causeSS4fileSS8functiontcfc":{"name":"init(_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code> using an already exisiting <code>Error</code> from a subroutine.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC11descriptionSSv":{"name":"description","abstract":"<p>A decription of the error, including all contained errors, without function and file names</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC16shortDescriptionSSv":{"name":"shortDescription","abstract":"<p>A short decription of the error without the contained errors</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC15longDescriptionSSv":{"name":"longDescription","abstract":"<p>A decription of the error, including all contained errors, as well as function and file names</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC5trace33_2C9B88E60358FA5A10162D102B4629F1LLSSv":{"name":"trace","abstract":"<p>The trace of the error which is used to build the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC15longDescriptionSSv\">longDescription</a></code></p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:19SignalProtocolSwift0A5ErrorC20localizedDescriptionSSv":{"name":"localizedDescription","abstract":"<p>The description of the error</p>","parent_name":"SignalError"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC17archivedStatesMax33_B7E545F96813868737C1D08324AE2364LLSivZ":{"name":"archivedStatesMax","abstract":"<p>The maximum number of archived states</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC5stateAA0D5StateCv":{"name":"state","abstract":"<p>The current session</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC14previousStatesSayAA0D5StateCGv":{"name":"previousStates","abstract":"<p>A list of previous sessions, sorted by most recent</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC7isFreshSbv":{"name":"isFresh","abstract":"<p>Indicates if the session was just created</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordCAcA0D5StateCSg5state_tcfc":{"name":"init(state:)","abstract":"<p>Create a new session record for a session.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC03hasD5StateSbs5UInt8V7version_AA9PublicKeyV04baseK0tF":{"name":"hasSessionState(version:baseKey:)","abstract":"<p>Check if the session record contains a specific state.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC19archiveCurrentStateyyF":{"name":"archiveCurrentState()","abstract":"<p>Create a new state and archive the old one.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC12promoteStateyAA0dG0C5state_tF":{"name":"promoteState(state:)","abstract":"<p>Make a state the currently active state.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC11removeState33_B7E545F96813868737C1D08324AE2364LLys5UInt8V3for_AA9PublicKeyV3andtF":{"name":"removeState(for:and:)","abstract":"<p>Remove a state from the previous states.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>Serialize the record for storage.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC6objectAA011Textsecure_E9StructureVv":{"name":"object","abstract":"<p>Convert the record to a ProtoBuf object for storage</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordCAC10Foundation4DataV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from serialized data.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordCAcA011Textsecure_E9StructureV4from_tKcfc":{"name":"init(from:)","abstract":"<p>Create a session record from a ProtoBuf object.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:19SignalProtocolSwift13SessionRecordC2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two session records for equality.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html":{"name":"SessionRecord","abstract":"<p>The record of a session (and previous sessions) with another party.</p>"},"Classes/SignalError.html":{"name":"SignalError","abstract":"<p>All errors thrown by <code>SignalProtocolSwift</code> are <code>SignalError</code> objects.</p>"},"Classes/SessionState.html":{"name":"SessionState","abstract":"<p>A session state contains all data needed for communicating with a remote party.</p>"},"Classes/ReceiverChain.html":{"name":"ReceiverChain","abstract":"<p>A receiver chain is the part of the ratchet that creates the message keys for the received messages.</p>"},"Classes/SenderKeyState.html":{"name":"SenderKeyState","abstract":"<p>A state of a group message session with a recipient,"},"Classes/SenderKeyRecord.html":{"name":"SenderKeyRecord","abstract":"<p>Stores the states for a session.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}
{"Typealiases.html#/s:14SignalProtocol22RatchetIdentityKeyPaira":{"name":"RatchetIdentityKeyPair","abstract":"<p>An elliptic key pair specifically used for identification in a ratchet</p>"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV14ourIdentityKeyAA0G4PairVvp":{"name":"ourIdentityKey","abstract":"<p>The identity of the local party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV10ourBaseKeyAA0G4PairVvp":{"name":"ourBaseKey","abstract":"<p>The base key for the ratchet of the local party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV13ourRatchetKeyAA0G4PairVvp":{"name":"ourRatchetKey","abstract":"<p>The initial key used for the ratchet</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV12theirBaseKeyAA06PublicG0Vvp":{"name":"theirBaseKey","abstract":"<p>The base key of the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV15theirRatchetKeyAA06PublicG0Vvp":{"name":"theirRatchetKey","abstract":"<p>The ratchet key used by the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV16theirIdentityKeyAA06PublicG0Vvp":{"name":"theirIdentityKey","abstract":"<p>The identity of the remote party</p>","parent_name":"SymmetricParameters"},"Structs/SymmetricParameters.html#/s:14SignalProtocol19SymmetricParametersV7isAliceSbvp":{"name":"isAlice","abstract":"<p>Indicate if the session was initialized as Alice</p>","parent_name":"SymmetricParameters"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV2ids6UInt32Vvp":{"name":"id","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV3keyAA0gF0Vvp":{"name":"key","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV9timestamps6UInt64Vvp":{"name":"timestamp","abstract":"<p>The time when the key was created</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV9signature10Foundation4DataVvp":{"name":"signature","abstract":"<p>The signature of the public key of the key pair</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV2id9timestamp3key9signatureACs6UInt32V_s6UInt64VAA0gF0V10Foundation4DataVtcfc":{"name":"init(id:timestamp:key:signature:)","abstract":"<p>Create a public signed pre key from its components.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV6verify4withSbAA0gF0V_tF":{"name":"verify(with:)","abstract":"<p>Verify that the signed key is valid.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV11protoObjectAA0a1_deF0V0G4PartVvp":{"name":"protoObject","abstract":"<p>Convert the public signed pre key to a ProtoBuf object</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV4fromAcA0a1_deF0V0G4PartV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from a ProtoBuf object.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKeyPublic.html#/s:14SignalProtocol25SessionSignedPreKeyPublicV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two public signed pre keys for equality.</p>","parent_name":"SessionSignedPreKeyPublic"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV06publicF0AA0cdeF6PublicVvp":{"name":"publicKey","abstract":"<p>The public data of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV07privateF0AA07PrivateF0Vvp":{"name":"privateKey","abstract":"<p>The private key of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV2id9timestamp7keyPair9signatureACs6UInt32V_s6UInt64VAA0fJ0V10Foundation4DataVtcfc":{"name":"init(id:timestamp:keyPair:signature:)","abstract":"<p>Create a signed pre key from its components.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV2id09signatureF09timestampACs6UInt32V_AA07PrivateF0Vs6UInt64VtKcfc":{"name":"init(id:signatureKey:timestamp:)","abstract":"<p>Create a signed pre key.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV7keyPairAA0fH0Vvp":{"name":"keyPair","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV11protoObjectAA0a1_deF0Vvp":{"name":"protoObject","abstract":"<p>Convert the signed pre key to a ProtoBuf object</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV4fromAcA0a1_deF0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signed pre key from a ProtoBuf object.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionSignedPreKey.html#/s:14SignalProtocol19SessionSignedPreKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two signed pre keys for equality.</p>","parent_name":"SessionSignedPreKey"},"Structs/SessionPreKeyPublic.html#/s:14SignalProtocol19SessionPreKeyPublicV2ids6UInt32Vvp":{"name":"id","abstract":"<p>The id of the pre key</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:14SignalProtocol19SessionPreKeyPublicV3keyAA0fE0Vvp":{"name":"key","abstract":"<p>The key pair of the pre key</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:14SignalProtocol19SessionPreKeyPublicV2id3keyACs6UInt32V_AA0fE0Vtcfc":{"name":"init(id:key:)","abstract":"<p>Create a public pre key from the components</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:14SignalProtocol19SessionPreKeyPublicV11protoObjectAA0a1_dE0V0F4PartVvp":{"name":"protoObject","abstract":"<p>Convert the public pre key to a ProtoBuf object</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyPublic.html#/s:14SignalProtocol19SessionPreKeyPublicV4fromAcA0a1_dE0V0F4PartV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a public pre key from a ProtoBuf object.</p>","parent_name":"SessionPreKeyPublic"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV03preE2Ids6UInt32Vvp":{"name":"preKeyId","abstract":"<p>The id of the pre key that was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV03preE6PublicAA0hE0VSgvp":{"name":"preKeyPublic","abstract":"<p>The pre key, if a pre key was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV06signeddE2Ids6UInt32Vvp":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV06signeddE6PublicAA0hE0Vvp":{"name":"signedPreKeyPublic","abstract":"<p>The signed pre key that was used</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV06signeddE9Signature10Foundation4DataVvp":{"name":"signedPreKeySignature","abstract":"<p>The signature of the signed pre key</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV08identityE0AA06PublicE0Vvp":{"name":"identityKey","abstract":"<p>The identity key of the remote party</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV03preE2Id0gE6Public06signeddeH00jdeI00jdE9Signature08identityE0ACs6UInt32V_AA0iE0VSgAkM10Foundation4DataVAMtcfc":{"name":"init(preKeyId:preKeyPublic:signedPreKeyId:signedPreKeyPublic:signedPreKeySignature:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV03preE006signeddE008identityE0AcA0cdE6PublicV_AA0c6SigneddeJ0VAA0jE0Vtcfc":{"name":"init(preKey:signedPreKey:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKeyBundle.html#/s:14SignalProtocol19SessionPreKeyBundleV03preE006signeddE008identityE0AC10Foundation4DataV_A2ItKcfc":{"name":"init(preKey:signedPreKey:identityKey:)","abstract":"<p>Create a pre key bundle from its components.</p>","parent_name":"SessionPreKeyBundle"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV14mediumMaxValues6UInt32VvpZ":{"name":"mediumMaxValue","abstract":"<p>The upper bound (inclusive) of the pre key id</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV06publicE0AA0cdE6PublicVvp":{"name":"publicKey","abstract":"<p>The public data of the pre key (id and public key)</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV07privateE0AA07PrivateE0Vvp":{"name":"privateKey","abstract":"<p>The private key of the pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV2id7keyPairACs6UInt32V_AA0eH0Vtcfc":{"name":"init(id:keyPair:)","abstract":"<p>Create a pre key from the components</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV5indexACs6UInt32V_tKcfc":{"name":"init(index:)","abstract":"<p>Create a new pre key with the index.</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV7keyPairAA0eG0Vvp":{"name":"keyPair","abstract":"<p>The key pair of the signed pre key</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV11protoObjectAA0a1_dE0Vvp":{"name":"protoObject","abstract":"<p>Convert the pre key to a ProtoBuf object</p>","parent_name":"SessionPreKey"},"Structs/SessionPreKey.html#/s:14SignalProtocol13SessionPreKeyV4fromAcA0a1_dE0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pre key from a ProtoBuf object.</p>","parent_name":"SessionPreKey"},"Structs/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderV5storexvp":{"name":"store","abstract":"<p>The store to save and retrieve keys from</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderV13remoteAddress0F0Qzvp":{"name":"remoteAddress","abstract":"<p>The address of the other party</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderV13remoteAddress5storeACyxG0F0Qz_xtcfc":{"name":"init(remoteAddress:store:)","abstract":"<p>Constructs a session builder.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderV7process06preKeyA7Message13sessionRecords6UInt32VSgAA03PregaH0V_AA0cJ0CtKF":{"name":"process(preKeySignalMessage:sessionRecord:)","abstract":"<p>Build a new session from a received PreKeySignalMessage.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderV7process33_F6D411A86E796CC268F629D07027DC59LL06preKeyA9MessageV36records6UInt32VSgAA03PreoaP0V_AA0C6RecordCtKF":{"name":"process(preKeySignalMessageV3:record:)","abstract":"<p>Build a new session from a received PreKeySignalMessage.</p>","parent_name":"SessionBuilder"},"Structs/SessionBuilder.html#/s:14SignalProtocol14SessionBuilderV7process12preKeyBundleyAA0c3PregH0V_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SessionPreKeyBundle.html\">SessionPreKeyBundle</a></code> retrieved from a server.</p>","parent_name":"SessionBuilder"},"Structs/PendingPreKey.html#/s:14SignalProtocol13PendingPreKeyV03preE2Ids6UInt32VSgvp":{"name":"preKeyId","abstract":"<p>The id of the pre key, if one was used</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:14SignalProtocol13PendingPreKeyV06signeddE2Ids6UInt32Vvp":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:14SignalProtocol13PendingPreKeyV04baseE0AA06PublicE0Vvp":{"name":"baseKey","abstract":"<p>The base key used for the outgoing pre key message</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:14SignalProtocol13PendingPreKeyV11protoObjectAA0A8_SessionVABVvp":{"name":"protoObject","abstract":"<p>Create a ProtoBuf object for serialization.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:14SignalProtocol13PendingPreKeyV4fromAcA0A8_SessionVABV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a pending pre key from a ProtoBuf object.</p>","parent_name":"PendingPreKey"},"Structs/PendingPreKey.html#/s:14SignalProtocol13PendingPreKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two pending pre keys for equality.</p>","parent_name":"PendingPreKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV12infoMaterial33_C2D7C30424D899CE3A7DA1F602A47A16LL10Foundation4DataVvpZ":{"name":"infoMaterial","abstract":"<p>The info used when creating the keys from the seed</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV8ivLength33_C2D7C30424D899CE3A7DA1F602A47A16LLSivpZ":{"name":"ivLength","abstract":"<p>The length of the initialization vector</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV06cipherE6Length33_C2D7C30424D899CE3A7DA1F602A47A16LLSivpZ":{"name":"cipherKeyLength","abstract":"<p>The length of the key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV12secretLength33_C2D7C30424D899CE3A7DA1F602A47A16LLSivpZ":{"name":"secretLength","abstract":"<p>The combined length of iv and key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV9iterations6UInt32Vvp":{"name":"iteration","abstract":"<p>The iteration of the message key in the chain</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV2iv10Foundation4DataVvp":{"name":"iv","abstract":"<p>The initialization vector</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV06cipherE010Foundation4DataVvp":{"name":"cipherKey","abstract":"<p>The encryption/decryption key</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV4seed33_C2D7C30424D899CE3A7DA1F602A47A16LL10Foundation4DataVvp":{"name":"seed","abstract":"<p>The seed used to derive the key and iv</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV9iteration4seedACs6UInt32V_10Foundation4DataVtKcfc":{"name":"init(iteration:seed:)","abstract":"<p>Create a message key from the components.</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV11protoObjectAA0a1_cE5StateVABVvp":{"name":"protoObject","abstract":"<p>Convert the sender chain key to a ProtoBuf object</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV4fromAcA0a1_cE5StateVABV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a message key from a ProtoBuf object.</p>","parent_name":"SenderMessageKey"},"Structs/SenderMessageKey.html#/s:14SignalProtocol16SenderMessageKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender message keys for equality.</p>","parent_name":"SenderMessageKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV07messageE4Seed33_AFBC729FBC2F089067D4A10FB87CC508LL10Foundation4DataVvpZ":{"name":"messageKeySeed","abstract":"<p>The seed value for the message key when deriving the next key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV05chainE4Seed33_AFBC729FBC2F089067D4A10FB87CC508LL10Foundation4DataVvpZ":{"name":"chainKeySeed","abstract":"<p>The seed value for the chain key when deriving the next key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV9iterations6UInt32Vvp":{"name":"iteration","abstract":"<p>The current iteration of the chain</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV05chainE010Foundation4DataVvp":{"name":"chainKey","abstract":"<p>The current chain key</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV9iteration05chainE0ACs6UInt32V_10Foundation4DataVtcfc":{"name":"init(iteration:chainKey:)","abstract":"<p>Create a new chain key from the components.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV07messageE0AA0c7MessageE0VyKF":{"name":"messageKey()","abstract":"<p>Advance the chain and return the generated message key.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV11protoObjectAA0a1_cE5StateVABVvp":{"name":"protoObject","abstract":"<p>Convert the sender chain key to a ProtoBuf object</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV4fromAcA0a1_cE5StateVABV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a chain key from a ProtoBuf object.</p>","parent_name":"SenderChainKey"},"Structs/SenderChainKey.html#/s:14SignalProtocol14SenderChainKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender chain keys for equality.</p>","parent_name":"SenderChainKey"},"Structs/SenderChain.html#/s:14SignalProtocol11SenderChainV10ratchetKeyAA0F4PairVvp":{"name":"ratchetKey","abstract":"<p>The key pair of the ratchet</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:14SignalProtocol11SenderChainV8chainKeyAA07RatchetdF0Vvp":{"name":"chainKey","abstract":"<p>The current chain key of the ratchet</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:14SignalProtocol11SenderChainV10ratchetKey05chainF0AcA0F4PairV_AA07RatchetdF0Vtcfc":{"name":"init(ratchetKey:chainKey:)","abstract":"<p>Create a sender chain from the components.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:14SignalProtocol11SenderChainV11protoObjectAA0A8_SessionV0D0Vvp":{"name":"protoObject","abstract":"<p>The sender chain converted to a protobuf object</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:14SignalProtocol11SenderChainV4fromAcA0A8_SessionV0D0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a sender chain from a protobuf object.</p>","parent_name":"SenderChain"},"Structs/SenderChain.html#/s:14SignalProtocol11SenderChainV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two sender chains for equality.</p>","parent_name":"SenderChain"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV7keyInfo33_D8FE5E878D186547DB71B3F048BFB123LL10Foundation4DataVvpZ":{"name":"keyInfo","abstract":"<p>Bytes used as input for the KDF</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV10secretSizeSivpZ":{"name":"secretSize","abstract":"<p>The number of bytes for the root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV3key10Foundation4DataVvp":{"name":"key","abstract":"<p>The current root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV3keyAC10Foundation4DataV_tcfc":{"name":"init(key:)","abstract":"<p>Create a new root key from the components</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV11createChain05theircE003ourcE0AC04rootE0_AA0cgE0V05chainE0tAA06PublicE0V_AA07PrivateE0VtKF":{"name":"createChain(theirRatchetKey:ourRatchetKey:)","abstract":"<p>Create a new root key and chain key.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV9protoData10Foundation0G0VyF":{"name":"protoData()","abstract":"<p>Return the serialized root key</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV4fromAC10Foundation4DataV_tcfc":{"name":"init(from:)","abstract":"<p>Deserialize a root key.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two root keys.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetRootKey.html#/s:14SignalProtocol14RatchetRootKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two root keys for equality.</p>","parent_name":"RatchetRootKey"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV15cipherKeyLengthSivpZ":{"name":"cipherKeyLength","abstract":"<p>The length of cipher keys in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV12macKeyLengthSivpZ":{"name":"macKeyLength","abstract":"<p>The length of the mac key in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV8ivLengthSivpZ":{"name":"ivLength","abstract":"<p>The length of the initialization vector in bytes</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV07derivedD11SecretsSizeSivpZ":{"name":"derivedMessageSecretsSize","abstract":"<p>The length of cipher key, mac key, and iv</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV9cipherKey10Foundation4DataVvp":{"name":"cipherKey","abstract":"<p>The cipher key to encrypt/decrypt a message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV6macKey10Foundation4DataVvp":{"name":"macKey","abstract":"<p>The mac key of a message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV2iv10Foundation4DataVvp":{"name":"iv","abstract":"<p>The initialization vector</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV7counters6UInt32Vvp":{"name":"counter","abstract":"<p>The counter of the message</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV6cipher3mac2iv7counterAC10Foundation4DataV_A2Js6UInt32VtKcfc":{"name":"init(cipher:mac:iv:counter:)","abstract":"<p>Create the message keys from the components</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV8materialAC10Foundation4DataV_tKcfc":{"name":"init(material:)","abstract":"<p>Create the message keys from generated bytes.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV11protoObjectAA0A8_SessionV5ChainV0D3KeyVvp":{"name":"protoObject","abstract":"<p>The message keys converted to a ProtoBuf object</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV4fromAcA0A8_SessionV5ChainV0D3KeyV_tKcfc":{"name":"init(from:)","abstract":"<p>Create message keys from a ProtoBuf object.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetMessageKeys.html#/s:14SignalProtocol18RatchetMessageKeysV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two message keys for equality.</p>","parent_name":"RatchetMessageKeys"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV07messageE4Seed33_44AEAEB24A63A38BEDBADB02FDC83859LL10Foundation4DataVvpZ":{"name":"messageKeySeed","abstract":"<p>The seed used as input material for the KDF to derive the message keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV05chainE4Seed33_44AEAEB24A63A38BEDBADB02FDC83859LL10Foundation4DataVvpZ":{"name":"chainKeySeed","abstract":"<p>The seed used as input material for the KDF to derive the chain keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV15keyMaterialSeed33_44AEAEB24A63A38BEDBADB02FDC83859LL10Foundation4DataVvpZ":{"name":"keyMaterialSeed","abstract":"<p>The seed used as info material for the KDF to derive the message keys</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV10secretSizeSivpZ":{"name":"secretSize","abstract":"<p>The size of the chain key</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV14hashOutputSizeSivpZ":{"name":"hashOutputSize","abstract":"<p>The size of the HKDF expand output</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV3key10Foundation4DataVvp":{"name":"key","abstract":"<p>The current key of the ratchet chain, 32 byte</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV3key5indexAC10Foundation4DataV_s6UInt32Vtcfc":{"name":"init(key:index:)","abstract":"<p>Create a ratchet chain key from the components</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV15getBaseMaterial33_44AEAEB24A63A38BEDBADB02FDC83859LL4seed10Foundation4DataVAI_tKF":{"name":"getBaseMaterial(seed:)","abstract":"<p>Get the SHA256 HMAC of the seed.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV11messageKeysAA0c7MessageG0VyKF":{"name":"messageKeys()","abstract":"<p>Get a set of message keys for the Ratchet</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV4nextACyKF":{"name":"next()","abstract":"<p>Return the next chain key</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV11protoObjectAA0A8_SessionV0D0V0dE0Vvp":{"name":"protoObject","abstract":"<p>The chain key converted to a ProtoBuf object</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV4fromAcA0A8_SessionV0D0V0dE0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a chain key from a ProtoBuf object.</p>","parent_name":"RatchetChainKey"},"Structs/RatchetChainKey.html#/s:14SignalProtocol15RatchetChainKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalMessages for equality.</p>","parent_name":"RatchetChainKey"},"Structs/HKDF.html#/s:14SignalProtocol4HKDFV22derivedRootSecretsSize33_13A39DAC40043861907177C99E190678LLSivpZ":{"name":"derivedRootSecretsSize","abstract":"<p>The total number of bytes to derive when creating a new root and chain key</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:14SignalProtocol4HKDFV20iterationStartOffset33_13A39DAC40043861907177C99E190678LLs5UInt8VvpZ":{"name":"iterationStartOffset","abstract":"<p>The offset for the expand iterations</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:14SignalProtocol4HKDFV13deriveSecrets8material4salt4info12outputLength10Foundation4DataVAK_A2KSitKFZ":{"name":"deriveSecrets(material:salt:info:outputLength:)","abstract":"<p>Derive new secrets from the KDF.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:14SignalProtocol4HKDFV6expand33_13A39DAC40043861907177C99E190678LL3prk4info12outputLength10Foundation4DataVAK_AKSitKFZ":{"name":"expand(prk:info:outputLength:)","abstract":"<p>Expand the bytes to create enough output bytes.</p>","parent_name":"HKDF"},"Structs/HKDF.html#/s:14SignalProtocol4HKDFV15chainAndRootKey8material4salt4infoAA07RatchetfG0V04rootG0_AA0k5ChainG0V0dG0t10Foundation4DataV_A2PtKFZ":{"name":"chainAndRootKey(material:salt:info:)","abstract":"<p>Create a new chain key and root key.</p>","parent_name":"HKDF"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV9macLengthSivpZ":{"name":"macLength","abstract":"<p>The length of the MAC for a message in bytes</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV16senderRatchetKeyAA06PublicF0Vvp":{"name":"senderRatchetKey","abstract":"<p>The public key of the sending ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV7counters6UInt32Vvp":{"name":"counter","abstract":"<p>The current counter of the ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV15previousCounters6UInt32Vvp":{"name":"previousCounter","abstract":"<p>The counter of the previous ratchet</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV10cipherText10Foundation4DataVvp":{"name":"cipherText","abstract":"<p>The encrypted text</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV3mac10Foundation4DataVvp":{"name":"mac","abstract":"<p>The mac of the message</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV6macKey013senderRatchetE07counter15previousCounter10cipherText0f8IdentityE008receivermE0AC10Foundation4DataV_AA06PublicE0Vs6UInt32VAqm2OtKcfc":{"name":"init(macKey:senderRatchetKey:counter:previousCounter:cipherText:senderIdentityKey:receiverIdentityKey:)","abstract":"<p>Create a SignalMessage from its components.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV6getMac33_029A73FDA84781D7F94A8B7C987F870FLL17senderIdentityKey08receiveroP003macP07message10Foundation4DataVAA06PublicP0V_An2LtKF":{"name":"getMac(senderIdentityKey:receiverIdentityKey:macKey:message:)","abstract":"<p>Calculate the MAC of the message. The length of the MAC is specified by <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignalMessage.html#/s:14SignalProtocol0A7MessageV9macLengthSivpZ\">SignalMessage.macLength</a></code></p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV9verifyMac17senderIdentityKey08receivergH003macH0SbAA06PublicH0V_AI10Foundation4DataVtKF":{"name":"verifyMac(senderIdentityKey:receiverIdentityKey:macKey:)","abstract":"<p>Verify the MAC of the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV04baseC0AA010CipherTextC0VyKF":{"name":"baseMessage()","abstract":"<p>Return the serialized version of the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV11protoObjectAA0a1_aC0Vvp":{"name":"protoObject","abstract":"<p>Convert signal message to a ProtoBuf object</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV4fromAcA0a1_aC0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signal message from a ProtoBuf object.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV9protoData10Foundation0E0VyKF":{"name":"protoData()","abstract":"<p>Serialize the message.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV4fromAC10Foundation4DataV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a signal message from serialized data.</p>","parent_name":"SignalMessage"},"Structs/SignalMessage.html#/s:14SignalProtocol0A7MessageV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two SignalMessages for equality.</p>","parent_name":"SignalMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV5keyIds6UInt32Vvp":{"name":"keyId","abstract":"<p>The id of the key that was used</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV9iterations6UInt32Vvp":{"name":"iteration","abstract":"<p>The iteration of the chain key</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV10cipherText10Foundation4DataVvp":{"name":"cipherText","abstract":"<p>The encrypted ciphertext</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV9signature10Foundation4DataVvp":{"name":"signature","abstract":"<p>The signature of the message</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV04baseE0AA010CipherTextE0VyKF":{"name":"baseMessage()","abstract":"<p>Return the message serialized</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV5keyId9iteration10cipherText09signatureD0ACs6UInt32V_AI10Foundation4DataVAA07PrivateD0VtKcfc":{"name":"init(keyId:iteration:cipherText:signatureKey:)","abstract":"<p>Create a <code>SenderKeyMessage</code> from the components.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV6verify09signatureD0SbAA06PublicD0V_tKF":{"name":"verify(signatureKey:)","abstract":"<p>Verify that the signature matches the message.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV11protoObjectAA0a1_cdE0Vvp":{"name":"protoObject","abstract":"<p>Convert the sender key message to a ProtoBuf object</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV4fromAcA0a1_cdE0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a sender key message from a ProtoBuf object.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV9protoData10Foundation0G0VyKF":{"name":"protoData()","abstract":"<p>Serialize the message.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyMessage.html#/s:14SignalProtocol16SenderKeyMessageV4fromAC10Foundation4DataV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a sender key message from serialized data.</p>","parent_name":"SenderKeyMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV2ids6UInt32Vvp":{"name":"id","abstract":"<p>The id of the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV9iterations6UInt32Vvp":{"name":"iteration","abstract":"<p>The current chain iteration of the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV05chainD010Foundation4DataVvp":{"name":"chainKey","abstract":"<p>The chain key used for the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV09signatureD0AA06PublicD0Vvp":{"name":"signatureKey","abstract":"<p>The signature key used for signing the message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV04baseF0AA010CipherTextF0VyKF":{"name":"baseMessage()","abstract":"<p>Create a serialized message from the distribution message</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV2id9iteration05chainD009signatureD0ACs6UInt32V_AI10Foundation4DataVAA06PublicD0Vtcfc":{"name":"init(id:iteration:chainKey:signatureKey:)","abstract":"<p>Create a distribution message.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two distribution messages.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV11protoObjectAA0a1_cdeF0Vvp":{"name":"protoObject","abstract":"<p>Convert the distribution message to a ProtoBuf object</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/SenderKeyDistributionMessage.html#/s:14SignalProtocol28SenderKeyDistributionMessageV4fromAcA0a1_cdeF0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a distribution message from a ProtoBuf object.</p>","parent_name":"SenderKeyDistributionMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV03preD2Ids6UInt32VSgvp":{"name":"preKeyId","abstract":"<p>The pre key id of the one time key from the other party</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV06signedcD2Ids6UInt32Vvp":{"name":"signedPreKeyId","abstract":"<p>The id of the signed pre key used for the message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV04baseD0AA06PublicD0Vvp":{"name":"baseKey","abstract":"<p>The base key used for the message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV08identityD0AA06PublicD0Vvp":{"name":"identityKey","abstract":"<p>The identity key of the sender</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV7messageAA0aE0Vvp":{"name":"message","abstract":"<p>The message included in the pre key message</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV03preD2Id06signedcdG004baseD008identityD07messageACs6UInt32VSg_AjA06PublicD0VAmA0aE0Vtcfc":{"name":"init(preKeyId:signedPreKeyId:baseKey:identityKey:message:)","abstract":"<p>Create a new pre key message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV04baseE0AA010CipherTextE0VyKF":{"name":"baseMessage()","abstract":"<p>Get the serialized message.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV13asProtoObjectAA0a1_cdaE0VyKF":{"name":"asProtoObject()","abstract":"<p>Convert the message to a ProtoBuf object for serialization.</p>","parent_name":"PreKeySignalMessage"},"Structs/PreKeySignalMessage.html#/s:14SignalProtocol06PreKeyA7MessageV4fromAcA0a1_cdaE0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a <code>PreKeySignalMessage</code> from a ProtoBuf object.</p>","parent_name":"PreKeySignalMessage"},"Structs/CipherTextMessage.html#/s:14SignalProtocol17CipherTextMessageV4typeAA0cD4TypeOvp":{"name":"type","abstract":"<p>The type of the message</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:14SignalProtocol17CipherTextMessageV4data10Foundation4DataVvp":{"name":"data","abstract":"<p>The encrypted message</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:14SignalProtocol17CipherTextMessageV4type4dataAcA0cD4TypeO_10Foundation4DataVtcfc":{"name":"init(type:data:)","abstract":"<p>Create a message from the components.</p>","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:14SignalProtocol0B18BufferSerializableP9protoData10Foundation0F0VyKF":{"name":"protoData()","parent_name":"CipherTextMessage"},"Structs/CipherTextMessage.html#/s:14SignalProtocol17CipherTextMessageV4fromAC10Foundation4DataV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a <code>CipherTextMessage</code> from a serialized record.</p>","parent_name":"CipherTextMessage"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV6length33_8480E35E3770D66B8096103692517741LLSivpZ":{"name":"length","abstract":"<p>The length of a fingerprint</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV7version33_8480E35E3770D66B8096103692517741LLs6UInt32VvpZ":{"name":"version","abstract":"<p>The version of the fingerprint</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV05localD010Foundation4DataVvp":{"name":"localFingerprint","abstract":"<p>The fingerprint data of the local party</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV06remoteD010Foundation4DataVvp":{"name":"remoteFingerprint","abstract":"<p>The fingerprint data of the remote party</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV05localD006remoteD0AC10Foundation4DataV_AHtKcfc":{"name":"init(localFingerprint:remoteFingerprint:)","abstract":"<p>Create a new ScannableFingerprint Version 1.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV4fromAcA0a1_D0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a fingerprint from a ProtoBuf object.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV11protoObjectAA0a1_D0Vvp":{"name":"protoObject","abstract":"<p>The fingerprint converted to a ProtoBuf object</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV7matchesySbACF":{"name":"matches(_:)","abstract":"<p>Compare if fingerprints match, i.e. the local fingerprint matches the remote fingerprint and vice versa.</p>","parent_name":"ScannableFingerprint"},"Structs/ScannableFingerprint.html#/s:14SignalProtocol20ScannableFingerprintV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two Fingerprints for equality.</p>","parent_name":"ScannableFingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV7versions5UInt8VvpZ":{"name":"version","abstract":"<p>The version of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV6lengthSivpZ":{"name":"length","abstract":"<p>The length of a fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV10iterationsSivpZ":{"name":"iterations","abstract":"<p>The number of iterations for the creation of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV11displayableAA011DisplayableC0Vvp":{"name":"displayable","abstract":"<p>The displayable part of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV9scannableAA09ScannableC0Vvp":{"name":"scannable","abstract":"<p>The scannable part of the fingerprint</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV11displayTextSSvp":{"name":"displayText","abstract":"<p>The string to show the user</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV21localStableIdentifier0D8Identity06remoteeF00hG010iterationsACSS_10Foundation4DataVSSAKSitKcfc":{"name":"init(localStableIdentifier:localIdentity:remoteStableIdentifier:remoteIdentity:iterations:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV21localStableIdentifier0D8Identity06remoteeF00hG010iterationsACSS_AA9PublicKeyVSSAJSitKcfc":{"name":"init(localStableIdentifier:localIdentity:remoteStableIdentifier:remoteIdentity:iterations:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV21localStableIdentifier0D12IdentityList06remoteeF00igH010iterationsACSS_SayAA9PublicKeyVGSSAKSitKcfc":{"name":"init(localStableIdentifier:localIdentityList:remoteStableIdentifier:remoteIdentityList:iterations:)","abstract":"<p>Create a new fingerprint.</p>","parent_name":"Fingerprint"},"Structs/Fingerprint.html#/s:14SignalProtocol11FingerprintV7matchesySb10Foundation4DataVKF":{"name":"matches(_:)","abstract":"<p>Compare the fingerprint to scanned fingerprint data.</p>","parent_name":"Fingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV5localSSvp":{"name":"local","abstract":"<p>Fingerprint String of the local device</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV6remoteSSvp":{"name":"remote","abstract":"<p>Fingerprint String of the remote device</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV11displayTextSSvp":{"name":"displayText","abstract":"<p>Displaytext</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV5local6remoteACSS_SStcfc":{"name":"init(local:remote:)","abstract":"<p>Create a displayable fingerprint from local and remote fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV05localD006remoteD0AC10Foundation4DataV_AHtKcfc":{"name":"init(localFingerprint:remoteFingerprint:)","abstract":"<p>Create a displayable fingerprint from local and remote fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV19createDisplayString33_5406B071AF8426B4ED357E949299C61ELL11fingerprintSS10Foundation4DataV_tFZ":{"name":"createDisplayString(fingerprint:)","abstract":"<p>Create a display string from fingerprint data.</p>","parent_name":"DisplayableFingerprint"},"Structs/DisplayableFingerprint.html#/s:14SignalProtocol22DisplayableFingerprintV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two displayable fingerprints for equality.</p>","parent_name":"DisplayableFingerprint"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV8providerAA0aC8Provider_pvpZ":{"name":"provider","abstract":"<p>This variable can be set to provide a custom crypto provider.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV6random5bytes10Foundation4DataVSi_tKFZ":{"name":"random(bytes:)","abstract":"<p>Create a number of secure random bytes.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV10hmacSHA2563for4with10Foundation4DataVAI_AItKFZ":{"name":"hmacSHA256(for:with:)","abstract":"<p>Authenticate a message with the HMAC based on SHA256.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV6sha5123for10Foundation4DataVAH_tKFZ":{"name":"sha512(for:)","abstract":"<p>Return the SHA512 message digest.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV7encrypt7message4with3key2iv10Foundation4DataVAK_AA0A16EncryptionSchemeOA2KtKFZ":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with the given scheme.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV7decrypt7message4with3key2iv10Foundation4DataVAK_AA0A16EncryptionSchemeOA2KtKFZ":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with the given scheme.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV23generateIdentityKeyPair10Foundation4DataVyKFZ":{"name":"generateIdentityKeyPair()","abstract":"<p>Generate an identity key pair.  Clients should only do this once, at install time.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV15generatePreKeys5start5countSayAA07SessionE3KeyVGs6UInt32V_SitKFZ":{"name":"generatePreKeys(start:count:)","abstract":"<p>Generate a list of PreKeys.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV20generateSignedPreKey08identityG02id9timestampAA07SessionefG0VAA07PrivateG0V_s6UInt32Vs6UInt64VtKFZ":{"name":"generateSignedPreKey(identityKey:id:timestamp:)","abstract":"<p>Generate a signed pre key.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV19generateSenderKeyIds6UInt32VyKFZ":{"name":"generateSenderKeyId()","abstract":"<p>Generate a sender key ID.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV17generateSenderKey10Foundation4DataVyKFZ":{"name":"generateSenderKey()","abstract":"<p>Generate a sender key.</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoV24generateSenderSigningKeyAA0G4PairVyKFZ":{"name":"generateSenderSigningKey()","abstract":"<p>Generate a sender signing key pair</p>","parent_name":"SignalCrypto"},"Structs/SignalCrypto.html#/s:14SignalProtocol0A6CryptoVACyc33_D8858E66F8480749A0F433B505F180AFLlfc":{"name":"init()","abstract":"<p>SignalCrypto only has static functions and there is no need to create any instances</p>","parent_name":"SignalCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV6random5bytes10Foundation4DataVSi_tKF":{"name":"random(bytes:)","abstract":"<p>Create a number of random bytes</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV10hmacSHA2563for4with10Foundation4DataVAI_AItF":{"name":"hmacSHA256(for:with:)","abstract":"<p>Create a HMAC authentication for a given message</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV6sha5123for10Foundation4DataVAH_tKF":{"name":"sha512(for:)","abstract":"<p>Create a SHA512 digest for a given message</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7encrypt7message4with3key2iv10Foundation4DataVAK_AA0A16EncryptionSchemeOA2KtKF":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with AES</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7decrypt7message4with3key2iv10Foundation4DataVAK_AA0A16EncryptionSchemeOA2KtKF":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with AES</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7process33_D160775F74C6E7CFC24EE3D0CD6C233BLL3cbc3key2iv7encrypt10Foundation4DataVAL_A2LSbtKF":{"name":"process(cbc:key:iv:encrypt:)","abstract":"<p>Process (encrypt/decrypt) a message with AES in CBC mode and pkcs7 padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7encrypt33_D160775F74C6E7CFC24EE3D0CD6C233BLL3ctr3key2iv10Foundation4DataVAK_A2KtKF":{"name":"encrypt(ctr:key:iv:)","abstract":"<p>Encrypt a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7decrypt33_D160775F74C6E7CFC24EE3D0CD6C233BLL3ctr3key2iv10Foundation4DataVAK_A2KtKF":{"name":"decrypt(ctr:key:iv:)","abstract":"<p>Decrypt a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7process33_D160775F74C6E7CFC24EE3D0CD6C233BLL3ctr3key2iv7encrypt10Foundation4DataVAL_A2LSbtKF":{"name":"process(ctr:key:iv:encrypt:)","abstract":"<p>Process (encrypt/decrypt) a message with AES in CTR mode and no padding.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoV7toArray33_D160775F74C6E7CFC24EE3D0CD6C233BLL4from5count10Foundation4DataVSv_SitF":{"name":"toArray(from:count:)","abstract":"<p>Create an array from an unsafe pointer.</p>","parent_name":"SignalCommonCrypto"},"Structs/SignalCommonCrypto.html#/s:14SignalProtocol0A12CommonCryptoVACycfc":{"name":"init()","abstract":"<p>Create an instance.</p>","parent_name":"SignalCommonCrypto"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV5store33_A7B7CE7E72D1FD6B1E024448F80198D3LLxvp":{"name":"store","abstract":"<p>The local data store to use for state information</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV13remoteAddress33_A7B7CE7E72D1FD6B1E024448F80198D3LL0F0Qzvp":{"name":"remoteAddress","abstract":"<p>The address of the remote party</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV5store13remoteAddressACyxGx_0G0Qztcfc":{"name":"init(store:remoteAddress:)","abstract":"<p>Construct a session cipher for encrypt/decrypt operations on a session.","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7encryptyAA0D11TextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7decrypty10Foundation4DataVAA0D11TextMessageVKF":{"name":"decrypt(_:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7decrypt06preKeyA7Message10Foundation4DataVAA03PregaH0V_tKF":{"name":"decrypt(preKeySignalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7decrypt13signalMessage10Foundation4DataVAA0aG0V_tKF":{"name":"decrypt(signalMessage:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7process12preKeyBundleyAA0c3PregH0V_tKF":{"name":"process(preKeyBundle:)","abstract":"<p>Build a new session from a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SessionPreKeyBundle.html\">SessionPreKeyBundle</a></code> retrieved from a server.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV04loadC033_A7B7CE7E72D1FD6B1E024448F80198D3LLAA0C6RecordCyKF":{"name":"loadSession()","abstract":"<p>Load the session record for the remote address</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7decrypt33_A7B7CE7E72D1FD6B1E024448F80198D3LL4from3and10Foundation4DataVAA0C6RecordC_AA0A7MessageVtKF":{"name":"decrypt(from:and:)","abstract":"<p>Try to decrypt a SignalMessage with one of the stored sessions in the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SessionRecord.html\">SessionRecord</a></code>. If a session can decrypt the message it will be promoted to the active session.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV7decrypt33_A7B7CE7E72D1FD6B1E024448F80198D3LL4from3and10Foundation4DataVAA0C5StateC_AA0A7MessageVtKF":{"name":"decrypt(from:and:)","abstract":"<p>Try to decrypt a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SignalMessage.html\">SignalMessage</a></code> with a specific <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SessionState.html\">SessionState</a></code>.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV22getOrCreateMessageKeys33_A7B7CE7E72D1FD6B1E024448F80198D3LL5state14theirEphemeral8chainKey7counterAA07RatchethI0VAA0C5StateC_AA06PublicX0VAA0z5ChainX0Vs6UInt32VtKF":{"name":"getOrCreateMessageKeys(state:theirEphemeral:chainKey:counter:)","abstract":"<p>Retrieve previously stored message keys or create them from the chain.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV19getOrCreateChainKey33_A7B7CE7E72D1FD6B1E024448F80198D3LL5state14theirEphemeralAA07RatchethI0VAA0C5StateC_AA06PublicI0VtKF":{"name":"getOrCreateChainKey(state:theirEphemeral:)","abstract":"<p>Retrieve the chain key for a state and receiver chain key.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV13getCiphertext33_A7B7CE7E72D1FD6B1E024448F80198D3LL11messageKeys9plaintext10Foundation4DataVAA014RatchetMessageR0V_AJtKF":{"name":"getCiphertext(messageKeys:plaintext:)","abstract":"<p>Encrypt a message.</p>","parent_name":"SessionCipher"},"Structs/SessionCipher.html#/s:14SignalProtocol13SessionCipherV12getPlaintext33_A7B7CE7E72D1FD6B1E024448F80198D3LL11messageKeys10ciphertext10Foundation4DataVAA014RatchetMessageR0V_AJtKF":{"name":"getPlaintext(messageKeys:ciphertext:)","abstract":"<p>Decrypt a message.</p>","parent_name":"SessionCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV5store33_94F9BD28C9BD72E9FE0B54ABE293B8F7LLxvp":{"name":"store","abstract":"<p>The store where the keys are stored</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV7address33_94F9BD28C9BD72E9FE0B54ABE293B8F7LL0C7AddressQzvp":{"name":"address","abstract":"<p>The id of the remote client</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV7address5storeACyxG0C7AddressQz_xtcfc":{"name":"init(address:store:)","abstract":"<p>Create a GroupCipher.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV7process7messageyAA0D11TextMessageV_tKF":{"name":"process(message:)","abstract":"<p>Create a GroupCipher.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV7process19distributionMessageyAA021SenderKeyDistributionG0V_tKF":{"name":"process(distributionMessage:)","abstract":"<p>Create a new group session from a distribution message.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV13createSessionAA28SenderKeyDistributionMessageVyKF":{"name":"createSession()","abstract":"<p>Create a new session and generate a distribution message.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV7encryptyAA0D11TextMessageV10Foundation4DataVKF":{"name":"encrypt(_:)","abstract":"<p>Encrypt a message for the recipient.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV7decrypt10ciphertext10Foundation4DataVAA16SenderKeyMessageV_tKF":{"name":"decrypt(ciphertext:)","abstract":"<p>Decrypt a message from the group member.</p>","parent_name":"GroupCipher"},"Structs/GroupCipher.html#/s:14SignalProtocol11GroupCipherV10loadRecord33_94F9BD28C9BD72E9FE0B54ABE293B8F7LLAA09SenderKeyF0CyKF":{"name":"loadRecord()","abstract":"<p>Load the record for the remote address.</p>","parent_name":"GroupCipher"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV9basePoint33_D890EBC7B14EC8921E94EF9CF1CD25DALL10Foundation4DataVvpZ":{"name":"basePoint","abstract":"<p>The base point for the Curve25519 elliptic curve</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV3key33_D890EBC7B14EC8921E94EF9CF1CD25DALL10Foundation4DataVvp":{"name":"key","abstract":"<p>The key material of length <code>KeyPair.keyLength</code></p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV5pointAC10Foundation4DataV_tKcfc":{"name":"init(point:)","abstract":"<p>Create a public key from a UInt8 array. Checks","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV07privateD0AcA07PrivateD0V_tKcfc":{"name":"init(privateKey:)","abstract":"<p>Generate a public key from a given private key.","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV6verify9signature3forSb10Foundation4DataV_AItF":{"name":"verify(signature:for:)","abstract":"<p>Verify that the signature corresponds to the message.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV6verify12vrfSignature3for10Foundation4DataVAI_AItKF":{"name":"verify(vrfSignature:for:)","abstract":"<p>Verify that the vrf signature corresponds to the message.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV18calculateAgreement07privateD010Foundation4DataVAA07PrivateD0V_tKF":{"name":"calculateAgreement(privateKey:)","abstract":"<p>Calculate the shared agreement between the given private key and the public key.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two public keys.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two public keys for equality. The keys are equal if all bytes match.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV4data10Foundation4DataVvp":{"name":"data","abstract":"<p>The serialized data of the public key</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV4fromAC10Foundation4DataV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a public key from a serialized record.</p>","parent_name":"PublicKey"},"Structs/PublicKey.html#/s:14SignalProtocol9PublicKeyV9protoData10Foundation0F0VyF":{"name":"protoData()","abstract":"<p>Return a byte representation of the public key</p>","parent_name":"PublicKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV3key33_6DE970A10F344CCAE8E0727C84D53C06LL10Foundation4DataVvp":{"name":"key","abstract":"<p>The key material of length <code>KeyPair.keyLength</code></p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV5pointAC10Foundation4DataV_tKcfc":{"name":"init(point:)","abstract":"<p>Create a private key from a curve point.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV15unverifiedPointAC10Foundation4DataV_tKcfc":{"name":"init(unverifiedPoint:)","abstract":"<p>Create a private key. Only checks the length, nothing else.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyVACyKcfc":{"name":"init()","abstract":"<p>Create a new random private key.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV4sign7message10Foundation4DataVAH_tKF":{"name":"sign(message:)","abstract":"<p>Calculate the signature for the given message.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV7signVRF7message10Foundation4DataVAH_tKF":{"name":"signVRF(message:)","abstract":"<p>Calculates a unique Curve25519 signature for the private key</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV18calculateAgreement06publicD010Foundation4DataVAA06PublicD0V_tKF":{"name":"calculateAgreement(publicKey:)","abstract":"<p>Calculate the shared agreement between the private key and the given public key.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV4data10Foundation4DataVvp":{"name":"data","abstract":"<p>The serialized data of the private key</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV7keyPairAA0dF0VyKF":{"name":"keyPair()","abstract":"<p>Create the corresponding key pair for the private key</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV06publicD0AA06PublicD0VyKF":{"name":"publicKey()","abstract":"<p>Create the corresponding public key for the private key</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two private keys for equality.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV4fromAC10Foundation4DataV_tKcfc":{"name":"init(from:)","abstract":"<p>Create a private key from a byte record.</p>","parent_name":"PrivateKey"},"Structs/PrivateKey.html#/s:14SignalProtocol10PrivateKeyV9protoData10Foundation0F0VyF":{"name":"protoData()","abstract":"<p>Convert the key to serialized data</p>","parent_name":"PrivateKey"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV7DJBTypes5UInt8VvpZ":{"name":"DJBType","abstract":"<p>Type declaration (only needed for compatibility)</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV06publicC0AA06PublicC0Vvp":{"name":"publicKey","abstract":"<p>The public part of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV07privateC0AA07PrivateC0Vvp":{"name":"privateKey","abstract":"<p>The private part of the key pair</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV06publicC007privateC0AcA06PublicC0V_AA07PrivateC0Vtcfc":{"name":"init(publicKey:privateKey:)","abstract":"<p>Create a key pair from existing public and private keys</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV07privateC0AcA07PrivateC0V_tKcfc":{"name":"init(privateKey:)","abstract":"<p>Create a key pair from existing public and private keys</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairVACyKcfc":{"name":"init()","abstract":"<p>Create a new random key pair.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV4sign7message10Foundation4DataVAH_tKF":{"name":"sign(message:)","abstract":"<p>Calculate the signature for the given message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV7signVRF7message10Foundation4DataVAH_tKF":{"name":"signVRF(message:)","abstract":"<p>Calculates a unique Curve25519 signature for the private key</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV18calculateAgreement06publicC010Foundation4DataVAA06PublicC0V_tKF":{"name":"calculateAgreement(publicKey:)","abstract":"<p>Calculate the shared agreement between the private key and the given public key.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV6verify9signature3forSb10Foundation4DataV_AItF":{"name":"verify(signature:for:)","abstract":"<p>Verify that the signature corresponds to the message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV6verify12vrfSignature3for10Foundation4DataVAI_AItKF":{"name":"verify(vrfSignature:for:)","abstract":"<p>Verify that the vrf signature corresponds to the message.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV18calculateAgreement07privateC010Foundation4DataVAA07PrivateC0V_tKF":{"name":"calculateAgreement(privateKey:)","abstract":"<p>Calculate the shared agreement between the given private key and the public key.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV4fromAcA0a1_cD0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a key pair from a protobuf object.</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV11protoObjectAA0a1_cD0Vvp":{"name":"protoObject","abstract":"<p>The key pair converted to a ProtoBuf object</p>","parent_name":"KeyPair"},"Structs/KeyPair.html#/s:14SignalProtocol7KeyPairV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two key pairs for equality. The keys are equal if public and private keys match.</p>","parent_name":"KeyPair"},"Structs/DeviceConsistencySignature.html#/s:14SignalProtocol26DeviceConsistencySignatureV9signature10Foundation4DataVvp":{"name":"signature","abstract":"<p>The signature data</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:14SignalProtocol26DeviceConsistencySignatureV9vrfOutput10Foundation4DataVvp":{"name":"vrfOutput","abstract":"<p>The output of the VRF verification</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:14SignalProtocol26DeviceConsistencySignatureV9signature9vrfOutputAC10Foundation4DataV_AHtcfc":{"name":"init(signature:vrfOutput:)","abstract":"<p>Create a new signature</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:14SignalProtocol26DeviceConsistencySignatureV1loiySbAC_ACtFZ":{"name":"<(_:_:)","abstract":"<p>Compare two consistency signatures.</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencySignature.html#/s:14SignalProtocol26DeviceConsistencySignatureV2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two consistency signatures for equality.</p>","parent_name":"DeviceConsistencySignature"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV9signatureAA0cD9SignatureVvp":{"name":"signature","abstract":"<p>The consistency signature</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV10generations6UInt32Vvp":{"name":"generation","abstract":"<p>The generation of the consistency message</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV10commitment15identitykeyPairAcA0cD12CommitmentV0V_AA03KeyH0VtKcfc":{"name":"init(commitment:identitykeyPair:)","abstract":"<p>Create a new consistency message.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV6objectAA0a1_cd4CodeE0Vvp":{"name":"object","abstract":"<p>The message converted to a protocol buffer object.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV4from10commitment11identityKeyAcA0a1_cd4CodeE0V_AA0cD12CommitmentV0VAA06PublicI0VtKcfc":{"name":"init(from:commitment:identityKey:)","abstract":"<p>Create a consistency message from a protocol buffer object.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV4data10Foundation4DataVyKF":{"name":"data()","abstract":"<p>The message serialized through a protocol buffer.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyMessage.html#/s:14SignalProtocol24DeviceConsistencyMessageV4from10commitment11identityKeyAC10Foundation4DataV_AA0cD12CommitmentV0VAA06PublicI0VtKcfc":{"name":"init(from:commitment:identityKey:)","abstract":"<p>Create a consistency message from a serialized protocol buffer record.</p>","parent_name":"DeviceConsistencyMessage"},"Structs/DeviceConsistencyCommitmentV0.html#/s:14SignalProtocol29DeviceConsistencyCommitmentV0V11codeVersion33_95297B804ED5EE9BFD74276EA1A50623LLs6UInt16VvpZ":{"name":"codeVersion","abstract":"<p>The version of the consistency implementation</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:14SignalProtocol29DeviceConsistencyCommitmentV0V7version33_95297B804ED5EE9BFD74276EA1A50623LL10Foundation4DataVvpZ":{"name":"version","abstract":"<p>An identifier used when hashing the identity keys</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:14SignalProtocol29DeviceConsistencyCommitmentV0V10generations6UInt32Vvp":{"name":"generation","abstract":"<p>The generation of the message</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:14SignalProtocol29DeviceConsistencyCommitmentV0V10serialized10Foundation4DataVvp":{"name":"serialized","abstract":"<p>The hash of the public keys</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:14SignalProtocol29DeviceConsistencyCommitmentV0V10generation15identityKeyListACs6UInt32V_SayAA06PublicI0VGtKcfc":{"name":"init(generation:identityKeyList:)","abstract":"<p>Create a new commitment.</p>","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html#/s:14SignalProtocol29DeviceConsistencyCommitmentV0V12generateCode3forSSSayAA0cD9SignatureVG_tKF":{"name":"generateCode(for:)","abstract":"<p>Generate a String which can be used to compare the consistency across multiple devices.","parent_name":"DeviceConsistencyCommitmentV0"},"Structs/DeviceConsistencyCommitmentV0.html":{"name":"DeviceConsistencyCommitmentV0","abstract":"<p>Create commitments that are hashes of the identity keys of different devices."},"Structs/DeviceConsistencyMessage.html":{"name":"DeviceConsistencyMessage","abstract":"<p>Device consistency messages can be sent between multiple devices to verify that the"},"Structs/DeviceConsistencySignature.html":{"name":"DeviceConsistencySignature","abstract":"<p>A signature used for device consistency checks</p>"},"Structs/KeyPair.html":{"name":"KeyPair","abstract":"<p>A pair of public and private key for elliptic curve cryptopgraphy</p>"},"Structs/PrivateKey.html":{"name":"PrivateKey","abstract":"<p>The private part of an elliptic curve key pair."},"Structs/PublicKey.html":{"name":"PublicKey","abstract":"<p>The public part of an elliptic curve key pair."},"Structs/GroupCipher.html":{"name":"GroupCipher","abstract":"<p>Use a <code>GroupCipher</code> to encrypt and decrypt group messages for already"},"Structs/SessionCipher.html":{"name":"SessionCipher","abstract":"<p>The main entry point for Signal Protocol encrypt/decrypt operations.</p>"},"Structs/SignalCommonCrypto.html":{"name":"SignalCommonCrypto","abstract":"<p>Implementation of the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/SignalCryptoProvider.html\">SignalCryptoProvider</a></code> protocol using"},"Structs/SignalCrypto.html":{"name":"SignalCrypto","abstract":"<p>The <code>SignalCrypto</code> struct exposes all necessary cryptocraphic functions to the protocol."},"Structs/DisplayableFingerprint.html":{"name":"DisplayableFingerprint","abstract":"<p>A Fingerprint to verify the keys specifically for displaying to the user</p>"},"Structs/Fingerprint.html":{"name":"Fingerprint","abstract":"<p>A fingerprint can be used to ensure that the identities of a communication channel"},"Structs/ScannableFingerprint.html":{"name":"ScannableFingerprint","abstract":"<p>A fingerprint optimised to be scanned through e.g. a QR Code</p>"},"Structs/CipherTextMessage.html":{"name":"CipherTextMessage","abstract":"<p>A <code>CipherTextMessage</code> encapsulates an encrypted message and the type-</p>"},"Structs/PreKeySignalMessage.html":{"name":"PreKeySignalMessage","abstract":"<p>A <code>PreKeySignalMessage</code> can be used to establish a new session.</p>"},"Structs/SenderKeyDistributionMessage.html":{"name":"SenderKeyDistributionMessage","abstract":"<p><code>SenderKeyDistributionMessage</code>s are used to establish group sessions.</p>"},"Structs/SenderKeyMessage.html":{"name":"SenderKeyMessage","abstract":"<p>A sender key message is used to send an encrypted message in an existing group session.</p>"},"Structs/SignalMessage.html":{"name":"SignalMessage","abstract":"<p>A <code>SignalMessage</code> is used to send an encrypted message in an established session.</p>"},"Structs/HKDF.html":{"name":"HKDF","abstract":"<p>The Key derivation function used for the Ratchet.</p>"},"Structs/RatchetChainKey.html":{"name":"RatchetChainKey","abstract":"<p>A chain key for the ratchet.</p>"},"Structs/RatchetMessageKeys.html":{"name":"RatchetMessageKeys","abstract":"<p>The keys needed to encrypt/decrypt a message</p>"},"Structs/RatchetRootKey.html":{"name":"RatchetRootKey","abstract":"<p>A root key is within a ratchet to derive new sender and receiver chain keys.</p>"},"Structs/SenderChain.html":{"name":"SenderChain","abstract":"<p>The sender chain of a ratchet used to encrypt messages for sending.</p>"},"Structs/SenderChainKey.html":{"name":"SenderChainKey","abstract":"<p>A key in the sender chain.</p>"},"Structs/SenderMessageKey.html":{"name":"SenderMessageKey","abstract":"<p>A message key in a chain to encrypt/decrypt messages</p>"},"Structs/PendingPreKey.html":{"name":"PendingPreKey","abstract":"<p>A pre key sent out as a pre key message, until a message is received from the other party</p>"},"Structs/SessionBuilder.html":{"name":"SessionBuilder","abstract":"<p>Session builder is responsible for setting up encrypted sessions."},"Structs/SessionPreKey.html":{"name":"SessionPreKey","abstract":"<p>A pre key used to esatblish a session. A unique pre key is used for"},"Structs/SessionPreKeyBundle.html":{"name":"SessionPreKeyBundle","abstract":"<p>Pre key bundles are used to establish new sessions.</p>"},"Structs/SessionPreKeyPublic.html":{"name":"SessionPreKeyPublic","abstract":"<p>A pre key used to esatblish a session. A unique pre key is used for"},"Structs/SessionSignedPreKey.html":{"name":"SessionSignedPreKey","abstract":"<p>A signed pre key is used as part of a session bundle to establish a new session."},"Structs/SessionSignedPreKeyPublic.html":{"name":"SessionSignedPreKeyPublic","abstract":"<p>A public signed pre key is used as part of a session bundle to establish a new session."},"Structs/SymmetricParameters.html":{"name":"SymmetricParameters","abstract":"<p>All parameters needed to establish a session</p>"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP06signeddE03for10Foundation4DataVs6UInt32V_tKF":{"name":"signedPreKey(for:)","abstract":"<p>Provide a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP5store06signeddE03fory10Foundation4DataV_s6UInt32VtKF":{"name":"store(signedPreKey:for:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP08containscdE03forSbs6UInt32V_tKF":{"name":"containsSignedPreKey(for:)","abstract":"<p>Indicate if a Signed Pre Key exists for an id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP06removecdE03forys6UInt32V_tKF":{"name":"removeSignedPreKey(for:)","abstract":"<p>Remove a Signed Pre Key.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP6allIdsSays6UInt32VGyKF":{"name":"allIds()","abstract":"<p>Get all Ids for the SignedPreKeys in the store.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStoreP6lastIds6UInt32Vvp":{"name":"lastId","abstract":"<p>The id of the last SignedPreKey that was stored.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SignedPreKeyStore.html#/s:14SignalProtocol17SignedPreKeyStorePAAE5store06signeddE0yAA07SessioncdE0V_tKF":{"name":"store(signedPreKey:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP7AddressQa":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP04loadC03for10Foundation4DataVSg7AddressQz_tKF":{"name":"loadSession(for:)","abstract":"<p>Load a session for a given address.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP5store7session3fory10Foundation4DataV_7AddressQztKF":{"name":"store(session:for:)","abstract":"<p>Store a session record for a remote client.</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP08containsC03forSb7AddressQz_tF":{"name":"containsSession(for:)","abstract":"<p>Indicate if a record exists for the client address</p>","parent_name":"SessionStore"},"Protocols/SessionStore.html#/s:14SignalProtocol12SessionStoreP06deleteC03fory7AddressQz_tKF":{"name":"deleteSession(for:)","abstract":"<p>Delete a session for a remote client.</p>","parent_name":"SessionStore"},"Protocols/SenderKeyStore.html#/s:14SignalProtocol14SenderKeyStoreP7AddressQa":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"SenderKeyStore"},"Protocols/SenderKeyStore.html#/s:14SignalProtocol14SenderKeyStoreP06senderD03for10Foundation4DataVSg7AddressQz_tF":{"name":"senderKey(for:)","abstract":"<p>Returns a copy of the sender key record corresponding to the address tuple.</p>","parent_name":"SenderKeyStore"},"Protocols/SenderKeyStore.html#/s:14SignalProtocol14SenderKeyStoreP5store06senderD03fory10Foundation4DataV_7AddressQztKF":{"name":"store(senderKey:for:)","abstract":"<p>Stores the sender key record.</p>","parent_name":"SenderKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP03preD03for10Foundation4DataVs6UInt32V_tKF":{"name":"preKey(for:)","abstract":"<p>Provide a Pre Key for a given id.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP5store03preD03fory10Foundation4DataV_s6UInt32VtKF":{"name":"store(preKey:for:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP08containscD03forSbs6UInt32V_tF":{"name":"containsPreKey(for:)","abstract":"<p>Indicate if a pre key exists for an id.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP06removecD03forys6UInt32V_tKF":{"name":"removePreKey(for:)","abstract":"<p>Remove a pre key.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStoreP6lastIds6UInt32Vvp":{"name":"lastId","abstract":"<p>Return the id of the last stored pre key.</p>","parent_name":"PreKeyStore"},"Protocols/PreKeyStore.html#/s:14SignalProtocol11PreKeyStorePAAE5store03preD0yAA07SessioncD0V_tKF":{"name":"store(preKey:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP7AddressQa":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP08IdentitycD4TypeQa":{"name":"IdentityKeyStoreType","abstract":"<p>The type of the identity key store</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP07SessionD4TypeQa":{"name":"SessionStoreType","abstract":"<p>The type of the session key store</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP08identitycD008IdentitycD4TypeQzvp":{"name":"identityKeyStore","abstract":"<p>The Identity Key store that stores the records for the identity key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP03precD0AA03PrecD0_pvp":{"name":"preKeyStore","abstract":"<p>The Pre Key store that stores the records for the pre key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP07sessionD007SessionD4TypeQzvp":{"name":"sessionStore","abstract":"<p>The Session store that stores the records for the session module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStoreP09signedPrecD0AA06SignedfcD0_pvp":{"name":"signedPreKeyStore","abstract":"<p>The Signed Pre Key store that stores the records for the signed pre key module</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStorePAAE021signatureWithIdentityC07message10Foundation4DataVAH_tKF":{"name":"signatureWithIdentityKey(message:)","abstract":"<p>Sign a message with the identity key.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStorePAAE18updateSignedPrekey9timestamp10Foundation4DataVs6UInt64V_tKF":{"name":"updateSignedPrekey(timestamp:)","abstract":"<p>Create a signed pre key with the given id and store it.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStorePAAE13createPreKeys5countSay10Foundation4DataVGSi_tKF":{"name":"createPreKeys(count:)","abstract":"<p>Create a number of pre keys and store them.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStorePAAE11fingerprint3for12localAddressAA11FingerprintV0H0Qz_AJtKF":{"name":"fingerprint(for:localAddress:)","abstract":"<p>Create a fingerprint to compare keys with someone.</p>","parent_name":"KeyStore"},"Protocols/KeyStore.html#/s:14SignalProtocol8KeyStorePAAE4sign7message10Foundation4DataVAH_tKF":{"name":"sign(message:)","abstract":"<p>Sign a message with the identity key.</p>","parent_name":"KeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP7AddressQa":{"name":"Address","abstract":"<p>The type that distinguishes different devices/users</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP03getcD4Data10Foundation0G0VyKF":{"name":"getIdentityKeyData()","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP8identity3for10Foundation4DataVSg7AddressQz_tKF":{"name":"identity(for:)","abstract":"<p>Return the identity for the given address, if there is any.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStoreP5store8identity3fory10Foundation4DataVSg_7AddressQztKF":{"name":"store(identity:for:)","abstract":"<p>Store a remote client&rsquo;s identity key as trusted.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStorePAAE03getcD0AA0D4PairVyKF":{"name":"getIdentityKey()","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStorePAAE09getPubliccD010Foundation4DataVyKF":{"name":"getPublicIdentityKey()","abstract":"<p>Return the public identity key. This key should be generated once at","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStorePAAE03getcD10PublicData10Foundation0H0VyKF":{"name":"getIdentityKeyPublicData()","abstract":"<p>Return the public identity key data.</p>","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStorePAAE9isTrusted8identity3forSb10Foundation4DataV_7AddressQztKF":{"name":"isTrusted(identity:for:)","abstract":"<p>Determine whether a remote client&rsquo;s identity is trusted. The convention is","parent_name":"IdentityKeyStore"},"Protocols/IdentityKeyStore.html#/s:14SignalProtocol16IdentityKeyStorePAAE9isTrusted8identity3forSbAA06PublicD0V_7AddressQztKF":{"name":"isTrusted(identity:for:)","abstract":"<p>Determine whether a remote client&rsquo;s identity is trusted. The convention is","parent_name":"IdentityKeyStore"},"Protocols/GroupKeyStore.html#/s:14SignalProtocol13GroupKeyStoreP0C7AddressQa":{"name":"GroupAddress","abstract":"<p>The type that distinguishes different groups and devices/users</p>","parent_name":"GroupKeyStore"},"Protocols/GroupKeyStore.html#/s:14SignalProtocol13GroupKeyStoreP06SenderdE4TypeQa":{"name":"SenderKeyStoreType","abstract":"<p>The type of the sender key store</p>","parent_name":"GroupKeyStore"},"Protocols/GroupKeyStore.html#/s:14SignalProtocol13GroupKeyStoreP06senderdE006SenderdE4TypeQzvp":{"name":"senderKeyStore","abstract":"<p>The Sender Key store that stores the records for the sender key module</p>","parent_name":"GroupKeyStore"},"Protocols/SignalCryptoProvider.html#/s:14SignalProtocol0A14CryptoProviderP6random5bytes10Foundation4DataVSi_tKF":{"name":"random(bytes:)","abstract":"<p>Create a number of secure random bytes.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:14SignalProtocol0A14CryptoProviderP10hmacSHA2563for4with10Foundation4DataVAI_AItKF":{"name":"hmacSHA256(for:with:)","abstract":"<p>Authenticate a message with the HMAC based on SHA256.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:14SignalProtocol0A14CryptoProviderP6sha5123for10Foundation4DataVAH_tKF":{"name":"sha512(for:)","abstract":"<p>Return the SHA512 message digest.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:14SignalProtocol0A14CryptoProviderP7encrypt7message4with3key2iv10Foundation4DataVAK_AA0A16EncryptionSchemeOA2KtKF":{"name":"encrypt(message:with:key:iv:)","abstract":"<p>Encrypt a message with the given scheme.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html#/s:14SignalProtocol0A14CryptoProviderP7decrypt7message4with3key2iv10Foundation4DataVAK_AA0A16EncryptionSchemeOA2KtKF":{"name":"decrypt(message:with:key:iv:)","abstract":"<p>Decrypt a message with the given scheme.</p>","parent_name":"SignalCryptoProvider"},"Protocols/SignalCryptoProvider.html":{"name":"SignalCryptoProvider","abstract":"<p>The <code>SignalCryptoProvider</code> protocol can be implemented to provide a custom"},"Protocols/GroupKeyStore.html":{"name":"GroupKeyStore","abstract":"<p>A group key store stores the encryption keys for group messaging</p>"},"Protocols/IdentityKeyStore.html":{"name":"IdentityKeyStore","abstract":"<p>Implement the <code>IdentityKeyStore</code> protocol to handle the identity keys of the"},"Protocols/KeyStore.html":{"name":"KeyStore","abstract":"<p>Provide all local storage delegates.</p>"},"Protocols/PreKeyStore.html":{"name":"PreKeyStore","abstract":"<p>Implement the <code>PreKeyStore</code> protocol to handle the pre key storage of the"},"Protocols/SenderKeyStore.html":{"name":"SenderKeyStore","abstract":"<p>Implement the <code>SenderKeyStore</code> protocol to handle the sender key storage of the"},"Protocols/SessionStore.html":{"name":"SessionStore","abstract":"<p>Implement the <code>SessionStore</code> protocol to handle the session records of the"},"Protocols/SignedPreKeyStore.html":{"name":"SignedPreKeyStore","abstract":"<p>Implement the <code>SignedPreKeyStore</code> protocol to handle the signed pre key storage of the"},"Functions.html#/s:14SignalProtocol13getLogicalKey33_4D265CAC7D325782566EF400BD6F4359LL3for10Foundation4DataVSayAA06PublicE0VG_tF":{"name":"getLogicalKey(for:)","abstract":"<p>Serialize the list of public keys by first sorting the keys and then"},"Functions.html#/s:14SignalProtocol14getFingerprint33_4D265CAC7D325782566EF400BD6F4359LL8identity16stableIdentifier10iterations10Foundation4DataVAI_SSSitKF":{"name":"getFingerprint(identity:stableIdentifier:iterations:)","abstract":"<p>Calculate the fingerprint for identity data and identifier.</p>"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO6signalyA2CmF":{"name":"signal","abstract":"<p>A &lsquo;normal&rsquo; message in an established session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO6preKeyyA2CmF":{"name":"preKey","abstract":"<p>A pre key message to establish a new session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO9senderKeyyA2CmF":{"name":"senderKey","abstract":"<p>A normal message in an established group session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO21senderKeyDistributionyA2CmF":{"name":"senderKeyDistribution","abstract":"<p>A distribution message to establish a new group session</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO11descriptionSSvp":{"name":"description","abstract":"<p>A String representation of the type</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO4data10Foundation4DataVvp":{"name":"data","abstract":"<p>Encode the type into a string</p>","parent_name":"CipherTextType"},"Enums/CipherTextType.html#/s:14SignalProtocol14CipherTextTypeO4fromACSg10Foundation4DataV_tcfc":{"name":"init(from:)","abstract":"<p>Extract the <code>CipherTextType</code> from data.</p>","parent_name":"CipherTextType"},"Enums/SignalEncryptionScheme.html#/s:14SignalProtocol0A16EncryptionSchemeO16AES_CBCwithPKCS5yA2CmF":{"name":"AES_CBCwithPKCS5","abstract":"<p>Encrypt/decrypt with AES in CBC mode with PKCS5 padding</p>","parent_name":"SignalEncryptionScheme"},"Enums/SignalEncryptionScheme.html#/s:14SignalProtocol0A16EncryptionSchemeO16AES_CTRnoPaddingyA2CmF":{"name":"AES_CTRnoPadding","abstract":"<p>Encrypt/decrypt with AES in CTR mode with no padding</p>","parent_name":"SignalEncryptionScheme"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO7unknownyA2CmF":{"name":"unknown","abstract":"<p>Unknown errors should only be thrown of no other, more descriptive error type exists</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO05curveC0yA2CmF":{"name":"curveError","abstract":"<p>Curve25519 functions returned an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO07storageC0yA2CmF":{"name":"storageError","abstract":"<p>The local storage implementation produced an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO16duplicateMessageyA2CmF":{"name":"duplicateMessage","abstract":"<p>A message was received that was previously decrypted, or is too old</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO07invalidD0yA2CmF":{"name":"invalidType","abstract":"<p>The message type does not match</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO10invalidKeyyA2CmF":{"name":"invalidKey","abstract":"<p>An invalid key produced an error</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO9invalidIVyA2CmF":{"name":"invalidIV","abstract":"<p>The initialization vector has the wrong length</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO9invalidIdyA2CmF":{"name":"invalidId","abstract":"<p>The (key) id is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO10invalidMacyA2CmF":{"name":"invalidMac","abstract":"<p>The authentication failed</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO14invalidMessageyA2CmF":{"name":"invalidMessage","abstract":"<p>The message structure is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO13invalidLengthyA2CmF":{"name":"invalidLength","abstract":"<p>The length of a message or stored object is incorrect</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO13legacyMessageyA2CmF":{"name":"legacyMessage","abstract":"<p>A message from an older implementation of the protocol is received</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO9noSessionyA2CmF":{"name":"noSession","abstract":"<p>No valid session exists for the address</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO17untrustedIdentityyA2CmF":{"name":"untrustedIdentity","abstract":"<p>The identity of the recipient is untrusted</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO16invalidSignatureyA2CmF":{"name":"invalidSignature","abstract":"<p>The signature of the message is invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO15invalidProtoBufyA2CmF":{"name":"invalidProtoBuf","abstract":"<p>A serialized record or message is not in valid protocol buffer format</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO18fPIdentityMismatchyA2CmF":{"name":"fPIdentityMismatch","abstract":"<p>The identity of two fingerprints is not equal</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO16noCryptoProvideryA2CmF":{"name":"noCryptoProvider","abstract":"<p>There is no crypto provider set</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO13noRandomBytesyA2CmF":{"name":"noRandomBytes","abstract":"<p>Random bytes could not be created</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO04hmacC0yA2CmF":{"name":"hmacError","abstract":"<p>There was an error calculating the HMAC of a message</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO06digestC0yA2CmF":{"name":"digestError","abstract":"<p>There was an error calculating a digest</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO010encryptionC0yA2CmF":{"name":"encryptionError","abstract":"<p>An error occured during encryption</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:14SignalProtocol0A9ErrorTypeO010decryptionC0yA2CmF":{"name":"decryptionError","abstract":"<p>An error occured during decryption</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html":{"name":"SignalErrorType","abstract":"<p>The different types of errors that can occur using the SignalProtocolSwift library.</p>"},"Enums/SignalEncryptionScheme.html":{"name":"SignalEncryptionScheme","abstract":"<p>Specifies the type of algorithm to use for encryption and decryption.</p>"},"Enums/CipherTextType.html":{"name":"CipherTextType","abstract":"<p>The <code>CipherTextType</code> enum describes the different types of messages.</p>"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC17maxReceiverChains33_5D3A64D6F61CC3F9A53400D8B7239046LLSivpZ":{"name":"maxReceiverChains","abstract":"<p>The maximum number of receiver chains for the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC7keyInfo33_5D3A64D6F61CC3F9A53400D8B7239046LL10Foundation4DataVvpZ":{"name":"keyInfo","abstract":"<p>The info material used for the derivation of chain and root keys</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC15previousCounters6UInt32Vvp":{"name":"previousCounter","abstract":"<p>The last counter in the previous sender chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC13localIdentityAA9PublicKeyVSgvp":{"name":"localIdentity","abstract":"<p>The identity key of the local party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC14remoteIdentityAA9PublicKeyVSgvp":{"name":"remoteIdentity","abstract":"<p>The identity key of the remote party</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC7rootKeyAA011RatchetRootF0VSgvp":{"name":"rootKey","abstract":"<p>The root key of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC11senderChainAA06SenderF0VSgvp":{"name":"senderChain","abstract":"<p>The sender chain of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC14receiverChainsSayAA13ReceiverChainCGvp":{"name":"receiverChains","abstract":"<p>The receiver chains of the state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC13pendingPreKeyAA07PendingfG0VSgvp":{"name":"pendingPreKey","abstract":"<p>An optional pending pre key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC12aliceBaseKeyAA06PublicG0VSgvp":{"name":"aliceBaseKey","abstract":"<p>The base key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateCACycfc":{"name":"init()","abstract":"<p>Create a new sender state</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC13receiverChain3forAA08ReceiverF0CSgAA9PublicKeyV_tF":{"name":"receiverChain(for:)","abstract":"<p>Find a receiver chain for a sender key.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC3add13receiverChainyAA08ReceiverG0C_tF":{"name":"add(receiverChain:)","abstract":"<p>Add a receiver chain to the state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC3set8chainKey3foryAA012RatchetChainG0V_AA06PublicG0VtKF":{"name":"set(chainKey:for:)","abstract":"<p>Set the chain key for a given sender key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC3set11messageKeys3foryAA014RatchetMessageG0V_AA9PublicKeyVtF":{"name":"set(messageKeys:for:)","abstract":"<p>Set the message keys for a given sender key</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC17removeMessageKeys3for3andAA07RatchetfG0VSgAA9PublicKeyV_s6UInt32VtF":{"name":"removeMessageKeys(for:and:)","abstract":"<p>Remove message keys</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC16receiverChainKey3forAA07RatchetfG0VSgAA06PublicG0V_tF":{"name":"receiverChainKey(for:)","abstract":"<p>Find the chain key of a receiver chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC3set16receiverChainKey3foryAA07RatchetgH0V_AA06PublicH0VtKF":{"name":"set(receiverChainKey:for:)","abstract":"<p>Set the chain key of a receiver chain</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC15aliceInitialize14ourIdentityKey0g4BaseI005theirhI00k9SignedPreI00k7OneTimemI00k7RatchetI0yAA0I4PairV_AlA06PublicI0VA2NSgANtKF":{"name":"aliceInitialize(ourIdentityKey:ourBaseKey:theirIdentityKey:theirSignedPreKey:theirOneTimePreKey:theirRatchetKey:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC13bobInitialize14ourIdentityKey0g9SignedPreI00g7OneTimekI00g7RatchetI005theirhI00o4BaseI0yAA0I4PairV_A2LSgAlA06PublicI0VAOtKF":{"name":"bobInitialize(ourIdentityKey:ourSignedPreKey:ourOneTimePreKey:ourRatchetKey:theirIdentityKey:theirBaseKey:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC19symmetricInitialize10parametersyAA19SymmetricParametersV_tKF":{"name":"symmetricInitialize(parameters:)","abstract":"<p>Initialise a session state.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC20calculateDerivedKeys33_5D3A64D6F61CC3F9A53400D8B7239046LL6secretAA14RatchetRootKeyV04rootT0_AA0r5ChainT0V05chainT0t10Foundation4DataV_tKF":{"name":"calculateDerivedKeys(secret:)","abstract":"<p>Create the root and chain key from the secret.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC11protoObjectAA0a1_C0Vvp":{"name":"protoObject","abstract":"<p>The state converted to a protobuf object</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC4fromAcA0a1_C0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a state from a protobuf object.</p>","parent_name":"SessionState"},"Classes/SessionState.html#/s:14SignalProtocol12SessionStateC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare tow session states.</p>","parent_name":"SessionState"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC17archivedStatesMax33_A95514CC36DAB0E56816F61B28ED9234LLSivpZ":{"name":"archivedStatesMax","abstract":"<p>The maximum number of archived states</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC5stateAA0C5StateCvp":{"name":"state","abstract":"<p>The current session</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC14previousStatesSayAA0C5StateCGvp":{"name":"previousStates","abstract":"<p>A list of previous sessions, sorted by most recent</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC7isFreshSbvp":{"name":"isFresh","abstract":"<p>Indicates if the session was just created</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC5stateAcA0C5StateCSg_tcfc":{"name":"init(state:)","abstract":"<p>Create a new session record for a session.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC03hasC5State7baseKeySbAA06PublicH0V_tF":{"name":"hasSessionState(baseKey:)","abstract":"<p>Check if the session record contains a specific state.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC19archiveCurrentStateyyF":{"name":"archiveCurrentState()","abstract":"<p>Create a new state and archive the old one.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC12promoteState5stateyAA0cF0C_tF":{"name":"promoteState(state:)","abstract":"<p>Make a state the currently active state.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC11removeState33_A95514CC36DAB0E56816F61B28ED9234LL3foryAA9PublicKeyV_tF":{"name":"removeState(for:)","abstract":"<p>Remove a state from the previous states.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC11protoObjectAA0a1_D0Vvp":{"name":"protoObject","abstract":"<p>Convert the record to a ProtoBuf object for storage</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC4fromAcA0a1_D0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a session record from a ProtoBuf object.</p>","parent_name":"SessionRecord"},"Classes/SessionRecord.html#/s:14SignalProtocol13SessionRecordC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two session records for equality.</p>","parent_name":"SessionRecord"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC10ratchetKeyAA06PublicF0Vvp":{"name":"ratchetKey","abstract":"<p>The current ratchet key</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC8chainKeyAA07RatchetdF0Vvp":{"name":"chainKey","abstract":"<p>The current chain key</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC11messageKeys33_0614DCD4342E27833DC21CB7C25BAFFFLLSayAA014RatchetMessageF0VGvp":{"name":"messageKeys","abstract":"<p>The stored message keys for out-of-order messages</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC10ratchetKey05chainF0AcA06PublicF0V_AA07RatchetdF0Vtcfc":{"name":"init(ratchetKey:chainKey:)","abstract":"<p>Create a receiver chain from the components.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC3add10messageKeyyAA18RatchetMessageKeysV_tF":{"name":"add(messageKey:)","abstract":"<p>Add a message key to the stored message keys.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC3has10messageKeySbAA18RatchetMessageKeysV_tF":{"name":"has(messageKey:)","abstract":"<p>Check if a message key already exists.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC10messageKey3forAA18RatchetMessageKeysVSgs6UInt32V_tF":{"name":"messageKey(for:)","abstract":"<p>Get a message key if it exists.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC16removeMessageKey3forAA07RatchetF4KeysVSgs6UInt32V_tF":{"name":"removeMessageKey(for:)","abstract":"<p>Remove a message key and return it.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC11protoObjectAA0A8_SessionV0D0Vvp":{"name":"protoObject","abstract":"<p>The receiver chain converted to a protobuf object</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC4fromAcA0A8_SessionV0D0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a receiver chain from a protobuf object.</p>","parent_name":"ReceiverChain"},"Classes/ReceiverChain.html#/s:14SignalProtocol13ReceiverChainC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two receiver chains for equality.</p>","parent_name":"ReceiverChain"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC07messageD7MaximumSivpZ":{"name":"messageKeyMaximum","abstract":"<p>The maximum number of message keys stored</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC5keyIds6UInt32Vvp":{"name":"keyId","abstract":"<p>The current key id</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC05chainD0AA0c5ChainD0Vvp":{"name":"chainKey","abstract":"<p>The chain key of the state used for key generation</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC015signaturePublicD0AA0gD0Vvp":{"name":"signaturePublicKey","abstract":"<p>The signature key</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC016signaturePrivateD0AA0gD0VSgvp":{"name":"signaturePrivateKey","abstract":"<p>The private part of the signature key, optional</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC11messageKeys33_AF7143AD30AFC9DC8BE5D6A38410EEB0LLSayAA0c7MessageD0VGvp":{"name":"messageKeys","abstract":"<p>Dictionary of message keys indexed by iteration</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC5keyId05chainD0015signaturePublicD00i7PrivateD0ACs6UInt32V_AA0c5ChainD0VAA0jD0VAA0kD0VSgtcfc":{"name":"init(keyId:chainKey:signaturePublicKey:signaturePrivateKey:)","abstract":"<p>Create a new session state.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC3add07messageD015removingOldKeysyAA0c7MessageD0V_SbtF":{"name":"add(messageKey:removingOldKeys:)","abstract":"<p>Add a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbStructs/SenderMessageKey.html\">SenderMessageKey</a></code> to the keys which are stored to decrypt old (out of order) messages.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC07messageD03forAA0c7MessageD0VSgs6UInt32V_tF":{"name":"messageKey(for:)","abstract":"<p>Get the message key for the iteration, if it exists.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC20removeOldMessageKeys33_AF7143AD30AFC9DC8BE5D6A38410EEB0LLyyF":{"name":"removeOldMessageKeys()","abstract":"<p>Remove old message keys if the number is higher then the maximum.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC06senderD03forAA0c7MessageD0Vs6UInt32V_tKF":{"name":"senderKey(for:)","abstract":"<p>Get the sender key for the iteration of the chain.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC4fromAcA0a1_cdE0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a SenderKeyState from a ProtoBuf object.</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC11protoObjectAA0a1_cdE0Vvp":{"name":"protoObject","abstract":"<p>The state converted to a ProtoBuf object</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyState.html#/s:14SignalProtocol14SenderKeyStateC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare tow states for equality</p>","parent_name":"SenderKeyState"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC9maxStates33_05759A2443B9A69949FACC9640EA70EFLLSivpZ":{"name":"maxStates","abstract":"<p>The maximum number of different states that are saved</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC6states33_05759A2443B9A69949FACC9640EA70EFLLSayAA0cD5StateCGvp":{"name":"states","abstract":"<p>The states that are saved by the record, sorted by most recent</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC5stateAA0cD5StateCSgvp":{"name":"state","abstract":"<p>The active state is the most recent, if any states exist</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC7isEmptySbvp":{"name":"isEmpty","abstract":"<p>Indicate if there are any states in this record</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordCACycfc":{"name":"init()","abstract":"<p>Create a fresh session record without any states.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC5state3forAA0cD5StateCSgs6UInt32V_tF":{"name":"state(for:)","abstract":"<p>Get the state for an id.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC03setcD02id9iteration05chainD009signatureD4Pairys6UInt32V_AJ10Foundation4DataVAA0dK0VtF":{"name":"setSenderKey(id:iteration:chainKey:signatureKeyPair:)","abstract":"<p>Set a new sender key state and delete all previous states.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC8addState2id9iteration05chainD0015signaturePublicD00k7PrivateD0ys6UInt32V_AK10Foundation4DataVAA0lD0VAA0mD0VSgtF":{"name":"addState(id:iteration:chainKey:signaturePublicKey:signaturePrivateKey:)","abstract":"<p>Add a new sender key state.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC8addState2id9iteration05chainD009signatureD4Pairys6UInt32V_AJ10Foundation4DataVAA0dL0VtF":{"name":"addState(id:iteration:chainKey:signatureKeyPair:)","abstract":"<p>Add a new sender key state.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC11protoObjectAA0a1_cdE0Vvp":{"name":"protoObject","abstract":"<p>The record converted to a ProtoBuf object for storage</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC4fromAcA0a1_cdE0V_tKcfc":{"name":"init(from:)","abstract":"<p>Create a record from a ProtoBuf object.</p>","parent_name":"SenderKeyRecord"},"Classes/SenderKeyRecord.html#/s:14SignalProtocol15SenderKeyRecordC2eeoiySbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Compare two records.</p>","parent_name":"SenderKeyRecord"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC4typeAA0aC4TypeOvp":{"name":"type","abstract":"<p>The error type</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC7messageSSSgvp":{"name":"message","abstract":"<p>A decribing message accompaning the error</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC5causeACSgvp":{"name":"cause","abstract":"<p>If the error occured in a subfunction, then this variable can be used to construct an error trace.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC8functionSSvp":{"name":"function","abstract":"<p>The function were the error occured</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC4fileSSvp":{"name":"file","abstract":"<p>The file that the error occured in</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC__5cause4file8functionAcA0aC4TypeO_SSSgACSgS2Stcfc":{"name":"init(_:_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code>.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC_5cause4file8functionACSS_ACS2Stcfc":{"name":"init(_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code> using an already exisiting <code>SignalError</code> from a subroutine.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC_5cause4file8functionACSS_s0C0_pS2Stcfc":{"name":"init(_:cause:file:function:)","abstract":"<p>Create a new <code>SignalError</code> using an already exisiting <code>Error</code> from a subroutine.</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC11descriptionSSvp":{"name":"description","abstract":"<p>A decription of the error, including all contained errors, without function and file names</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC16shortDescriptionSSvp":{"name":"shortDescription","abstract":"<p>A short decription of the error without the contained errors</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC15longDescriptionSSvp":{"name":"longDescription","abstract":"<p>A decription of the error, including all contained errors, as well as function and file names</p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC5trace030_C35E3668D434E6A0E51B53E2B96C5L1ELLSSvp":{"name":"trace","abstract":"<p>The trace of the error which is used to build the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalError.html#/s:14SignalProtocol0A5ErrorC15longDescriptionSSvp\">longDescription</a></code></p>","parent_name":"SignalError"},"Classes/SignalError.html#/s:14SignalProtocol0A5ErrorC20localizedDescriptionSSvp":{"name":"localizedDescription","abstract":"<p>The description of the error</p>","parent_name":"SignalError"},"Classes/SignalError.html":{"name":"SignalError","abstract":"<p>All errors thrown by <code>SignalProtocolSwift</code> are <code>SignalError</code> objects.</p>"},"Classes/SenderKeyRecord.html":{"name":"SenderKeyRecord","abstract":"<p>Stores the states for a session.</p>"},"Classes/SenderKeyState.html":{"name":"SenderKeyState","abstract":"<p>A state of a group message session with a recipient,"},"Classes/ReceiverChain.html":{"name":"ReceiverChain","abstract":"<p>A receiver chain is the part of the ratchet that creates the message keys for the received messages.</p>"},"Classes/SessionRecord.html":{"name":"SessionRecord","abstract":"<p>The record of a session (and previous sessions) with another party.</p>"},"Classes/SessionState.html":{"name":"SessionState","abstract":"<p>A session state contains all data needed for communicating with a remote party.</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}
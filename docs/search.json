{"Typealiases.html#/s:5TestC13EncryptedDataa":{"name":"EncryptedData","abstract":"<p>Encrypted byte message produced by the signal protocol</p>"},"Typealiases.html#/s:5TestC15UnencryptedDataa":{"name":"UnencryptedData","abstract":"<p>Input for the encryption methods</p>"},"Typealiases.html#/s:5TestC6PreKeya":{"name":"PreKey","abstract":"<p>A pre key needed for establishing a session</p>"},"Typealiases.html#/s:5TestC12PreKeyBundlea":{"name":"PreKeyBundle","abstract":"<p>A pre key bundle needed for establishing a session</p>"},"Typealiases.html#/s:5TestC13PreKeyMessagea":{"name":"PreKeyMessage","abstract":"<p>An initial message for establishing a session, created by using a pre key and bundle</p>"},"Typealiases.html#/s:5TestC8PreKeyIDa":{"name":"PreKeyID","abstract":"<p>The number of a Pre Key</p>"},"Typealiases.html#/s:5TestC15IdentityKeyPaira":{"name":"IdentityKeyPair","abstract":"<p>A pair of public and private identity key, serialized</p>"},"Typealiases.html#/s:5TestC14SignedPreKeyIDa":{"name":"SignedPreKeyID","abstract":"<p>The id of a Signed Pre Key</p>"},"Typealiases.html#/s:5TestC8DeviceIDa":{"name":"DeviceID","abstract":"<p>The device number</p>"},"Structs/CHAddress.html#/s:5TestC9CHAddressV13maximumLength33_9C482CE0893C4902DC38E12C0A4CCE37LLSivZ":{"name":"maximumLength","abstract":"<p>maximum byte length of the recipient ID</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressV8deviceIDs5Int32Vv":{"name":"deviceID","abstract":"<p>The device identification number</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressV11recipientIDSSv":{"name":"recipientID","abstract":"<p>The recipient id, i.e. phone number or e-mail</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressVACs5Int32V8deviceID_SS09recipientE0tcfc":{"name":"init(deviceID:recipientID:)","abstract":"<p>Create a new address.</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressVACSgSPySC23signal_protocol_addressVGSg4from_tcfc":{"name":"init(from:)","abstract":"<p>Create a new address from a pointer to a signal API struct.</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressVACSgSC23signal_protocol_addressV0E0_tcfc":{"name":"init(address:)","abstract":"<p>Create a new address from a signal API struct.</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressV11descriptionSSv":{"name":"description","abstract":"<p>A description of the address, contains the device ID and the recipient ID</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressV9hashValueSiv":{"name":"hashValue","abstract":"<p>A hash of the address for storage</p>","parent_name":"CHAddress"},"Structs/CHAddress.html#/s:5TestC9CHAddressV2eeoiSbAC_ACtFZ":{"name":"==(_:_:)","abstract":"<p>Two addresses are equal if the device ID and recipient ID match</p>","parent_name":"CHAddress"},"Structs/SignalError.html#/s:5TestC11SignalErrorV4typeAA0bC4TypeOv":{"name":"type","abstract":"<p>The type of the error, see <code><a href=\"36f8f5912051ae747ef441d6511ca4cbEnums/SignalErrorType.html\">SignalErrorType</a></code></p>","parent_name":"SignalError"},"Structs/SignalError.html#/s:5TestC11SignalErrorV7messageSSSgv":{"name":"message","abstract":"<p>A String with a description of the error</p>","parent_name":"SignalError"},"Structs/SignalError.html#/s:5TestC11SignalErrorV4codes5Int32VSgv":{"name":"code","abstract":"<p>An optional error code from the Signal API</p>","parent_name":"SignalError"},"Structs/SignalError.html#/s:5TestC11SignalErrorVAcA0bC4TypeO4type_SSSg7messages5Int32VSg4codetcfc":{"name":"init(type:message:code:)","abstract":"<p>Create a new error.</p>","parent_name":"SignalError"},"Structs/SignalError.html#/s:5TestC11SignalErrorV11descriptionSSv":{"name":"description","abstract":"<p>Printable description of the error</p>","parent_name":"SignalError"},"Structs/SignalError.html":{"name":"SignalError","abstract":"<p>Error struct for errors thrown or handled by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalInterface.html\">SignalInterface</a></code> class."},"Structs/CHAddress.html":{"name":"CHAddress","abstract":"<p>An address to establish a session with a peer.</p>"},"Protocols/SignedPreKeyStoreDelegate.html#/s:5TestC25SignedPreKeyStoreDelegateP06signedcD0Says5UInt8VGSgs6UInt32V3for_tF":{"name":"signedPreKey(for:)","abstract":"<p>Provide a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:5TestC25SignedPreKeyStoreDelegateP5storeSbSays5UInt8VG06signedcD0_s6UInt32V3fortF":{"name":"store(signedPreKey:for:)","abstract":"<p>Store a Signed Pre Key for a given id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:5TestC25SignedPreKeyStoreDelegateP08containsbcD0Sbs6UInt32V3for_tF":{"name":"containsSignedPreKey(for:)","abstract":"<p>Indicate if a Signed Pre Key exists for an id.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:5TestC25SignedPreKeyStoreDelegateP06removebcD0Sbs6UInt32V3for_tF":{"name":"removeSignedPreKey(for:)","abstract":"<p>Remove a Signed Pre Key.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SignedPreKeyStoreDelegate.html#/s:5TestC25SignedPreKeyStoreDelegateP7cleanUpyyF":{"name":"cleanUp()","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>","parent_name":"SignedPreKeyStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP04loadB0Says5UInt8VGSgAA9CHAddressV3for_tF":{"name":"loadSession(for:)","abstract":"<p>Load a session for a given address.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP17subDeviceSessionsSays5Int32VGSS3for_tF":{"name":"subDeviceSessions(for:)","abstract":"<p>Retreive the recipient IDs of all active sessions for a remote client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP5storeSbSays5UInt8VG7session_AA9CHAddressV3fortF":{"name":"store(session:for:)","abstract":"<p>Store a session record for a remote client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP08containsB0SbAA9CHAddressV3for_tF":{"name":"containsSession(for:)","abstract":"<p>Indicate if a record exists for the client address</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP06deleteB0SbAA9CHAddressV3for_tF":{"name":"deleteSession(for:)","abstract":"<p>Delete a session for a remote client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP17deleteAllSessionsSiSS3for_tF":{"name":"deleteAllSessions(for:)","abstract":"<p>Delete all session records for a given client.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SessionStoreDelegate.html#/s:5TestC20SessionStoreDelegateP7cleanUpyyF":{"name":"cleanUp()","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>","parent_name":"SessionStoreDelegate"},"Protocols/SenderKeyStoreDelegate.html#/s:5TestC22SenderKeyStoreDelegateP04loadbC0Says5UInt8VGSgAA9CHAddressV3for_SS3andtF":{"name":"loadSenderKey(for:and:)","abstract":"<p>Returns a copy of the sender key record corresponding to the (groupId + senderId + deviceId) tuple.</p>","parent_name":"SenderKeyStoreDelegate"},"Protocols/SenderKeyStoreDelegate.html#/s:5TestC22SenderKeyStoreDelegateP5storeSbSays5UInt8VG06senderC0_AA9CHAddressV3forSS3andtF":{"name":"store(senderKey:for:and:)","abstract":"<p>Stores a copy of the sender key record corresponding to the (groupId + senderId + deviceId) tuple.</p>","parent_name":"SenderKeyStoreDelegate"},"Protocols/SenderKeyStoreDelegate.html#/s:5TestC22SenderKeyStoreDelegateP7cleanUpyyF":{"name":"cleanUp()","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>","parent_name":"SenderKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:5TestC24IdentityKeyStoreDelegateP08identityC0Says5UInt8VGSgv":{"name":"identityKey","abstract":"<p>Return the identity key pair. This key should be generated once at","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:5TestC24IdentityKeyStoreDelegateP19localRegistrationIDSiv":{"name":"localRegistrationID","abstract":"<p>Return the local registration id. This id should be generated once at","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:5TestC24IdentityKeyStoreDelegateP09isTrustedB0SbAA9CHAddressV3for_Says5UInt8VGSg3andtF":{"name":"isTrustedIdentity(for:and:)","abstract":"<p>Determine whether a remote client&rsquo;s identity is trusted. Th convention is that the TextSecure protocol is &lsquo;trust on first use.&rsquo;  This means that an identity key is considered &lsquo;trusted&rsquo; if there is no entry for the recipient in the local store, or if it matches the saved key for a recipient in the local store. Only if it mismatches an entry in the local store is it considered &lsquo;untrusted.&rsquo;</p>","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:5TestC24IdentityKeyStoreDelegateP04saveB0SbAA9CHAddressV3for_Says5UInt8VGSg3andtF":{"name":"saveIdentity(for:and:)","abstract":"<p>Store a remote client&rsquo;s identity key as trusted. The value of key_data may be null. In this case remove the key data from the identity store, but retain any metadata that may be kept alongside it.</p>","parent_name":"IdentityKeyStoreDelegate"},"Protocols/IdentityKeyStoreDelegate.html#/s:5TestC24IdentityKeyStoreDelegateP7cleanupyyF":{"name":"cleanup()","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>","parent_name":"IdentityKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP03preC0Says5UInt8VGSgs6UInt32V3for_tF":{"name":"preKey(for:)","abstract":"<p>Provide a Pre Key for a given id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP5storeSbSays5UInt8VG03preC0_s6UInt32V3fortF":{"name":"store(preKey:for:)","abstract":"<p>Store a pre key for a given id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP08containsbC0Sbs6UInt32V3for_tF":{"name":"containsPreKey(for:)","abstract":"<p>Indicate if a pre key exists for an id.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP06removebC0Sbs6UInt32V3for_tF":{"name":"removePreKey(for:)","abstract":"<p>Remove a pre key.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP7cleanUpyyF":{"name":"cleanUp()","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP04nextbC2IDs6UInt32Vv":{"name":"nextPreKeyID","abstract":"<p>Store the next Pre Key ID to use when generating a key.</p>","parent_name":"PreKeyStoreDelegate"},"Protocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP07setNextbC2IDys6UInt32VF":{"name":"setNextPreKeyID(_:)","abstract":"<p>Set the next Pre Key ID to use. The value set her should be set to <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/PreKeyStoreDelegate.html#/s:5TestC19PreKeyStoreDelegateP04nextbC2IDs6UInt32Vv\">nextPreKeyID</a></code></p>","parent_name":"PreKeyStoreDelegate"},"Protocols/KeyStoreDelegate.html#/s:5TestC16KeyStoreDelegateP08identitybC0AA08IdentitybcD0_pv":{"name":"identityKeyStore","abstract":"<p>The Identity Key store that stores the records for the identity key module</p>","parent_name":"KeyStoreDelegate"},"Protocols/KeyStoreDelegate.html#/s:5TestC16KeyStoreDelegateP03prebC0AA03PrebcD0_pv":{"name":"preKeyStore","abstract":"<p>The Pre Key store that stores the records for the pre key module</p>","parent_name":"KeyStoreDelegate"},"Protocols/KeyStoreDelegate.html#/s:5TestC16KeyStoreDelegateP06senderbC0AA06SenderbcD0_pv":{"name":"senderKeyStore","abstract":"<p>The Sender Key store that stores the records for the sender key module</p>","parent_name":"KeyStoreDelegate"},"Protocols/KeyStoreDelegate.html#/s:5TestC16KeyStoreDelegateP07sessionC0AA07SessioncD0_pv":{"name":"sessionStore","abstract":"<p>The Session store that stores the records for the session module</p>","parent_name":"KeyStoreDelegate"},"Protocols/KeyStoreDelegate.html#/s:5TestC16KeyStoreDelegateP09signedPrebC0AA06SignedfbcD0_pv":{"name":"signedPreKeyStore","abstract":"<p>The Signed Pre Key store that stores the records for the signed pre key module</p>","parent_name":"KeyStoreDelegate"},"Protocols/KeyStoreDelegate.html":{"name":"KeyStoreDelegate","abstract":"<p>Provide all storage delegates when creating a new <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalInterface.html\">SignalInterface</a></code>."},"Protocols/PreKeyStoreDelegate.html":{"name":"PreKeyStoreDelegate","abstract":"<p>Implement the <code>PreKeyStoreDelegate</code> protocol to handle the Pre Key storage of the"},"Protocols/IdentityKeyStoreDelegate.html":{"name":"IdentityKeyStoreDelegate","abstract":"<p>Implement the <code>IdentityKeyStoreDelegate</code> protocol to handle the Identity Keys of the"},"Protocols/SenderKeyStoreDelegate.html":{"name":"SenderKeyStoreDelegate","abstract":"<p>Implement the <code>SenderKeyStoreDelegate</code> protocol to handle the Sender Key storage of the"},"Protocols/SessionStoreDelegate.html":{"name":"SessionStoreDelegate","abstract":"<p>Implement the <code>SessionStoreDelegate</code> protocol to handle the Session records of the"},"Protocols/SignedPreKeyStoreDelegate.html":{"name":"SignedPreKeyStoreDelegate","abstract":"<p>Implement the <code>SignedPreKeyStoreDelegate</code> protocol to handle the Signed Pre Key storage of the"},"Functions.html#/s:5TestC18getIdentityKeyPair33_063ADA8EE3B91BE8DB570039B80EBE41LLs5Int32VSpySpySC13signal_bufferVGSgGSg10publicData_AK07privateQ0SvSg04userQ0tF":{"name":"getIdentityKeyPair(publicData:privateData:userData:)","abstract":"<p>Get the local client&rsquo;s identity key pair.</p>"},"Functions.html#/s:5TestC22getLocalRegistrationID33_063ADA8EE3B91BE8DB570039B80EBE41LLs5Int32VSvSg8userData_Spys6UInt32VGSg012registrationE0tF":{"name":"getLocalRegistrationID(userData:registrationID:)","abstract":"<p>Return the local client&rsquo;s registration ID.</p>"},"Functions.html#/s:5TestC12saveIdentity33_063ADA8EE3B91BE8DB570039B80EBE41LLs5Int32VSPySC23signal_protocol_addressVGSg0N0_Spys5UInt8VGSg4dataSi6lengthSvSg8userDatatF":{"name":"saveIdentity(address:data:length:userData:)","abstract":"<p>Save a remote client&rsquo;s identity key.</p>"},"Functions.html#/s:5TestC17isTrustedIdentity33_063ADA8EE3B91BE8DB570039B80EBE41LLs5Int32VSPySC23signal_protocol_addressVGSg0O0_Spys5UInt8VGSg4dataSi6lengthSvSg8userDatatF":{"name":"isTrustedIdentity(address:data:length:userData:)","abstract":"<p>Verify a remote client&rsquo;s identity key.</p>"},"Functions.html#/s:5TestC7destroy33_063ADA8EE3B91BE8DB570039B80EBE41LLySvSg8userData_tF":{"name":"destroy(userData:)","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>"},"Functions.html#/s:5TestC7convert33_063ADA8EE3B91BE8DB570039B80EBE41LLAA9CHAddressV_Says5UInt8VGSgtSgSPySC23signal_protocol_addressVGSg_SpyAGGSg4dataSi6lengthtF":{"name":"convert(_:data:length:)","abstract":"<p>Convert address and data pointers to Swift types</p>"},"Functions.html#/s:5TestC6unpack33_AAC659B64DB16D46D6F00513764E6A1DLLAA9CHAddressV_SStSgSPySC31signal_protocol_sender_key_nameVGSg0N2ID_tF":{"name":"unpack(senderID:)","abstract":"<p>Internal function to convert a pointer to a sender key name into an address and a name.</p>"},"Functions.html#/s:5TestC13loadSenderKey33_AAC659B64DB16D46D6F00513764E6A1DLLs5Int32VSpySpySC13signal_bufferVGSgGSg6record_SPySC0N25_protocol_sender_key_nameVGSg0rD4NameSvSg8userDatatF":{"name":"loadSenderKey(record:senderKeyName:userData:)","abstract":"<p>Returns a copy of the sender key record corresponding to the"},"Functions.html#/s:5TestC14storeSenderKey33_AAC659B64DB16D46D6F00513764E6A1DLLs5Int32VSPySC31signal_protocol_sender_key_nameVGSg0R0_Spys5UInt8VGSg6recordSi6lengthSvSg8userDatatF":{"name":"storeSenderKey(name:record:length:userData:)","abstract":"<p>Store a serialized sender key record for a given (groupId + senderId + deviceId) tuple.</p>"},"Functions.html#/s:5TestC7cleanup33_AAC659B64DB16D46D6F00513764E6A1DLLySvSg8userData_tF":{"name":"cleanup(userData:)","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>"},"Functions.html#/s:5TestC10loadPreKey33_D0CA85FD3C456D42F01EDBFA029B9BD6LLs5Int32VSpySpySC13signal_bufferVGSgGSg6record_s6UInt32V03preD2IDSvSg8userDatatF":{"name":"loadPreKey(record:preKeyID:userData:)","abstract":"<p>Load a local serialized PreKey record.</p>"},"Functions.html#/s:5TestC11storePreKey33_D0CA85FD3C456D42F01EDBFA029B9BD6LLs5Int32Vs6UInt32V2id_Spys5UInt8VGSg6recordSi6lengthSvSg8userDatatF":{"name":"storePreKey(id:record:length:userData:)","abstract":"<p>Store a local serialized PreKey record.</p>"},"Functions.html#/s:5TestC14containsPreKey33_D0CA85FD3C456D42F01EDBFA029B9BD6LLs5Int32Vs6UInt32V2id_SvSg8userDatatF":{"name":"containsPreKey(id:userData:)","abstract":"<p>Determine whether there is a committed PreKey record matching the provided ID.</p>"},"Functions.html#/s:5TestC12removePreKey33_D0CA85FD3C456D42F01EDBFA029B9BD6LLs5Int32Vs6UInt32V2id_SvSg8userDatatF":{"name":"removePreKey(id:userData:)","abstract":"<p>Delete a PreKey record from local storage.</p>"},"Functions.html#/s:5TestC7cleanUp33_D0CA85FD3C456D42F01EDBFA029B9BD6LLySvSg8userData_tF":{"name":"cleanUp(userData:)","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>"},"Functions.html#/s:5TestC16loadSignedPreKey33_98D778FCB813511A919CD5A09B68A43BLLs5Int32VSpySpySC13signal_bufferVGSgGSg6record_s6UInt32V06signeddE2IDSvSg8userDatatF":{"name":"loadSignedPreKey(record:signedPreKeyID:userData:)","abstract":"<p>Load a local serialized signed PreKey record.</p>"},"Functions.html#/s:5TestC17storeSignedPreKey33_98D778FCB813511A919CD5A09B68A43BLLs5Int32Vs6UInt32V2id_Spys5UInt8VGSg6recordSi6lengthSvSg6callertF":{"name":"storeSignedPreKey(id:record:length:caller:)","abstract":"<p>Store a local serialized signed PreKey record.</p>"},"Functions.html#/s:5TestC20containsSignedPreKey33_98D778FCB813511A919CD5A09B68A43BLLs5Int32Vs6UInt32V2id_SvSg6callertF":{"name":"containsSignedPreKey(id:caller:)","abstract":"<p>Determine whether there is a committed signed PreKey record matching the provided ID.</p>"},"Functions.html#/s:5TestC18removeSignedPreKey33_98D778FCB813511A919CD5A09B68A43BLLs5Int32Vs6UInt32V2id_SvSg6callertF":{"name":"removeSignedPreKey(id:caller:)","abstract":"<p>Delete a SignedPreKeyRecord from local storage.</p>"},"Functions.html#/s:5TestC7cleanup33_98D778FCB813511A919CD5A09B68A43BLLySvSg6caller_tF":{"name":"cleanup(caller:)","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>"},"Functions.html#/s:5TestC11loadSession33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs5Int32VSpySpySC13signal_bufferVGSgGSg6record_SPySC0O17_protocol_addressVGSg0S0SvSg8userDatatF":{"name":"loadSession(record:address:userData:)","abstract":"<p>Returns a copy of the serialized session record corresponding to the provided recipient ID + device ID tuple.</p>"},"Functions.html#/s:5TestC20getSubDeviceSessions33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs5Int32VSpys13OpaquePointerVSgGSg8sessions_SPys4Int8VGSg4nameSi6lengthSvSg8userDatatF":{"name":"getSubDeviceSessions(sessions:name:length:userData:)","abstract":"<p>Returns all known devices with active sessions for a recipient</p>"},"Functions.html#/s:5TestC12storeSession33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs5Int32VSPySC23signal_protocol_addressVGSg0Q0_Spys5UInt8VGSg4dataSi6lengthSvSg8userDatatF":{"name":"storeSession(address:data:length:userData:)","abstract":"<p>Commit to storage the session record for a given recipient ID + device ID tuple.</p>"},"Functions.html#/s:5TestC15containsSession33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs5Int32VSPySC23signal_protocol_addressVGSg0Q0_SvSg8userDatatF":{"name":"containsSession(address:userData:)","abstract":"<p>Determine whether there is a committed session record for a recipient ID + device ID tuple.</p>"},"Functions.html#/s:5TestC13deleteSession33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs5Int32VSPySC23signal_protocol_addressVGSg0Q0_SvSg8userDatatF":{"name":"deleteSession(address:userData:)","abstract":"<p>Remove a session record for a recipient ID + device ID tuple.</p>"},"Functions.html#/s:5TestC17deleteAllSessions33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs5Int32VSPys4Int8VGSg4name_Si6lengthSvSg8userDatatF":{"name":"deleteAllSessions(name:length:userData:)","abstract":"<p>Remove the session records corresponding to all devices of a recipient ID.</p>"},"Functions.html#/s:5TestC7cleanUp33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLySvSg8userData_tF":{"name":"cleanUp(userData:)","abstract":"<p>Function called to perform cleanup when the data store context is being destroyed.</p>"},"Functions.html#/s:5TestC17logInternalErrors33_A88E8108A05A2E28B4442C0DC3F762B3LLys5Int32V5level_SPys4Int8VGSg7messageSi6lengthSvSg8userDatatF":{"name":"logInternalErrors(level:message:length:userData:)","abstract":"<p>This function receives internal logging from the Signal Protocol API. The output is currently"},"Functions.html#/s:5TestC19levelRepresentation33_A88E8108A05A2E28B4442C0DC3F762B3LLSSs5Int32V0B0_tF":{"name":"levelRepresentation(level:)","abstract":"<p>Returns a textual representation of the log level.</p>"},"Functions.html#/s:5TestC19levelRepresentation33_A88E8108A05A2E28B4442C0DC3F762B3LLSSAA14SignalLogLevelO03logP0_tF":{"name":"levelRepresentation(logLevel:)","abstract":"<p>Returns a textual representation for the log level enum.</p>"},"Functions.html#/s:5TestC8instancexSgSvSg3for_tRlzClF":{"name":"instance(for:)","abstract":"<p>Convert a void pointer to an instance of type T.</p>"},"Functions.html#/s:5TestC7pointerSvx3obj_tRlzClF":{"name":"pointer(obj:)","abstract":"<p>Create a void pointer from an instance.</p>"},"Functions.html#/s:5TestC16stringFromBufferSSSgSPys4Int8VGSg_Si6lengthtF":{"name":"stringFromBuffer(_:length:)","abstract":"<p>Create a string from a pointer to a UInt8 array.</p>"},"Extensions/UInt32.html#/s:s6UInt32V5TestCE10arrayUInt8Says0D0VGv":{"name":"arrayUInt8","abstract":"<p>The value represented as an array of UInt8.</p>","parent_name":"UInt32"},"Extensions/UInt32.html#/s:s6UInt32V5TestCEABSays5UInt8VG4from_tcfc":{"name":"init(from:)","abstract":"<p>Create a UIn32 from an Array of UInt8.</p>","parent_name":"UInt32"},"Extensions/UInt32.html":{"name":"UInt32","abstract":"<p>Extension to serialize UInt32</p>"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO18invalidRecipientIDA2CmF":{"name":"invalidRecipientID","abstract":"<p>The recipient ID can not be represented as a UTF-8 String</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO9noSessionA2CmF":{"name":"noSession","abstract":"<p>No session exists for the given address</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO13encryptFailedA2CmF":{"name":"encryptFailed","abstract":"<p>Could not encrypt the message</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO13decryptFailedA2CmF":{"name":"decryptFailed","abstract":"<p>Could not decrypt the message</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO19invalidPreKeyBundleA2CmF":{"name":"invalidPreKeyBundle","abstract":"<p>Either the Pre Key Bundle or the Pre Key are invalid</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO14notTextMessageA2CmF":{"name":"notTextMessage","abstract":"<p>Message is not a valid String</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO012wrongMessageD0A2CmF":{"name":"wrongMessageType","abstract":"<p>Message Type is incorrect</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO15keyStoreFailureA2CmF":{"name":"keyStoreFailure","abstract":"<p>Saving or loading from the store failed</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO10corruptKeyA2CmF":{"name":"corruptKey","abstract":"<p>Key material is corrupt</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO12noKeyCreatedA2CmF":{"name":"noKeyCreated","abstract":"<p>Couldn&rsquo;t create new Key Pair</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO16invalidRessourceA2CmF":{"name":"invalidRessource","abstract":"<p>Setup broken, either no context, no log, no crypto, or no locking</p>","parent_name":"SignalErrorType"},"Enums/SignalErrorType.html#/s:5TestC15SignalErrorTypeO17untrustedIdentityA2CmF":{"name":"untrustedIdentity","abstract":"<p>A new session with an already existing identity key</p>","parent_name":"SignalErrorType"},"Enums/SignalLogLevel.html#/s:5TestC14SignalLogLevelO5errorA2CmF":{"name":"error","abstract":"<p>Severe problem that can&rsquo;t be coped with</p>","parent_name":"SignalLogLevel"},"Enums/SignalLogLevel.html#/s:5TestC14SignalLogLevelO7warningA2CmF":{"name":"warning","abstract":"<p>Unusual problem that might affect overall usability</p>","parent_name":"SignalLogLevel"},"Enums/SignalLogLevel.html#/s:5TestC14SignalLogLevelO6noticeA2CmF":{"name":"notice","abstract":"<p>Something that might be worth fixing</p>","parent_name":"SignalLogLevel"},"Enums/SignalLogLevel.html#/s:5TestC14SignalLogLevelO4infoA2CmF":{"name":"info","abstract":"<p>Information about important activities</p>","parent_name":"SignalLogLevel"},"Enums/SignalLogLevel.html#/s:5TestC14SignalLogLevelO5debugA2CmF":{"name":"debug","abstract":"<p>Low level information useful only for debugging</p>","parent_name":"SignalLogLevel"},"Enums/SignalLogLevel.html":{"name":"SignalLogLevel","abstract":"<p>Log level definitions</p>"},"Enums/SignalErrorType.html":{"name":"SignalErrorType","abstract":"<p>Error definitions for errors thrown or handled by the <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalInterface.html\">SignalInterface</a></code> class.</p>"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(py)window":{"name":"window","abstract":"<p>The window of the App</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(im)application:didFinishLaunchingWithOptions:":{"name":"application(_:didFinishLaunchingWithOptions:)","abstract":"<p>The application has launched successfully</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(im)applicationWillResignActive:":{"name":"applicationWillResignActive(_:)","abstract":"<p>The application is about to move from active to inactive state.</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(im)applicationDidEnterBackground:":{"name":"applicationDidEnterBackground(_:)","abstract":"<p>The application is moving to the background, save and release data</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(im)applicationWillEnterForeground:":{"name":"applicationWillEnterForeground(_:)","abstract":"<p>Application will become active soon</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(im)applicationDidBecomeActive:":{"name":"applicationDidBecomeActive(_:)","abstract":"<p>Application is active, restart tasks</p>","parent_name":"AppDelegate"},"Classes/AppDelegate.html#/c:@M@TestC@objc(cs)AppDelegate(im)applicationWillTerminate:":{"name":"applicationWillTerminate(_:)","abstract":"<p>Called when the application is about to terminate.</p>","parent_name":"AppDelegate"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC13sharedContext33_A88E8108A05A2E28B4442C0DC3F762B3LLSQySpySC14signal_contextVGGvZ":{"name":"sharedContext","abstract":"<p>The shared global Signal Context</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC7contextSQySpySC07signal_D0VGGvZ":{"name":"context","abstract":"<p>The shared global Signal Context</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC7contextSQySpySC07signal_D0VGGv":{"name":"context","abstract":"<p>The shared global Signal Context</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC13instanceCount33_A88E8108A05A2E28B4442C0DC3F762B3LLSivZ":{"name":"instanceCount","abstract":"<p>Number of instances</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC13protocolStore33_A88E8108A05A2E28B4442C0DC3F762B3LLSQys13OpaquePointerVGv":{"name":"protocolStore","abstract":"<p>The protocol store context for the Signal C Library</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC16identityKeyStore33_A88E8108A05A2E28B4442C0DC3F762B3LLAA08IdentityeF0Cv":{"name":"identityKeyStore","abstract":"<p>The Identity Key store that relays the callbacks to the identity key module</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC11preKeyStore33_A88E8108A05A2E28B4442C0DC3F762B3LLAA03PreeF0Cv":{"name":"preKeyStore","abstract":"<p>The Pre Key store that relays the callbacks to the pre key module</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC14senderKeyStore33_A88E8108A05A2E28B4442C0DC3F762B3LLAA06SendereF0Cv":{"name":"senderKeyStore","abstract":"<p>The Sender Key store that relays the callbacks to the sender key module</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC12sessionStore33_A88E8108A05A2E28B4442C0DC3F762B3LLAA07SessionE0Cv":{"name":"sessionStore","abstract":"<p>The Session store that relays the callbacks to the session module</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC17signedPreKeyStore33_A88E8108A05A2E28B4442C0DC3F762B3LLAA06SignedefG0Cv":{"name":"signedPreKeyStore","abstract":"<p>The Signed Pre Key store that relays the callbacks to the signed pre key module</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceCACSgAA16KeyStoreDelegate_pSg03keyE0_tcfc":{"name":"init(keyStore:)","abstract":"<p>Initialize a <code>SignalInterface</code> with a <code><a href=\"36f8f5912051ae747ef441d6511ca4cbProtocols/KeyStoreDelegate.html\">KeyStoreDelegate</a></code> that provides all","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceCACSgAA24IdentityKeyStoreDelegate_p08identityeF0_AA03PreefG0_p03preeF0AA06SenderefG0_p06sendereF0AA07SessionfG0_p07sessionF0AA06SignediefG0_p06signedieF0tcfc":{"name":"init(identityKeyStore:preKeyStore:senderKeyStore:sessionStore:signedPreKeyStore:)","abstract":"<p>Initialize a <code>SignalInterface</code> with all the necessary storage implementations. Create a single","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceCfd":{"name":"deinit","abstract":"<p>Destroy the protocol context and possibly the global context</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC7encryptSays5UInt8VGSgSS4text_AA9CHAddressV2totF":{"name":"encrypt(text:to:)","abstract":"<p>Encrypt a message for a recipient.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC14encryptInitialSays5UInt8VGSgSS4text_AA9CHAddressV2toAG4withAG3andtF":{"name":"encryptInitial(text:to:with:and:)","abstract":"<p>Create a session and encrypt an initial message.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC7encryptSays5UInt8VGAG7message_AA9CHAddressV2totKF":{"name":"encrypt(message:to:)","abstract":"<p>Encrypt a message for a recipient.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC14encryptInitialSays5UInt8VGAG_AA9CHAddressV2toAG4withAG3andtKF":{"name":"encryptInitial(_:to:with:and:)","abstract":"<p>Create a session and encrypt an initial message.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC25createSessionPreKeyBundle33_A88E8108A05A2E28B4442C0DC3F762B3LLs13OpaquePointerVSays5UInt8VG4from_AJ3andtKF":{"name":"createSessionPreKeyBundle(from:and:)","abstract":"<p>Create a Session Pre Key Bundle from a serialized Pre Key Bundle and Pre Key.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC11decryptTextSSSgSays5UInt8VG_AA9CHAddressV4fromSb16trustNewIdentitytF":{"name":"decryptText(_:from:trustNewIdentity:)","abstract":"<p>Decrypt a message from a sender.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC7decryptSays5UInt8VGAG_AA9CHAddressV4fromSb16trustNewIdentitytKF":{"name":"decrypt(_:from:trustNewIdentity:)","abstract":"<p>Decrypt a message from a sender.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC15decryptInternal33_A88E8108A05A2E28B4442C0DC3F762B3LLSays5UInt8VGAH_AA9CHAddressV4fromSb16isInitialMessageSb16trustNewIdentitytKF":{"name":"decryptInternal(_:from:isInitialMessage:trustNewIdentity:)","abstract":"<p>Internal function to decrypt a message.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC23generateIdentityKeyPairSays5UInt8VGSgyFZ":{"name":"generateIdentityKeyPair()","abstract":"<p>Generate an identity key pair. Clients should only do this once, at install time.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC22generateRegistrationIDSiSgyFZ":{"name":"generateRegistrationID()","abstract":"<p>Generate a registration ID. Clients should only do this once, at install time.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC023generatePreKeyBundleAndeF0Says5UInt8VG6bundle_AG03preF0tSgs5Int32V8deviceID_s6UInt32V06signedefN0tF":{"name":"generatePreKeyBundleAndPreKey(deviceID:signedPreKeyID:)","abstract":"<p>Generate a Pre Key Bundle and a Pre Key. This function is mostly convenient for testing. To create a larger number of Pre Keys use <code><a href=\"36f8f5912051ae747ef441d6511ca4cbClasses/SignalInterface.html#/s:5TestC15SignalInterfaceC15generatePreKeyss10DictionaryVys6UInt32VSays5UInt8VGGSi5count_tKF\">generatePreKeys(count:)</a></code>.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC20generatePreKeyBundleSays5UInt8VGs5Int32V8deviceID_s6UInt32V06signedefK0tKF":{"name":"generatePreKeyBundle(deviceID:signedPreKeyID:)","abstract":"<p>Generate a Pre Key Bundle.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC14generatePreKeySays5UInt8VGyKF":{"name":"generatePreKey()","abstract":"<p>Generate a new pre key and add it to the store.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC15generatePreKeyss10DictionaryVys6UInt32VSays5UInt8VGGSi5count_tKF":{"name":"generatePreKeys(count:)","abstract":"<p>Generate a number pre keys with a given pre key ID to start with. This will store the","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC16loadSignedPreKey33_A88E8108A05A2E28B4442C0DC3F762B3LLs13OpaquePointerVs6UInt32V2id_AG08identityG4PairtKF":{"name":"loadSignedPreKey(id:identityKeyPair:)","abstract":"<p>Loads a Signed Pre Key from the store, or creates a new one.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC18createSignedPreKey33_A88E8108A05A2E28B4442C0DC3F762B3LLys6UInt32V2id_s13OpaquePointerV08identityG4PairtKF":{"name":"createSignedPreKey(id:identityKeyPair:)","abstract":"<p>Creates a new Signed Pre Key and adds it to the Store.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC19createGlobalContext33_A88E8108A05A2E28B4442C0DC3F762B3LLyyKFZ":{"name":"createGlobalContext()","abstract":"<p>Create the single global context when the first <code>SignalInterface</code> instance is created.","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC20destroyGlobalContext33_A88E8108A05A2E28B4442C0DC3F762B3LLyyF":{"name":"destroyGlobalContext()","abstract":"<p>Destroy the single global context if the last <code>SignalInterface</code> is destroyed.</p>","parent_name":"SignalInterface"},"Classes/SignalInterface.html#/s:5TestC15SignalInterfaceC3log33_A88E8108A05A2E28B4442C0DC3F762B3LLyAA0B8LogLevelO5level_SS7messagetFZ":{"name":"log(level:message:)","abstract":"<p>Log debug messages to the console.</p>","parent_name":"SignalInterface"},"Classes/SessionStore.html#/s:5TestC12SessionStoreC8delegateAA0bC8Delegate_pv":{"name":"delegate","abstract":"<p>The delegate that receives the callbacks for the identity key store</p>","parent_name":"SessionStore"},"Classes/SessionStore.html#/s:5TestC12SessionStoreC12storeContext33_3F4DA91260B0B8025C1CBD6A8A64E9E0LLs13OpaquePointerVv":{"name":"storeContext","abstract":"<p>The context needed to register the callbacks</p>","parent_name":"SessionStore"},"Classes/SessionStore.html#/s:5TestC12SessionStoreCACSgs13OpaquePointerV4with_AA0bC8Delegate_p8delegatetcfc":{"name":"init(with:delegate:)","abstract":"<p>Initialize the identity key store with the context. Will be called when a","parent_name":"SessionStore"},"Classes/SignedPreKeyStore.html#/s:5TestC17SignedPreKeyStoreC8delegateAA0bcdE8Delegate_pv":{"name":"delegate","abstract":"<p>The delegate that receives the callbacks for the identity key store</p>","parent_name":"SignedPreKeyStore"},"Classes/SignedPreKeyStore.html#/s:5TestC17SignedPreKeyStoreC12retainedData33_98D778FCB813511A919CD5A09B68A43BLLSays5UInt8VGv":{"name":"retainedData","abstract":"<p>Private variable to retain data until the callbacks have copied it</p>","parent_name":"SignedPreKeyStore"},"Classes/SignedPreKeyStore.html#/s:5TestC17SignedPreKeyStoreC12storeContext33_98D778FCB813511A919CD5A09B68A43BLLs13OpaquePointerVv":{"name":"storeContext","abstract":"<p>The context needed to register the callbacks</p>","parent_name":"SignedPreKeyStore"},"Classes/SignedPreKeyStore.html#/s:5TestC17SignedPreKeyStoreCACSgs13OpaquePointerV4with_AA0bcdE8Delegate_p8delegatetcfc":{"name":"init(with:delegate:)","abstract":"<p>Initialize the identity key store with the context. Will be called when a","parent_name":"SignedPreKeyStore"},"Classes/PreKeyStore.html#/s:5TestC11PreKeyStoreC8delegateAA0bcD8Delegate_pv":{"name":"delegate","abstract":"<p>The delegate that receives the callbacks for the identity key store</p>","parent_name":"PreKeyStore"},"Classes/PreKeyStore.html#/s:5TestC11PreKeyStoreC12storeContext33_D0CA85FD3C456D42F01EDBFA029B9BD6LLs13OpaquePointerVv":{"name":"storeContext","abstract":"<p>The context needed to register the callbacks</p>","parent_name":"PreKeyStore"},"Classes/PreKeyStore.html#/s:5TestC11PreKeyStoreCACSgs13OpaquePointerV4with_AA0bcD8Delegate_p8delegatetcfc":{"name":"init(with:delegate:)","abstract":"<p>Initialize the identity key store with the context. Will be called when a","parent_name":"PreKeyStore"},"Classes/SenderKeyStore.html#/s:5TestC14SenderKeyStoreC8delegateAA0bcD8Delegate_pv":{"name":"delegate","abstract":"<p>The delegate that receives the callbacks for the sender key store</p>","parent_name":"SenderKeyStore"},"Classes/SenderKeyStore.html#/s:5TestC14SenderKeyStoreC12retainedData33_AAC659B64DB16D46D6F00513764E6A1DLLSays5UInt8VGv":{"name":"retainedData","abstract":"<p>Private variable to retain data until the callbacks have copied it</p>","parent_name":"SenderKeyStore"},"Classes/SenderKeyStore.html#/s:5TestC14SenderKeyStoreC12storeContext33_AAC659B64DB16D46D6F00513764E6A1DLLs13OpaquePointerVv":{"name":"storeContext","abstract":"<p>The context needed to register the callbacks</p>","parent_name":"SenderKeyStore"},"Classes/SenderKeyStore.html#/s:5TestC14SenderKeyStoreCACSgs13OpaquePointerV4with_AA0bcD8Delegate_p8delegatetcfc":{"name":"init(with:delegate:)","abstract":"<p>Initialize the identity key store with the context. Will be called when a","parent_name":"SenderKeyStore"},"Classes/IdentityKeyStore.html#/s:5TestC16IdentityKeyStoreC8delegateAA0bcD8Delegate_pv":{"name":"delegate","abstract":"<p>The delegate handling persistent storage</p>","parent_name":"IdentityKeyStore"},"Classes/IdentityKeyStore.html#/s:5TestC16IdentityKeyStoreC14registrationID33_063ADA8EE3B91BE8DB570039B80EBE41LLs6UInt32Vv":{"name":"registrationID","abstract":"<p>Store the registration ID for the callback</p>","parent_name":"IdentityKeyStore"},"Classes/IdentityKeyStore.html#/s:5TestC16IdentityKeyStoreC12storeContext33_063ADA8EE3B91BE8DB570039B80EBE41LLs13OpaquePointerVv":{"name":"storeContext","abstract":"<p>The context needed to register the callbacks</p>","parent_name":"IdentityKeyStore"},"Classes/IdentityKeyStore.html#/s:5TestC16IdentityKeyStoreCACSgs13OpaquePointerV4with_AA0bcD8Delegate_p8delegatetcfc":{"name":"init(with:delegate:)","abstract":"<p>Initialize the identity key store with the context. Will be called when a","parent_name":"IdentityKeyStore"},"Classes/IdentityKeyStore.html":{"name":"IdentityKeyStore","abstract":"<p>Relays the callbacks of the Signal API to the delegate responsible for persistent store</p>"},"Classes/SenderKeyStore.html":{"name":"SenderKeyStore","abstract":"<p>Wrapper class to register and receive callback functions for the"},"Classes/PreKeyStore.html":{"name":"PreKeyStore","abstract":"<p>Wrapper class to register and receive callback functions for the"},"Classes/SignedPreKeyStore.html":{"name":"SignedPreKeyStore","abstract":"<p>Wrapper class to register and receive callback functions for the"},"Classes/SessionStore.html":{"name":"SessionStore","abstract":"<p>Wrapper class to register and receive callback functions for the"},"Classes/SignalInterface.html":{"name":"SignalInterface","abstract":"<p>This class provides the only active interaction with the Signal Protocol API.</p>"},"Classes/AppDelegate.html":{"name":"AppDelegate","abstract":"<p>The access point of the App</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enums","abstract":"<p>The following enums are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Functions.html":{"name":"Functions","abstract":"<p>The following functions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structs","abstract":"<p>The following structs are available globally.</p>"},"Typealiases.html":{"name":"Typealiases","abstract":"<p>The following typealiases are available globally.</p>"}}